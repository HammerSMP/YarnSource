/*
 * Decompiled with CFR 0.149.
 * 
 * Could not load the following classes:
 *  com.google.common.collect.ImmutableList
 *  com.google.common.collect.ImmutableSet
 */
package net.minecraft;

import com.google.common.collect.ImmutableList;
import com.google.common.collect.ImmutableSet;
import java.util.List;
import java.util.OptionalInt;
import java.util.Set;
import java.util.function.Supplier;
import net.minecraft.block.Block;
import net.minecraft.block.BlockState;
import net.minecraft.block.Blocks;
import net.minecraft.block.MushroomBlock;
import net.minecraft.block.SweetBerryBushBlock;
import net.minecraft.class_5428;
import net.minecraft.class_5437;
import net.minecraft.fluid.FluidState;
import net.minecraft.fluid.Fluids;
import net.minecraft.server.world.ServerWorld;
import net.minecraft.util.registry.BuiltinRegistries;
import net.minecraft.util.registry.Registry;
import net.minecraft.world.Heightmap;
import net.minecraft.world.gen.GenerationStep;
import net.minecraft.world.gen.ProbabilityConfig;
import net.minecraft.world.gen.decorator.AlterGroundTreeDecorator;
import net.minecraft.world.gen.decorator.BeehiveTreeDecorator;
import net.minecraft.world.gen.decorator.CarvingMaskDecoratorConfig;
import net.minecraft.world.gen.decorator.ChanceDecoratorConfig;
import net.minecraft.world.gen.decorator.CocoaBeansTreeDecorator;
import net.minecraft.world.gen.decorator.ConfiguredDecorator;
import net.minecraft.world.gen.decorator.CountDepthDecoratorConfig;
import net.minecraft.world.gen.decorator.CountExtraChanceDecoratorConfig;
import net.minecraft.world.gen.decorator.Decorator;
import net.minecraft.world.gen.decorator.DecoratorConfig;
import net.minecraft.world.gen.decorator.LeaveVineTreeDecorator;
import net.minecraft.world.gen.decorator.NoiseHeightmapDecoratorConfig;
import net.minecraft.world.gen.decorator.NopeDecoratorConfig;
import net.minecraft.world.gen.decorator.RangeDecoratorConfig;
import net.minecraft.world.gen.decorator.TopSolidHeightmapNoiseBiasedDecoratorConfig;
import net.minecraft.world.gen.decorator.TreeDecorator;
import net.minecraft.world.gen.decorator.TrunkVineTreeDecorator;
import net.minecraft.world.gen.feature.BasaltColumnsFeatureConfig;
import net.minecraft.world.gen.feature.BlockPileFeatureConfig;
import net.minecraft.world.gen.feature.ConfiguredFeature;
import net.minecraft.world.gen.feature.DeltaFeatureConfig;
import net.minecraft.world.gen.feature.DiskFeatureConfig;
import net.minecraft.world.gen.feature.EmeraldOreFeatureConfig;
import net.minecraft.world.gen.feature.EndGatewayFeatureConfig;
import net.minecraft.world.gen.feature.EndSpikeFeature;
import net.minecraft.world.gen.feature.EndSpikeFeatureConfig;
import net.minecraft.world.gen.feature.Feature;
import net.minecraft.world.gen.feature.FeatureConfig;
import net.minecraft.world.gen.feature.HugeFungusFeatureConfig;
import net.minecraft.world.gen.feature.HugeMushroomFeatureConfig;
import net.minecraft.world.gen.feature.JungleFoliagePlacer;
import net.minecraft.world.gen.feature.MegaPineFoliagePlacer;
import net.minecraft.world.gen.feature.OreFeatureConfig;
import net.minecraft.world.gen.feature.RandomBooleanFeatureConfig;
import net.minecraft.world.gen.feature.RandomFeatureConfig;
import net.minecraft.world.gen.feature.RandomFeatureEntry;
import net.minecraft.world.gen.feature.RandomPatchFeatureConfig;
import net.minecraft.world.gen.feature.SeaPickleFeatureConfig;
import net.minecraft.world.gen.feature.SimpleBlockFeatureConfig;
import net.minecraft.world.gen.feature.SimpleRandomFeatureConfig;
import net.minecraft.world.gen.feature.SingleStateFeatureConfig;
import net.minecraft.world.gen.feature.SpringFeatureConfig;
import net.minecraft.world.gen.feature.TreeFeatureConfig;
import net.minecraft.world.gen.feature.size.ThreeLayersFeatureSize;
import net.minecraft.world.gen.feature.size.TwoLayersFeatureSize;
import net.minecraft.world.gen.foliage.AcaciaFoliagePlacer;
import net.minecraft.world.gen.foliage.BlobFoliagePlacer;
import net.minecraft.world.gen.foliage.BushFoliagePlacer;
import net.minecraft.world.gen.foliage.DarkOakFoliagePlacer;
import net.minecraft.world.gen.foliage.LargeOakFoliagePlacer;
import net.minecraft.world.gen.foliage.PineFoliagePlacer;
import net.minecraft.world.gen.foliage.SpruceFoliagePlacer;
import net.minecraft.world.gen.placer.ColumnPlacer;
import net.minecraft.world.gen.placer.DoublePlantPlacer;
import net.minecraft.world.gen.placer.SimpleBlockPlacer;
import net.minecraft.world.gen.stateprovider.ForestFlowerBlockStateProvider;
import net.minecraft.world.gen.stateprovider.PillarBlockStateProvider;
import net.minecraft.world.gen.stateprovider.PlainsFlowerBlockStateProvider;
import net.minecraft.world.gen.stateprovider.SimpleBlockStateProvider;
import net.minecraft.world.gen.stateprovider.WeightedBlockStateProvider;
import net.minecraft.world.gen.trunk.DarkOakTrunkPlacer;
import net.minecraft.world.gen.trunk.ForkingTrunkPlacer;
import net.minecraft.world.gen.trunk.GiantTrunkPlacer;
import net.minecraft.world.gen.trunk.LargeOakTrunkPlacer;
import net.minecraft.world.gen.trunk.MegaJungleTrunkPlacer;
import net.minecraft.world.gen.trunk.StraightTrunkPlacer;

public class class_5464 {
    public static final ConfiguredFeature<?, ?> NOPE = class_5464.method_30590("nope", Feature.NO_OP.configure(FeatureConfig.DEFAULT));
    public static final ConfiguredFeature<?, ?> END_SPIKE = class_5464.method_30590("end_spike", Feature.END_SPIKE.configure(new EndSpikeFeatureConfig(false, (List<EndSpikeFeature.Spike>)ImmutableList.of(), null)));
    public static final ConfiguredFeature<?, ?> END_GATEWAY = class_5464.method_30590("end_gateway", Feature.END_GATEWAY.configure(EndGatewayFeatureConfig.createConfig(ServerWorld.END_SPAWN_POS, true)).method_30374((ConfiguredDecorator)Decorator.END_GATEWAY.configure(DecoratorConfig.DEFAULT)));
    public static final ConfiguredFeature<?, ?> END_GATEWAY_DELAYED = class_5464.method_30590("end_gateway_delayed", Feature.END_GATEWAY.configure(EndGatewayFeatureConfig.createConfig()));
    public static final ConfiguredFeature<?, ?> CHORUS_PLANT = class_5464.method_30590("chorus_plant", (ConfiguredFeature)Feature.CHORUS_PLANT.configure(FeatureConfig.DEFAULT).method_30374((ConfiguredDecorator)class_5466.field_26165).method_30376(4));
    public static final ConfiguredFeature<?, ?> END_ISLAND = class_5464.method_30590("end_island", Feature.END_ISLAND.configure(FeatureConfig.DEFAULT));
    public static final ConfiguredFeature<?, ?> END_ISLAND_DECORATED = class_5464.method_30590("end_island_decorated", END_ISLAND.method_30374((ConfiguredDecorator)Decorator.END_ISLAND.configure(DecoratorConfig.DEFAULT)));
    public static final ConfiguredFeature<?, ?> DELTA = class_5464.method_30590("delta", Feature.DELTA_FEATURE.configure(new DeltaFeatureConfig(class_5467.field_26203, class_5467.field_26222, class_5428.method_30315(3, 4), class_5428.method_30315(0, 2))).method_30374((ConfiguredDecorator)Decorator.COUNT_MULTILAYER.configure(new SeaPickleFeatureConfig(40))));
    public static final ConfiguredFeature<?, ?> SMALL_BASALT_COLUMNS = class_5464.method_30590("small_basalt_columns", Feature.BASALT_COLUMNS.configure(new BasaltColumnsFeatureConfig(class_5428.method_30314(1), class_5428.method_30315(1, 3))).method_30374((ConfiguredDecorator)Decorator.COUNT_MULTILAYER.configure(new SeaPickleFeatureConfig(4))));
    public static final ConfiguredFeature<?, ?> LARGE_BASALT_COLUMNS = class_5464.method_30590("large_basalt_columns", Feature.BASALT_COLUMNS.configure(new BasaltColumnsFeatureConfig(class_5428.method_30315(2, 1), class_5428.method_30315(5, 5))).method_30374((ConfiguredDecorator)Decorator.COUNT_MULTILAYER.configure(new SeaPickleFeatureConfig(2))));
    public static final ConfiguredFeature<?, ?> BASALT_BLOBS = class_5464.method_30590("basalt_blobs", (ConfiguredFeature)((ConfiguredFeature)((ConfiguredFeature)Feature.NETHERRACK_REPLACE_BLOBS.configure(new class_5437(class_5467.field_26181, class_5467.field_26195, class_5428.method_30315(3, 4))).method_30377(128)).method_30371()).method_30375(75));
    public static final ConfiguredFeature<?, ?> BLACKSTONE_BLOBS = class_5464.method_30590("blackstone_blobs", (ConfiguredFeature)((ConfiguredFeature)((ConfiguredFeature)Feature.NETHERRACK_REPLACE_BLOBS.configure(new class_5437(class_5467.field_26181, class_5467.field_26226, class_5428.method_30315(3, 4))).method_30377(128)).method_30371()).method_30375(25));
    public static final ConfiguredFeature<?, ?> GLOWSTONE_EXTRA = class_5464.method_30590("glowstone_extra", Feature.GLOWSTONE_BLOB.configure(FeatureConfig.DEFAULT).method_30374((ConfiguredDecorator)Decorator.GLOWSTONE.configure(new SeaPickleFeatureConfig(10))));
    public static final ConfiguredFeature<?, ?> GLOWSTONE = class_5464.method_30590("glowstone", (ConfiguredFeature)((ConfiguredFeature)((ConfiguredFeature)Feature.GLOWSTONE_BLOB.configure(FeatureConfig.DEFAULT).method_30377(128)).method_30371()).method_30375(10));
    public static final ConfiguredFeature<?, ?> CRIMSON_FOREST_VEGETATION = class_5464.method_30590("crimson_forest_vegetation", Feature.NETHER_FOREST_VEGETATION.configure(class_5465.field_26151).method_30374((ConfiguredDecorator)Decorator.COUNT_MULTILAYER.configure(new SeaPickleFeatureConfig(6))));
    public static final ConfiguredFeature<?, ?> WARPED_FOREST_VEGETATION = class_5464.method_30590("warped_forest_vegetation", Feature.NETHER_FOREST_VEGETATION.configure(class_5465.field_26152).method_30374((ConfiguredDecorator)Decorator.COUNT_MULTILAYER.configure(new SeaPickleFeatureConfig(5))));
    public static final ConfiguredFeature<?, ?> NETHER_SPROUTS = class_5464.method_30590("nether_sprouts", Feature.NETHER_FOREST_VEGETATION.configure(class_5465.field_26153).method_30374((ConfiguredDecorator)Decorator.COUNT_MULTILAYER.configure(new SeaPickleFeatureConfig(4))));
    public static final ConfiguredFeature<?, ?> TWISTING_VINES = class_5464.method_30590("twisting_vines", (ConfiguredFeature)((ConfiguredFeature)((ConfiguredFeature)Feature.TWISTING_VINES.configure(FeatureConfig.DEFAULT).method_30377(128)).method_30371()).method_30375(10));
    public static final ConfiguredFeature<?, ?> WEEPING_VINES = class_5464.method_30590("weeping_vines", (ConfiguredFeature)((ConfiguredFeature)((ConfiguredFeature)Feature.WEEPING_VINES.configure(FeatureConfig.DEFAULT).method_30377(128)).method_30371()).method_30375(10));
    public static final ConfiguredFeature<?, ?> BASALT_PILLAR = class_5464.method_30590("basalt_pillar", (ConfiguredFeature)((ConfiguredFeature)((ConfiguredFeature)Feature.BASALT_PILLAR.configure(FeatureConfig.DEFAULT).method_30377(128)).method_30371()).method_30375(10));
    public static final ConfiguredFeature<?, ?> SEAGRASS_COLD = class_5464.method_30590("seagrass_cold", ((ConfiguredFeature)Feature.field_13567.configure(new ProbabilityConfig(0.3f)).method_30375(32)).method_30374((ConfiguredDecorator)class_5466.field_26167));
    public static final ConfiguredFeature<?, ?> SEAGRASS_DEEP_COLD = class_5464.method_30590("seagrass_deep_cold", ((ConfiguredFeature)Feature.field_13567.configure(new ProbabilityConfig(0.8f)).method_30375(40)).method_30374((ConfiguredDecorator)class_5466.field_26167));
    public static final ConfiguredFeature<?, ?> SEAGRASS_NORMAL = class_5464.method_30590("seagrass_normal", ((ConfiguredFeature)Feature.field_13567.configure(new ProbabilityConfig(0.3f)).method_30375(48)).method_30374((ConfiguredDecorator)class_5466.field_26167));
    public static final ConfiguredFeature<?, ?> SEAGRASS_RIVER = class_5464.method_30590("seagrass_river", ((ConfiguredFeature)Feature.field_13567.configure(new ProbabilityConfig(0.4f)).method_30375(48)).method_30374((ConfiguredDecorator)class_5466.field_26167));
    public static final ConfiguredFeature<?, ?> SEAGRASS_DEEP = class_5464.method_30590("seagrass_deep", ((ConfiguredFeature)Feature.field_13567.configure(new ProbabilityConfig(0.8f)).method_30375(48)).method_30374((ConfiguredDecorator)class_5466.field_26167));
    public static final ConfiguredFeature<?, ?> SEAGRASS_SWAMP = class_5464.method_30590("seagrass_swamp", ((ConfiguredFeature)Feature.field_13567.configure(new ProbabilityConfig(0.6f)).method_30375(64)).method_30374((ConfiguredDecorator)class_5466.field_26167));
    public static final ConfiguredFeature<?, ?> SEAGRASS_WARM = class_5464.method_30590("seagrass_warm", ((ConfiguredFeature)Feature.field_13567.configure(new ProbabilityConfig(0.3f)).method_30375(80)).method_30374((ConfiguredDecorator)class_5466.field_26167));
    public static final ConfiguredFeature<?, ?> SEAGRASS_DEEP_WARM = class_5464.method_30590("seagrass_deep_warm", ((ConfiguredFeature)Feature.field_13567.configure(new ProbabilityConfig(0.8f)).method_30375(80)).method_30374((ConfiguredDecorator)class_5466.field_26167));
    public static final ConfiguredFeature<?, ?> SEA_PICKLE = class_5464.method_30590("sea_pickle", (ConfiguredFeature)Feature.SEA_PICKLE.configure(new SeaPickleFeatureConfig(20)).method_30374((ConfiguredDecorator)class_5466.field_26167).method_30372(16));
    public static final ConfiguredFeature<?, ?> ICE_SPIKE = class_5464.method_30590("ice_spike", (ConfiguredFeature)Feature.ICE_SPIKE.configure(FeatureConfig.DEFAULT).method_30374((ConfiguredDecorator)class_5466.field_26165).method_30375(3));
    public static final ConfiguredFeature<?, ?> ICE_PATCH = class_5464.method_30590("ice_patch", (ConfiguredFeature)Feature.ICE_PATCH.configure(new DiskFeatureConfig(class_5467.field_26169, class_5428.method_30315(2, 1), 1, (List<BlockState>)ImmutableList.of((Object)class_5467.field_26204, (Object)class_5467.field_26245, (Object)class_5467.field_26228, (Object)class_5467.field_26229, (Object)class_5467.field_26230, (Object)class_5467.field_26231, (Object)class_5467.field_26232))).method_30374((ConfiguredDecorator)class_5466.field_26165).method_30375(2));
    public static final ConfiguredFeature<?, ?> FOREST_ROCK = class_5464.method_30590("forest_rock", (ConfiguredFeature)Feature.FOREST_ROCK.configure(new SingleStateFeatureConfig(class_5467.field_26220)).method_30374((ConfiguredDecorator)class_5466.field_26165).method_30376(2));
    public static final ConfiguredFeature<?, ?> SEAGRASS_SIMPLE = class_5464.method_30590("seagrass_simple", Feature.SIMPLE_BLOCK.configure(new SimpleBlockFeatureConfig(class_5467.field_26221, (List<BlockState>)ImmutableList.of((Object)class_5467.field_26215), (List<BlockState>)ImmutableList.of((Object)class_5467.field_26202), (List<BlockState>)ImmutableList.of((Object)class_5467.field_26202))).method_30374((ConfiguredDecorator)Decorator.CARVING_MASK.configure(new CarvingMaskDecoratorConfig(GenerationStep.Carver.LIQUID, 0.1f))));
    public static final ConfiguredFeature<?, ?> ICEBERG_PACKED = class_5464.method_30590("iceberg_packed", (ConfiguredFeature)Feature.ICEBERG.configure(new SingleStateFeatureConfig(class_5467.field_26169)).method_30374((ConfiguredDecorator)Decorator.ICEBERG.configure(NopeDecoratorConfig.field_24892)).method_30372(16));
    public static final ConfiguredFeature<?, ?> ICEBERG_BLUE = class_5464.method_30590("iceberg_blue", (ConfiguredFeature)Feature.ICEBERG.configure(new SingleStateFeatureConfig(class_5467.field_26170)).method_30374((ConfiguredDecorator)Decorator.ICEBERG.configure(NopeDecoratorConfig.field_24892)).method_30372(200));
    public static final ConfiguredFeature<?, ?> KELP_COLD = class_5464.method_30590("kelp_cold", ((ConfiguredFeature)Feature.KELP.configure(FeatureConfig.DEFAULT).method_30374((ConfiguredDecorator)class_5466.field_26159).method_30371()).method_30374((ConfiguredDecorator)Decorator.COUNT_NOISE_BIASED.configure(new TopSolidHeightmapNoiseBiasedDecoratorConfig(120, 80.0, 0.0))));
    public static final ConfiguredFeature<?, ?> KELP_WARM = class_5464.method_30590("kelp_warm", ((ConfiguredFeature)Feature.KELP.configure(FeatureConfig.DEFAULT).method_30374((ConfiguredDecorator)class_5466.field_26159).method_30371()).method_30374((ConfiguredDecorator)Decorator.COUNT_NOISE_BIASED.configure(new TopSolidHeightmapNoiseBiasedDecoratorConfig(80, 80.0, 0.0))));
    public static final ConfiguredFeature<?, ?> BLUE_ICE = class_5464.method_30590("blue_ice", (ConfiguredFeature)((ConfiguredFeature)Feature.BLUE_ICE.configure(FeatureConfig.DEFAULT).method_30374((ConfiguredDecorator)Decorator.RANGE.configure(new RangeDecoratorConfig(30, 32, 64))).method_30371()).method_30376(19));
    public static final ConfiguredFeature<?, ?> BAMBOO_LIGHT = class_5464.method_30590("bamboo_light", (ConfiguredFeature)Feature.BAMBOO.configure(new ProbabilityConfig(0.0f)).method_30374((ConfiguredDecorator)class_5466.field_26166).method_30375(16));
    public static final ConfiguredFeature<?, ?> BAMBOO = class_5464.method_30590("bamboo", ((ConfiguredFeature)Feature.BAMBOO.configure(new ProbabilityConfig(0.2f)).method_30374((ConfiguredDecorator)class_5466.field_26160).method_30371()).method_30374((ConfiguredDecorator)Decorator.COUNT_NOISE_BIASED.configure(new TopSolidHeightmapNoiseBiasedDecoratorConfig(160, 80.0, 0.3))));
    public static final ConfiguredFeature<?, ?> VINES = class_5464.method_30590("vines", (ConfiguredFeature)((ConfiguredFeature)Feature.VINES.configure(FeatureConfig.DEFAULT).method_30371()).method_30375(50));
    public static final ConfiguredFeature<?, ?> LAKE_WATER = class_5464.method_30590("lake_water", Feature.LAKE.configure(new SingleStateFeatureConfig(class_5467.field_26202)).method_30374((ConfiguredDecorator)Decorator.WATER_LAKE.configure(new ChanceDecoratorConfig(4))));
    public static final ConfiguredFeature<?, ?> LAKE_LAVA = class_5464.method_30590("lake_lava", Feature.LAKE.configure(new SingleStateFeatureConfig(class_5467.field_26203)).method_30374((ConfiguredDecorator)Decorator.LAVA_LAKE.configure(new ChanceDecoratorConfig(80))));
    public static final ConfiguredFeature<?, ?> DISK_CLAY = class_5464.method_30590("disk_clay", Feature.DISK.configure(new DiskFeatureConfig(class_5467.field_26219, class_5428.method_30315(2, 1), 1, (List<BlockState>)ImmutableList.of((Object)class_5467.field_26204, (Object)class_5467.field_26219))).method_30374((ConfiguredDecorator)class_5466.field_26167));
    public static final ConfiguredFeature<?, ?> DISK_GRAVEL = class_5464.method_30590("disk_gravel", Feature.DISK.configure(new DiskFeatureConfig(class_5467.field_26205, class_5428.method_30315(2, 3), 2, (List<BlockState>)ImmutableList.of((Object)class_5467.field_26204, (Object)class_5467.field_26245))).method_30374((ConfiguredDecorator)class_5466.field_26167));
    public static final ConfiguredFeature<?, ?> DISK_SAND = class_5464.method_30590("disk_sand", (ConfiguredFeature)Feature.DISK.configure(new DiskFeatureConfig(class_5467.field_26218, class_5428.method_30315(2, 4), 2, (List<BlockState>)ImmutableList.of((Object)class_5467.field_26204, (Object)class_5467.field_26245))).method_30374((ConfiguredDecorator)class_5466.field_26167).method_30375(3));
    public static final ConfiguredFeature<?, ?> FREEZE_TOP_LAYER = class_5464.method_30590("freeze_top_layer", Feature.FREEZE_TOP_LAYER.configure(FeatureConfig.DEFAULT));
    public static final ConfiguredFeature<?, ?> BONUS_CHEST = class_5464.method_30590("bonus_chest", Feature.BONUS_CHEST.configure(FeatureConfig.DEFAULT));
    public static final ConfiguredFeature<?, ?> VOID_START_PLATFORM = class_5464.method_30590("void_start_platform", Feature.VOID_START_PLATFORM.configure(FeatureConfig.DEFAULT));
    public static final ConfiguredFeature<?, ?> MONSTER_ROOM = class_5464.method_30590("monster_room", (ConfiguredFeature)((ConfiguredFeature)((ConfiguredFeature)Feature.MONSTER_ROOM.configure(FeatureConfig.DEFAULT).method_30377(256)).method_30371()).method_30375(8));
    public static final ConfiguredFeature<?, ?> DESERT_WELL = class_5464.method_30590("desert_well", (ConfiguredFeature)Feature.DESERT_WELL.configure(FeatureConfig.DEFAULT).method_30374((ConfiguredDecorator)class_5466.field_26165).method_30372(1000));
    public static final ConfiguredFeature<?, ?> FOSSIL = class_5464.method_30590("fossil", (ConfiguredFeature)Feature.FOSSIL.configure(FeatureConfig.DEFAULT).method_30372(64));
    public static final ConfiguredFeature<?, ?> SPRING_LAVA_DOUBLE = class_5464.method_30590("spring_lava_double", (ConfiguredFeature)((ConfiguredFeature)Feature.SPRING_FEATURE.configure(class_5465.field_26149).method_30374((ConfiguredDecorator)Decorator.RANGE_VERY_BIASED.configure(new RangeDecoratorConfig(8, 16, 256))).method_30371()).method_30375(40));
    public static final ConfiguredFeature<?, ?> SPRING_LAVA = class_5464.method_30590("spring_lava", (ConfiguredFeature)((ConfiguredFeature)Feature.SPRING_FEATURE.configure(class_5465.field_26149).method_30374((ConfiguredDecorator)Decorator.RANGE_VERY_BIASED.configure(new RangeDecoratorConfig(8, 16, 256))).method_30371()).method_30375(20));
    public static final ConfiguredFeature<?, ?> SPRING_DELTA = class_5464.method_30590("spring_delta", (ConfiguredFeature)((ConfiguredFeature)Feature.SPRING_FEATURE.configure(new SpringFeatureConfig(class_5467.field_26201, true, 4, 1, (Set<Block>)ImmutableSet.of((Object)Blocks.NETHERRACK, (Object)Blocks.SOUL_SAND, (Object)Blocks.GRAVEL, (Object)Blocks.MAGMA_BLOCK, (Object)Blocks.BLACKSTONE))).method_30374((ConfiguredDecorator)class_5466.field_26163).method_30371()).method_30375(16));
    public static final ConfiguredFeature<?, ?> SPRING_CLOSED = class_5464.method_30590("spring_closed", (ConfiguredFeature)((ConfiguredFeature)Feature.SPRING_FEATURE.configure(class_5465.field_26150).method_30374((ConfiguredDecorator)class_5466.field_26162).method_30371()).method_30375(16));
    public static final ConfiguredFeature<?, ?> SPRING_CLOSED_DOUBLE = class_5464.method_30590("spring_closed_double", (ConfiguredFeature)((ConfiguredFeature)Feature.SPRING_FEATURE.configure(class_5465.field_26150).method_30374((ConfiguredDecorator)class_5466.field_26162).method_30371()).method_30375(32));
    public static final ConfiguredFeature<?, ?> SPRING_OPEN = class_5464.method_30590("spring_open", (ConfiguredFeature)((ConfiguredFeature)Feature.SPRING_FEATURE.configure(new SpringFeatureConfig(class_5467.field_26201, false, 4, 1, (Set<Block>)ImmutableSet.of((Object)Blocks.NETHERRACK))).method_30374((ConfiguredDecorator)class_5466.field_26163).method_30371()).method_30375(8));
    public static final ConfiguredFeature<?, ?> SPRING_WATER = class_5464.method_30590("spring_water", (ConfiguredFeature)((ConfiguredFeature)Feature.SPRING_FEATURE.configure(new SpringFeatureConfig(class_5467.field_26193, true, 4, 1, (Set<Block>)ImmutableSet.of((Object)Blocks.STONE, (Object)Blocks.GRANITE, (Object)Blocks.DIORITE, (Object)Blocks.ANDESITE))).method_30374((ConfiguredDecorator)Decorator.RANGE_BIASED.configure(new RangeDecoratorConfig(8, 8, 256))).method_30371()).method_30375(50));
    public static final ConfiguredFeature<?, ?> PILE_HAY = class_5464.method_30590("pile_hay", Feature.BLOCK_PILE.configure(new BlockPileFeatureConfig(new PillarBlockStateProvider(Blocks.HAY_BLOCK))));
    public static final ConfiguredFeature<?, ?> PILE_MELON = class_5464.method_30590("pile_melon", Feature.BLOCK_PILE.configure(new BlockPileFeatureConfig(new SimpleBlockStateProvider(class_5467.field_26176))));
    public static final ConfiguredFeature<?, ?> PILE_SNOW = class_5464.method_30590("pile_snow", Feature.BLOCK_PILE.configure(new BlockPileFeatureConfig(new SimpleBlockStateProvider(class_5467.field_26185))));
    public static final ConfiguredFeature<?, ?> PILE_ICE = class_5464.method_30590("pile_ice", Feature.BLOCK_PILE.configure(new BlockPileFeatureConfig(new WeightedBlockStateProvider().addState(class_5467.field_26170, 1).addState(class_5467.field_26169, 5))));
    public static final ConfiguredFeature<?, ?> PILE_PUMPKIN = class_5464.method_30590("pile_pumpkin", Feature.BLOCK_PILE.configure(new BlockPileFeatureConfig(new WeightedBlockStateProvider().addState(class_5467.field_26177, 19).addState(class_5467.field_26186, 1))));
    public static final ConfiguredFeature<?, ?> PATCH_FIRE = class_5464.method_30590("patch_fire", Feature.RANDOM_PATCH.configure(new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(class_5467.field_26179), SimpleBlockPlacer.INSTANCE).tries(64).whitelist((Set<Block>)ImmutableSet.of((Object)class_5467.field_26181.getBlock())).cannotProject().build()).method_30374((ConfiguredDecorator)class_5466.field_26157));
    public static final ConfiguredFeature<?, ?> PATCH_SOUL_FIRE = class_5464.method_30590("patch_soul_fire", Feature.RANDOM_PATCH.configure(new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(class_5467.field_26180), new SimpleBlockPlacer()).tries(64).whitelist((Set<Block>)ImmutableSet.of((Object)class_5467.field_26182.getBlock())).cannotProject().build()).method_30374((ConfiguredDecorator)class_5466.field_26157));
    public static final ConfiguredFeature<?, ?> PATCH_BROWN_MUSHROOM = class_5464.method_30590("patch_brown_mushroom", Feature.RANDOM_PATCH.configure(new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(class_5467.field_26251), SimpleBlockPlacer.INSTANCE).tries(64).cannotProject().build()));
    public static final ConfiguredFeature<?, ?> PATCH_RED_MUSHROOM = class_5464.method_30590("patch_red_mushroom", Feature.RANDOM_PATCH.configure(new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(class_5467.field_26168), SimpleBlockPlacer.INSTANCE).tries(64).cannotProject().build()));
    public static final ConfiguredFeature<?, ?> PATCH_CRIMSON_ROOTS = class_5464.method_30590("patch_crimson_roots", (ConfiguredFeature)Feature.RANDOM_PATCH.configure(new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(class_5467.field_26183), new SimpleBlockPlacer()).tries(64).cannotProject().build()).method_30377(128));
    public static final ConfiguredFeature<?, ?> PATCH_SUNFLOWER = class_5464.method_30590("patch_sunflower", (ConfiguredFeature)((ConfiguredFeature)Feature.RANDOM_PATCH.configure(new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(class_5467.field_26187), new DoublePlantPlacer()).tries(64).cannotProject().build()).method_30374((ConfiguredDecorator)class_5466.field_26164)).method_30374((ConfiguredDecorator)class_5466.field_26165).method_30375(10));
    public static final ConfiguredFeature<?, ?> PATCH_PUMPKIN = class_5464.method_30590("patch_pumpkin", (ConfiguredFeature)Feature.RANDOM_PATCH.configure(new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(class_5467.field_26177), SimpleBlockPlacer.INSTANCE).tries(64).whitelist((Set<Block>)ImmutableSet.of((Object)class_5467.field_26245.getBlock())).cannotProject().build()).method_30374((ConfiguredDecorator)class_5466.field_26166).method_30372(32));
    public static final ConfiguredFeature<?, ?> PATCH_TAIGA_GRASS = class_5464.method_30590("patch_taiga_grass", Feature.RANDOM_PATCH.configure(class_5465.field_26142));
    public static final ConfiguredFeature<?, ?> PATCH_BERRY_BUSH = class_5464.method_30590("patch_berry_bush", Feature.RANDOM_PATCH.configure(class_5465.field_26146));
    public static final ConfiguredFeature<?, ?> PATCH_GRASS_PLAIN = class_5464.method_30590("patch_grass_plain", ((ConfiguredFeature)Feature.RANDOM_PATCH.configure(class_5465.field_26141).method_30374((ConfiguredDecorator)class_5466.field_26166)).method_30374((ConfiguredDecorator)Decorator.COUNT_NOISE.configure(new NoiseHeightmapDecoratorConfig(-0.8, 5, 10))));
    public static final ConfiguredFeature<?, ?> PATCH_GRASS_FOREST = class_5464.method_30590("patch_grass_forest", (ConfiguredFeature)Feature.RANDOM_PATCH.configure(class_5465.field_26141).method_30374((ConfiguredDecorator)class_5466.field_26166).method_30375(2));
    public static final ConfiguredFeature<?, ?> PATCH_GRASS_BADLANDS = class_5464.method_30590("patch_grass_badlands", Feature.RANDOM_PATCH.configure(class_5465.field_26141).method_30374((ConfiguredDecorator)class_5466.field_26166));
    public static final ConfiguredFeature<?, ?> PATCH_GRASS_SAVANNA = class_5464.method_30590("patch_grass_savanna", (ConfiguredFeature)Feature.RANDOM_PATCH.configure(class_5465.field_26141).method_30374((ConfiguredDecorator)class_5466.field_26166).method_30375(20));
    public static final ConfiguredFeature<?, ?> PATCH_GRASS_NORMAL = class_5464.method_30590("patch_grass_normal", (ConfiguredFeature)Feature.RANDOM_PATCH.configure(class_5465.field_26141).method_30374((ConfiguredDecorator)class_5466.field_26166).method_30375(5));
    public static final ConfiguredFeature<?, ?> PATCH_GRASS_TAIGA_2 = class_5464.method_30590("patch_grass_taiga_2", Feature.RANDOM_PATCH.configure(class_5465.field_26142).method_30374((ConfiguredDecorator)class_5466.field_26166));
    public static final ConfiguredFeature<?, ?> PATCH_GRASS_TAIGA = class_5464.method_30590("patch_grass_taiga", (ConfiguredFeature)Feature.RANDOM_PATCH.configure(class_5465.field_26142).method_30374((ConfiguredDecorator)class_5466.field_26166).method_30375(7));
    public static final ConfiguredFeature<?, ?> PATCH_GRASS_JUNGLE = class_5464.method_30590("patch_grass_jungle", (ConfiguredFeature)Feature.RANDOM_PATCH.configure(class_5465.field_26143).method_30374((ConfiguredDecorator)class_5466.field_26166).method_30375(25));
    public static final ConfiguredFeature<?, ?> PATCH_DEAD_BUSH_2 = class_5464.method_30590("patch_dead_bush_2", (ConfiguredFeature)Feature.RANDOM_PATCH.configure(class_5465.field_26145).method_30374((ConfiguredDecorator)class_5466.field_26166).method_30375(2));
    public static final ConfiguredFeature<?, ?> PATCH_DEAD_BUSH = class_5464.method_30590("patch_dead_bush", Feature.RANDOM_PATCH.configure(class_5465.field_26145).method_30374((ConfiguredDecorator)class_5466.field_26166));
    public static final ConfiguredFeature<?, ?> PATCH_DEAD_BUSH_BADLANDS = class_5464.method_30590("patch_dead_bush_badlands", (ConfiguredFeature)Feature.RANDOM_PATCH.configure(class_5465.field_26145).method_30374((ConfiguredDecorator)class_5466.field_26166).method_30375(20));
    public static final ConfiguredFeature<?, ?> PATCH_MELON = class_5464.method_30590("patch_melon", Feature.RANDOM_PATCH.configure(new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(class_5467.field_26176), SimpleBlockPlacer.INSTANCE).tries(64).whitelist((Set<Block>)ImmutableSet.of((Object)class_5467.field_26245.getBlock())).canReplace().cannotProject().build()).method_30374((ConfiguredDecorator)class_5466.field_26166));
    public static final ConfiguredFeature<?, ?> PATCH_BERRY_SPARSE = class_5464.method_30590("patch_berry_sparse", PATCH_BERRY_BUSH.method_30374((ConfiguredDecorator)class_5466.field_26166));
    public static final ConfiguredFeature<?, ?> PATCH_BERRY_DECORATED = class_5464.method_30590("patch_berry_decorated", (ConfiguredFeature)PATCH_BERRY_BUSH.method_30374((ConfiguredDecorator)class_5466.field_26166).method_30372(12));
    public static final ConfiguredFeature<?, ?> PATCH_WATERLILLY = class_5464.method_30590("patch_waterlilly", (ConfiguredFeature)Feature.RANDOM_PATCH.configure(new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(class_5467.field_26184), SimpleBlockPlacer.INSTANCE).tries(10).build()).method_30374((ConfiguredDecorator)class_5466.field_26166).method_30375(4));
    public static final ConfiguredFeature<?, ?> PATCH_TALL_GRASS_2 = class_5464.method_30590("patch_tall_grass_2", ((ConfiguredFeature)((ConfiguredFeature)Feature.RANDOM_PATCH.configure(class_5465.field_26147).method_30374((ConfiguredDecorator)class_5466.field_26164)).method_30374((ConfiguredDecorator)class_5466.field_26158).method_30371()).method_30374((ConfiguredDecorator)Decorator.COUNT_NOISE.configure(new NoiseHeightmapDecoratorConfig(-0.8, 0, 7))));
    public static final ConfiguredFeature<?, ?> PATCH_TALL_GRASS = class_5464.method_30590("patch_tall_grass", (ConfiguredFeature)((ConfiguredFeature)Feature.RANDOM_PATCH.configure(class_5465.field_26147).method_30374((ConfiguredDecorator)class_5466.field_26164)).method_30374((ConfiguredDecorator)class_5466.field_26165).method_30375(7));
    public static final ConfiguredFeature<?, ?> PATCH_LARGE_FERN = class_5464.method_30590("patch_large_fern", (ConfiguredFeature)((ConfiguredFeature)Feature.RANDOM_PATCH.configure(new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(class_5467.field_26246), new DoublePlantPlacer()).tries(64).cannotProject().build()).method_30374((ConfiguredDecorator)class_5466.field_26164)).method_30374((ConfiguredDecorator)class_5466.field_26165).method_30375(7));
    public static final ConfiguredFeature<?, ?> PATCH_CACTUS = class_5464.method_30590("patch_cactus", Feature.RANDOM_PATCH.configure(new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(class_5467.field_26188), new ColumnPlacer(1, 2)).tries(10).cannotProject().build()));
    public static final ConfiguredFeature<?, ?> PATCH_CACTUS_DESERT = class_5464.method_30590("patch_cactus_desert", (ConfiguredFeature)PATCH_CACTUS.method_30374((ConfiguredDecorator)class_5466.field_26166).method_30375(10));
    public static final ConfiguredFeature<?, ?> PATCH_CACTUS_DECORATED = class_5464.method_30590("patch_cactus_decorated", (ConfiguredFeature)PATCH_CACTUS.method_30374((ConfiguredDecorator)class_5466.field_26166).method_30375(5));
    public static final ConfiguredFeature<?, ?> PATCH_SUGAR_CANE_SWAMP = class_5464.method_30590("patch_sugar_cane_swamp", (ConfiguredFeature)Feature.RANDOM_PATCH.configure(class_5465.field_26148).method_30374((ConfiguredDecorator)class_5466.field_26166).method_30375(20));
    public static final ConfiguredFeature<?, ?> PATCH_SUGAR_CANE_DESERT = class_5464.method_30590("patch_sugar_cane_desert", (ConfiguredFeature)Feature.RANDOM_PATCH.configure(class_5465.field_26148).method_30374((ConfiguredDecorator)class_5466.field_26166).method_30375(60));
    public static final ConfiguredFeature<?, ?> PATCH_SUGAR_CANE_BADLANDS = class_5464.method_30590("patch_sugar_cane_badlands", (ConfiguredFeature)Feature.RANDOM_PATCH.configure(class_5465.field_26148).method_30374((ConfiguredDecorator)class_5466.field_26166).method_30375(13));
    public static final ConfiguredFeature<?, ?> PATCH_SUGAR_CANE = class_5464.method_30590("patch_sugar_cane", (ConfiguredFeature)Feature.RANDOM_PATCH.configure(class_5465.field_26148).method_30374((ConfiguredDecorator)class_5466.field_26166).method_30375(10));
    public static final ConfiguredFeature<?, ?> BROWN_MUSHROOM_NETHER = class_5464.method_30590("brown_mushroom_nether", (ConfiguredFeature)((ConfiguredFeature)PATCH_BROWN_MUSHROOM.method_30377(128)).method_30372(2));
    public static final ConfiguredFeature<?, ?> RED_MUSHROOM_NETHER = class_5464.method_30590("red_mushroom_nether", (ConfiguredFeature)((ConfiguredFeature)PATCH_RED_MUSHROOM.method_30377(128)).method_30372(2));
    public static final ConfiguredFeature<?, ?> BROWN_MUSHROOM_NORMAL = class_5464.method_30590("brown_mushroom_normal", (ConfiguredFeature)PATCH_BROWN_MUSHROOM.method_30374((ConfiguredDecorator)class_5466.field_26166).method_30372(4));
    public static final ConfiguredFeature<?, ?> RED_MUSHROOM_NORMAL = class_5464.method_30590("red_mushroom_normal", (ConfiguredFeature)PATCH_RED_MUSHROOM.method_30374((ConfiguredDecorator)class_5466.field_26166).method_30372(8));
    public static final ConfiguredFeature<?, ?> BROWN_MUSHROOM_TAIGA = class_5464.method_30590("brown_mushroom_taiga", ((ConfiguredFeature)PATCH_BROWN_MUSHROOM.method_30372(4)).method_30374((ConfiguredDecorator)class_5466.field_26165));
    public static final ConfiguredFeature<?, ?> RED_MUSHROOM_TAIGA = class_5464.method_30590("red_mushroom_taiga", ((ConfiguredFeature)PATCH_RED_MUSHROOM.method_30372(8)).method_30374((ConfiguredDecorator)class_5466.field_26166));
    public static final ConfiguredFeature<?, ?> BROWN_MUSHROOM_GIANT = class_5464.method_30590("brown_mushroom_giant", (ConfiguredFeature)BROWN_MUSHROOM_TAIGA.method_30375(3));
    public static final ConfiguredFeature<?, ?> RED_MUSHROOM_GIANT = class_5464.method_30590("red_mushroom_giant", (ConfiguredFeature)RED_MUSHROOM_TAIGA.method_30375(3));
    public static final ConfiguredFeature<?, ?> BROWN_MUSHROOM_SWAMP = class_5464.method_30590("brown_mushroom_swamp", (ConfiguredFeature)BROWN_MUSHROOM_TAIGA.method_30375(8));
    public static final ConfiguredFeature<?, ?> RED_MUSHROOM_SWAMP = class_5464.method_30590("red_mushroom_swamp", (ConfiguredFeature)RED_MUSHROOM_TAIGA.method_30375(8));
    public static final ConfiguredFeature<?, ?> ORE_MAGMA = class_5464.method_30590("ore_magma", (ConfiguredFeature)((ConfiguredFeature)Feature.ORE.configure(new OreFeatureConfig(OreFeatureConfig.class_5436.field_25846, class_5467.field_26222, 33)).method_30374((ConfiguredDecorator)Decorator.MAGMA.configure(NopeDecoratorConfig.field_24892)).method_30371()).method_30375(4));
    public static final ConfiguredFeature<?, ?> ORE_SOUL_SAND = class_5464.method_30590("ore_soul_sand", (ConfiguredFeature)((ConfiguredFeature)((ConfiguredFeature)Feature.ORE.configure(new OreFeatureConfig(OreFeatureConfig.class_5436.field_25846, class_5467.field_26223, 12)).method_30377(32)).method_30371()).method_30375(12));
    public static final ConfiguredFeature<?, ?> ORE_GOLD_DELTAS = class_5464.method_30590("ore_gold_deltas", (ConfiguredFeature)((ConfiguredFeature)Feature.ORE.configure(new OreFeatureConfig(OreFeatureConfig.class_5436.field_25846, class_5467.field_26224, 10)).method_30374((ConfiguredDecorator)class_5466.field_26162).method_30371()).method_30375(20));
    public static final ConfiguredFeature<?, ?> ORE_QUARTZ_DELTAS = class_5464.method_30590("ore_quartz_deltas", (ConfiguredFeature)((ConfiguredFeature)Feature.ORE.configure(new OreFeatureConfig(OreFeatureConfig.class_5436.field_25846, class_5467.field_26225, 14)).method_30374((ConfiguredDecorator)class_5466.field_26162).method_30371()).method_30375(32));
    public static final ConfiguredFeature<?, ?> ORE_GOLD_NETHER = class_5464.method_30590("ore_gold_nether", (ConfiguredFeature)((ConfiguredFeature)Feature.ORE.configure(new OreFeatureConfig(OreFeatureConfig.class_5436.field_25846, class_5467.field_26224, 10)).method_30374((ConfiguredDecorator)class_5466.field_26162).method_30371()).method_30375(10));
    public static final ConfiguredFeature<?, ?> ORE_QUARTZ_NETHER = class_5464.method_30590("ore_quartz_nether", (ConfiguredFeature)((ConfiguredFeature)Feature.ORE.configure(new OreFeatureConfig(OreFeatureConfig.class_5436.field_25846, class_5467.field_26225, 14)).method_30374((ConfiguredDecorator)class_5466.field_26162).method_30371()).method_30375(16));
    public static final ConfiguredFeature<?, ?> ORE_GRAVEL_NETHER = class_5464.method_30590("ore_gravel_nether", (ConfiguredFeature)((ConfiguredFeature)Feature.ORE.configure(new OreFeatureConfig(OreFeatureConfig.class_5436.field_25846, class_5467.field_26205, 33)).method_30374((ConfiguredDecorator)Decorator.RANGE.configure(new RangeDecoratorConfig(5, 0, 37))).method_30371()).method_30375(2));
    public static final ConfiguredFeature<?, ?> ORE_BLACKSTONE = class_5464.method_30590("ore_blackstone", (ConfiguredFeature)((ConfiguredFeature)Feature.ORE.configure(new OreFeatureConfig(OreFeatureConfig.class_5436.field_25846, class_5467.field_26226, 33)).method_30374((ConfiguredDecorator)Decorator.RANGE.configure(new RangeDecoratorConfig(5, 10, 37))).method_30371()).method_30375(2));
    public static final ConfiguredFeature<?, ?> ORE_DIRT = class_5464.method_30590("ore_dirt", (ConfiguredFeature)((ConfiguredFeature)((ConfiguredFeature)Feature.ORE.configure(new OreFeatureConfig(OreFeatureConfig.class_5436.field_25845, class_5467.field_26204, 33)).method_30377(256)).method_30371()).method_30375(10));
    public static final ConfiguredFeature<?, ?> ORE_GRAVEL = class_5464.method_30590("ore_gravel", (ConfiguredFeature)((ConfiguredFeature)((ConfiguredFeature)Feature.ORE.configure(new OreFeatureConfig(OreFeatureConfig.class_5436.field_25845, class_5467.field_26205, 33)).method_30377(256)).method_30371()).method_30375(8));
    public static final ConfiguredFeature<?, ?> ORE_GRANITE = class_5464.method_30590("ore_granite", (ConfiguredFeature)((ConfiguredFeature)((ConfiguredFeature)Feature.ORE.configure(new OreFeatureConfig(OreFeatureConfig.class_5436.field_25845, class_5467.field_26206, 33)).method_30377(80)).method_30371()).method_30375(10));
    public static final ConfiguredFeature<?, ?> ORE_DIORITE = class_5464.method_30590("ore_diorite", (ConfiguredFeature)((ConfiguredFeature)((ConfiguredFeature)Feature.ORE.configure(new OreFeatureConfig(OreFeatureConfig.class_5436.field_25845, class_5467.field_26207, 33)).method_30377(80)).method_30371()).method_30375(10));
    public static final ConfiguredFeature<?, ?> ORE_ANDESITE = class_5464.method_30590("ore_andesite", (ConfiguredFeature)((ConfiguredFeature)((ConfiguredFeature)Feature.ORE.configure(new OreFeatureConfig(OreFeatureConfig.class_5436.field_25845, class_5467.field_26208, 33)).method_30377(80)).method_30371()).method_30375(10));
    public static final ConfiguredFeature<?, ?> ORE_COAL = class_5464.method_30590("ore_coal", (ConfiguredFeature)((ConfiguredFeature)((ConfiguredFeature)Feature.ORE.configure(new OreFeatureConfig(OreFeatureConfig.class_5436.field_25845, class_5467.field_26209, 17)).method_30377(128)).method_30371()).method_30375(20));
    public static final ConfiguredFeature<?, ?> ORE_IRON = class_5464.method_30590("ore_iron", (ConfiguredFeature)((ConfiguredFeature)((ConfiguredFeature)Feature.ORE.configure(new OreFeatureConfig(OreFeatureConfig.class_5436.field_25845, class_5467.field_26210, 9)).method_30377(64)).method_30371()).method_30375(20));
    public static final ConfiguredFeature<?, ?> ORE_GOLD_EXTRA = class_5464.method_30590("ore_gold_extra", (ConfiguredFeature)((ConfiguredFeature)Feature.ORE.configure(new OreFeatureConfig(OreFeatureConfig.class_5436.field_25845, class_5467.field_26211, 9)).method_30374((ConfiguredDecorator)Decorator.RANGE.configure(new RangeDecoratorConfig(32, 32, 80))).method_30371()).method_30375(20));
    public static final ConfiguredFeature<?, ?> ORE_GOLD = class_5464.method_30590("ore_gold", (ConfiguredFeature)((ConfiguredFeature)((ConfiguredFeature)Feature.ORE.configure(new OreFeatureConfig(OreFeatureConfig.class_5436.field_25845, class_5467.field_26211, 9)).method_30377(32)).method_30371()).method_30375(2));
    public static final ConfiguredFeature<?, ?> ORE_REDSTONE = class_5464.method_30590("ore_redstone", (ConfiguredFeature)((ConfiguredFeature)((ConfiguredFeature)Feature.ORE.configure(new OreFeatureConfig(OreFeatureConfig.class_5436.field_25845, class_5467.field_26212, 8)).method_30377(16)).method_30371()).method_30375(8));
    public static final ConfiguredFeature<?, ?> ORE_DIAMOND = class_5464.method_30590("ore_diamond", (ConfiguredFeature)((ConfiguredFeature)Feature.ORE.configure(new OreFeatureConfig(OreFeatureConfig.class_5436.field_25845, class_5467.field_26213, 8)).method_30377(16)).method_30371());
    public static final ConfiguredFeature<?, ?> ORE_LAPIS = class_5464.method_30590("ore_lapis", (ConfiguredFeature)Feature.ORE.configure(new OreFeatureConfig(OreFeatureConfig.class_5436.field_25845, class_5467.field_26214, 7)).method_30374((ConfiguredDecorator)Decorator.DEPTH_AVERAGE.configure(new CountDepthDecoratorConfig(16, 16))).method_30371());
    public static final ConfiguredFeature<?, ?> ORE_INFESTED = class_5464.method_30590("ore_infested", (ConfiguredFeature)((ConfiguredFeature)((ConfiguredFeature)Feature.ORE.configure(new OreFeatureConfig(OreFeatureConfig.class_5436.field_25845, class_5467.field_26217, 9)).method_30377(64)).method_30371()).method_30375(7));
    public static final ConfiguredFeature<?, ?> ORE_EMERALD = class_5464.method_30590("ore_emerald", Feature.EMERALD_ORE.configure(new EmeraldOreFeatureConfig(class_5467.field_26215, class_5467.field_26216)).method_30374((ConfiguredDecorator)Decorator.EMERALD_ORE.configure(DecoratorConfig.DEFAULT)));
    public static final ConfiguredFeature<?, ?> ORE_DEBRIS_LARGE = class_5464.method_30590("ore_debris_large", (ConfiguredFeature)Feature.NO_SURFACE_ORE.configure(new OreFeatureConfig(OreFeatureConfig.class_5436.field_25847, class_5467.field_26194, 3)).method_30374((ConfiguredDecorator)Decorator.DEPTH_AVERAGE.configure(new CountDepthDecoratorConfig(16, 8))).method_30371());
    public static final ConfiguredFeature<?, ?> ORE_DEBRIS_SMALL = class_5464.method_30590("ore_debris_small", (ConfiguredFeature)Feature.NO_SURFACE_ORE.configure(new OreFeatureConfig(OreFeatureConfig.class_5436.field_25847, class_5467.field_26194, 2)).method_30374((ConfiguredDecorator)Decorator.RANGE.configure(new RangeDecoratorConfig(8, 16, 128))).method_30371());
    public static final ConfiguredFeature<?, ?> CRIMSON_FUNGI = class_5464.method_30590("crimson_fungi", Feature.HUGE_FUNGUS.configure(HugeFungusFeatureConfig.CRIMSON_FUNGUS_NOT_PLANTED_CONFIG).method_30374((ConfiguredDecorator)Decorator.COUNT_MULTILAYER.configure(new SeaPickleFeatureConfig(8))));
    public static final ConfiguredFeature<HugeFungusFeatureConfig, ?> CRIMSON_FUNGI_PLANTED = class_5464.method_30590("crimson_fungi_planted", Feature.HUGE_FUNGUS.configure(HugeFungusFeatureConfig.CRIMSON_FUNGUS_CONFIG));
    public static final ConfiguredFeature<?, ?> WARPED_FUNGI = class_5464.method_30590("warped_fungi", Feature.HUGE_FUNGUS.configure(HugeFungusFeatureConfig.WARPED_FUNGUS_NOT_PLANTED_CONFIG).method_30374((ConfiguredDecorator)Decorator.COUNT_MULTILAYER.configure(new SeaPickleFeatureConfig(8))));
    public static final ConfiguredFeature<HugeFungusFeatureConfig, ?> WARPED_FUNGI_PLANTED = class_5464.method_30590("warped_fungi_planted", Feature.HUGE_FUNGUS.configure(HugeFungusFeatureConfig.WARPED_FUNGUS_CONFIG));
    public static final ConfiguredFeature<?, ?> HUGE_BROWN_MUSHROOM = class_5464.method_30590("huge_brown_mushroom", Feature.HUGE_BROWN_MUSHROOM.configure(new HugeMushroomFeatureConfig(new SimpleBlockStateProvider(class_5467.field_26191), new SimpleBlockStateProvider(class_5467.field_26192), 3)));
    public static final ConfiguredFeature<?, ?> HUGE_RED_MUSHROOM = class_5464.method_30590("huge_red_mushroom", Feature.HUGE_RED_MUSHROOM.configure(new HugeMushroomFeatureConfig(new SimpleBlockStateProvider(class_5467.field_26190), new SimpleBlockStateProvider(class_5467.field_26192), 2)));
    public static final ConfiguredFeature<TreeFeatureConfig, ?> OAK = class_5464.method_30590("oak", Feature.TREE.configure(new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(class_5467.field_26233), new SimpleBlockStateProvider(class_5467.field_26234), new BlobFoliagePlacer(class_5428.method_30314(2), class_5428.method_30314(0), 3), new StraightTrunkPlacer(4, 2, 0), new TwoLayersFeatureSize(1, 0, 1)).ignoreVines().build()));
    public static final ConfiguredFeature<TreeFeatureConfig, ?> DARK_OAK = class_5464.method_30590("dark_oak", Feature.TREE.configure(new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(class_5467.field_26243), new SimpleBlockStateProvider(class_5467.field_26244), new DarkOakFoliagePlacer(class_5428.method_30314(0), class_5428.method_30314(0)), new DarkOakTrunkPlacer(6, 2, 1), new ThreeLayersFeatureSize(1, 1, 0, 1, 2, OptionalInt.empty())).maxWaterDepth(Integer.MAX_VALUE).heightmap(Heightmap.Type.MOTION_BLOCKING).ignoreVines().build()));
    public static final ConfiguredFeature<TreeFeatureConfig, ?> BIRCH = class_5464.method_30590("birch", Feature.TREE.configure(new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(class_5467.field_26241), new SimpleBlockStateProvider(class_5467.field_26242), new BlobFoliagePlacer(class_5428.method_30314(2), class_5428.method_30314(0), 3), new StraightTrunkPlacer(5, 2, 0), new TwoLayersFeatureSize(1, 0, 1)).ignoreVines().build()));
    public static final ConfiguredFeature<TreeFeatureConfig, ?> ACACIA = class_5464.method_30590("acacia", Feature.TREE.configure(new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(class_5467.field_26239), new SimpleBlockStateProvider(class_5467.field_26240), new AcaciaFoliagePlacer(class_5428.method_30314(2), class_5428.method_30314(0)), new ForkingTrunkPlacer(5, 2, 2), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build()));
    public static final ConfiguredFeature<TreeFeatureConfig, ?> SPRUCE = class_5464.method_30590("spruce", Feature.TREE.configure(new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(class_5467.field_26237), new SimpleBlockStateProvider(class_5467.field_26238), new SpruceFoliagePlacer(class_5428.method_30315(2, 1), class_5428.method_30315(0, 2), class_5428.method_30315(1, 1)), new StraightTrunkPlacer(5, 2, 1), new TwoLayersFeatureSize(2, 0, 2)).ignoreVines().build()));
    public static final ConfiguredFeature<TreeFeatureConfig, ?> PINE = class_5464.method_30590("pine", Feature.TREE.configure(new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(class_5467.field_26237), new SimpleBlockStateProvider(class_5467.field_26238), new PineFoliagePlacer(class_5428.method_30314(1), class_5428.method_30314(1), class_5428.method_30315(3, 1)), new StraightTrunkPlacer(6, 4, 0), new TwoLayersFeatureSize(2, 0, 2)).ignoreVines().build()));
    public static final ConfiguredFeature<TreeFeatureConfig, ?> JUNGLE_TREE = class_5464.method_30590("jungle_tree", Feature.TREE.configure(new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(class_5467.field_26235), new SimpleBlockStateProvider(class_5467.field_26236), new BlobFoliagePlacer(class_5428.method_30314(2), class_5428.method_30314(0), 3), new StraightTrunkPlacer(4, 8, 0), new TwoLayersFeatureSize(1, 0, 1)).decorators((List<TreeDecorator>)ImmutableList.of((Object)new CocoaBeansTreeDecorator(0.2f), (Object)TrunkVineTreeDecorator.INSTANCE, (Object)LeaveVineTreeDecorator.INSTANCE)).ignoreVines().build()));
    public static final ConfiguredFeature<TreeFeatureConfig, ?> FANCY_OAK = class_5464.method_30590("fancy_oak", Feature.TREE.configure(new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(class_5467.field_26233), new SimpleBlockStateProvider(class_5467.field_26234), new LargeOakFoliagePlacer(class_5428.method_30314(2), class_5428.method_30314(4), 4), new LargeOakTrunkPlacer(3, 11, 0), new TwoLayersFeatureSize(0, 0, 0, OptionalInt.of(4))).ignoreVines().heightmap(Heightmap.Type.MOTION_BLOCKING).build()));
    public static final ConfiguredFeature<TreeFeatureConfig, ?> JUNGLE_TREE_NO_VINE = class_5464.method_30590("jungle_tree_no_vine", Feature.TREE.configure(new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(class_5467.field_26235), new SimpleBlockStateProvider(class_5467.field_26236), new BlobFoliagePlacer(class_5428.method_30314(2), class_5428.method_30314(0), 3), new StraightTrunkPlacer(4, 8, 0), new TwoLayersFeatureSize(1, 0, 1)).ignoreVines().build()));
    public static final ConfiguredFeature<TreeFeatureConfig, ?> MEGA_JUNGLE_TREE = class_5464.method_30590("mega_jungle_tree", Feature.TREE.configure(new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(class_5467.field_26235), new SimpleBlockStateProvider(class_5467.field_26236), new JungleFoliagePlacer(class_5428.method_30314(2), class_5428.method_30314(0), 2), new MegaJungleTrunkPlacer(10, 2, 19), new TwoLayersFeatureSize(1, 1, 2)).decorators((List<TreeDecorator>)ImmutableList.of((Object)TrunkVineTreeDecorator.INSTANCE, (Object)LeaveVineTreeDecorator.INSTANCE)).build()));
    public static final ConfiguredFeature<TreeFeatureConfig, ?> MEGA_SPRUCE = class_5464.method_30590("mega_spruce", Feature.TREE.configure(new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(class_5467.field_26237), new SimpleBlockStateProvider(class_5467.field_26238), new MegaPineFoliagePlacer(class_5428.method_30314(0), class_5428.method_30314(0), class_5428.method_30315(13, 4)), new GiantTrunkPlacer(13, 2, 14), new TwoLayersFeatureSize(1, 1, 2)).decorators((List<TreeDecorator>)ImmutableList.of((Object)new AlterGroundTreeDecorator(new SimpleBlockStateProvider(class_5467.field_26228)))).build()));
    public static final ConfiguredFeature<TreeFeatureConfig, ?> MEGA_PINE = class_5464.method_30590("mega_pine", Feature.TREE.configure(new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(class_5467.field_26237), new SimpleBlockStateProvider(class_5467.field_26238), new MegaPineFoliagePlacer(class_5428.method_30314(0), class_5428.method_30314(0), class_5428.method_30315(3, 4)), new GiantTrunkPlacer(13, 2, 14), new TwoLayersFeatureSize(1, 1, 2)).decorators((List<TreeDecorator>)ImmutableList.of((Object)new AlterGroundTreeDecorator(new SimpleBlockStateProvider(class_5467.field_26228)))).build()));
    public static final ConfiguredFeature<TreeFeatureConfig, ?> SUPER_BIRCH_BEES_0002 = class_5464.method_30590("super_birch_bees_0002", Feature.TREE.configure(new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(class_5467.field_26241), new SimpleBlockStateProvider(class_5467.field_26242), new BlobFoliagePlacer(class_5428.method_30314(2), class_5428.method_30314(0), 3), new StraightTrunkPlacer(5, 2, 6), new TwoLayersFeatureSize(1, 0, 1)).ignoreVines().decorators((List<TreeDecorator>)ImmutableList.of((Object)class_5466.field_26154)).build()));
    public static final ConfiguredFeature<?, ?> SWAMP_TREE = class_5464.method_30590("swamp_tree", ((ConfiguredFeature)Feature.TREE.configure(new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(class_5467.field_26233), new SimpleBlockStateProvider(class_5467.field_26234), new BlobFoliagePlacer(class_5428.method_30314(3), class_5428.method_30314(0), 3), new StraightTrunkPlacer(5, 3, 0), new TwoLayersFeatureSize(1, 0, 1)).maxWaterDepth(1).decorators((List<TreeDecorator>)ImmutableList.of((Object)LeaveVineTreeDecorator.INSTANCE)).build()).method_30374((ConfiguredDecorator)class_5466.field_26165)).method_30374((ConfiguredDecorator)Decorator.COUNT_EXTRA.configure(new CountExtraChanceDecoratorConfig(2, 0.1f, 1))));
    public static final ConfiguredFeature<?, ?> JUNGLE_BUSH = class_5464.method_30590("jungle_bush", Feature.TREE.configure(new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(class_5467.field_26235), new SimpleBlockStateProvider(class_5467.field_26234), new BushFoliagePlacer(class_5428.method_30314(2), class_5428.method_30314(1), 2), new StraightTrunkPlacer(1, 0, 0), new TwoLayersFeatureSize(0, 0, 0)).heightmap(Heightmap.Type.MOTION_BLOCKING_NO_LEAVES).build()));
    public static final ConfiguredFeature<TreeFeatureConfig, ?> OAK_BEES_0002 = class_5464.method_30590("oak_bees_0002", Feature.TREE.configure(OAK.method_30381().setTreeDecorators((List<TreeDecorator>)ImmutableList.of((Object)class_5466.field_26154))));
    public static final ConfiguredFeature<TreeFeatureConfig, ?> OAK_BEES_002 = class_5464.method_30590("oak_bees_002", Feature.TREE.configure(OAK.method_30381().setTreeDecorators((List<TreeDecorator>)ImmutableList.of((Object)class_5466.field_26155))));
    public static final ConfiguredFeature<TreeFeatureConfig, ?> OAK_BEES_005 = class_5464.method_30590("oak_bees_005", Feature.TREE.configure(OAK.method_30381().setTreeDecorators((List<TreeDecorator>)ImmutableList.of((Object)class_5466.field_26156))));
    public static final ConfiguredFeature<TreeFeatureConfig, ?> BIRCH_BEES_0002 = class_5464.method_30590("birch_bees_0002", Feature.TREE.configure(BIRCH.method_30381().setTreeDecorators((List<TreeDecorator>)ImmutableList.of((Object)class_5466.field_26154))));
    public static final ConfiguredFeature<TreeFeatureConfig, ?> BIRCH_BEES_002 = class_5464.method_30590("birch_bees_002", Feature.TREE.configure(BIRCH.method_30381().setTreeDecorators((List<TreeDecorator>)ImmutableList.of((Object)class_5466.field_26155))));
    public static final ConfiguredFeature<TreeFeatureConfig, ?> BIRCH_BEES_005 = class_5464.method_30590("birch_bees_005", Feature.TREE.configure(BIRCH.method_30381().setTreeDecorators((List<TreeDecorator>)ImmutableList.of((Object)class_5466.field_26156))));
    public static final ConfiguredFeature<TreeFeatureConfig, ?> FANCY_OAK_BEES_0002 = class_5464.method_30590("fancy_oak_bees_0002", Feature.TREE.configure(FANCY_OAK.method_30381().setTreeDecorators((List<TreeDecorator>)ImmutableList.of((Object)class_5466.field_26154))));
    public static final ConfiguredFeature<TreeFeatureConfig, ?> FANCY_OAK_BEES_002 = class_5464.method_30590("fancy_oak_bees_002", Feature.TREE.configure(FANCY_OAK.method_30381().setTreeDecorators((List<TreeDecorator>)ImmutableList.of((Object)class_5466.field_26155))));
    public static final ConfiguredFeature<TreeFeatureConfig, ?> FANCY_OAK_BEES_005 = class_5464.method_30590("fancy_oak_bees_005", Feature.TREE.configure(FANCY_OAK.method_30381().setTreeDecorators((List<TreeDecorator>)ImmutableList.of((Object)class_5466.field_26156))));
    public static final ConfiguredFeature<?, ?> OAK_BADLANDS = class_5464.method_30590("oak_badlands", ((ConfiguredFeature)OAK.method_30374((ConfiguredDecorator)class_5466.field_26165)).method_30374((ConfiguredDecorator)Decorator.COUNT_EXTRA.configure(new CountExtraChanceDecoratorConfig(5, 0.1f, 1))));
    public static final ConfiguredFeature<?, ?> SPRUCE_SNOVY = class_5464.method_30590("spruce_snovy", ((ConfiguredFeature)SPRUCE.method_30374((ConfiguredDecorator)class_5466.field_26165)).method_30374((ConfiguredDecorator)Decorator.COUNT_EXTRA.configure(new CountExtraChanceDecoratorConfig(0, 0.1f, 1))));
    public static final ConfiguredFeature<?, ?> FLOWER_WARM = class_5464.method_30590("flower_warm", (ConfiguredFeature)((ConfiguredFeature)Feature.FLOWER.configure(class_5465.field_26144).method_30374((ConfiguredDecorator)class_5466.field_26164)).method_30374((ConfiguredDecorator)class_5466.field_26165).method_30375(4));
    public static final ConfiguredFeature<?, ?> FLOWER_DEFAULT = class_5464.method_30590("flower_default", (ConfiguredFeature)((ConfiguredFeature)Feature.FLOWER.configure(class_5465.field_26144).method_30374((ConfiguredDecorator)class_5466.field_26164)).method_30374((ConfiguredDecorator)class_5466.field_26165).method_30375(2));
    public static final ConfiguredFeature<?, ?> FLOWER_FOREST = class_5464.method_30590("flower_forest", (ConfiguredFeature)((ConfiguredFeature)Feature.FLOWER.configure(new RandomPatchFeatureConfig.Builder(ForestFlowerBlockStateProvider.INSTANCE, SimpleBlockPlacer.INSTANCE).tries(64).build()).method_30374((ConfiguredDecorator)class_5466.field_26164)).method_30374((ConfiguredDecorator)class_5466.field_26165).method_30375(100));
    public static final ConfiguredFeature<?, ?> FLOWER_SWAMP = class_5464.method_30590("flower_swamp", ((ConfiguredFeature)Feature.FLOWER.configure(new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(class_5467.field_26172), SimpleBlockPlacer.INSTANCE).tries(64).build()).method_30374((ConfiguredDecorator)class_5466.field_26164)).method_30374((ConfiguredDecorator)class_5466.field_26165));
    public static final ConfiguredFeature<?, ?> FLOWER_PLAIN = class_5464.method_30590("flower_plain", Feature.FLOWER.configure(new RandomPatchFeatureConfig.Builder(PlainsFlowerBlockStateProvider.INSTANCE, SimpleBlockPlacer.INSTANCE).tries(64).build()));
    public static final ConfiguredFeature<?, ?> FLOWER_PLAIN_DECORATED = class_5464.method_30590("flower_plain_decorated", ((ConfiguredFeature)((ConfiguredFeature)FLOWER_PLAIN.method_30374((ConfiguredDecorator)class_5466.field_26164)).method_30374((ConfiguredDecorator)class_5466.field_26158).method_30371()).method_30374((ConfiguredDecorator)Decorator.COUNT_NOISE.configure(new NoiseHeightmapDecoratorConfig(-0.8, 15, 4))));
    private static final ImmutableList<Supplier<ConfiguredFeature<?, ?>>> field_26090 = ImmutableList.of(() -> Feature.RANDOM_PATCH.configure(new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(class_5467.field_26248), new DoublePlantPlacer()).tries(64).cannotProject().build()), () -> Feature.RANDOM_PATCH.configure(new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(class_5467.field_26249), new DoublePlantPlacer()).tries(64).cannotProject().build()), () -> Feature.RANDOM_PATCH.configure(new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(class_5467.field_26250), new DoublePlantPlacer()).tries(64).cannotProject().build()), () -> Feature.FLOWER.configure(new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(class_5467.field_26171), SimpleBlockPlacer.INSTANCE).tries(64).build()));
    public static final ConfiguredFeature<?, ?> FOREST_FLOWER_VEGETATION_COMMON = class_5464.method_30590("forest_flower_vegetation_common", (ConfiguredFeature)((ConfiguredFeature)((ConfiguredFeature)Feature.SIMPLE_RANDOM_SELECTOR.configure(new SimpleRandomFeatureConfig((List<Supplier<ConfiguredFeature<?, ?>>>)field_26090)).method_30373(class_5428.method_30315(-1, 4))).method_30374((ConfiguredDecorator)class_5466.field_26164)).method_30374((ConfiguredDecorator)class_5466.field_26165).method_30375(5));
    public static final ConfiguredFeature<?, ?> FOREST_FLOWER_VEGETATION = class_5464.method_30590("forest_flower_vegetation", (ConfiguredFeature)((ConfiguredFeature)((ConfiguredFeature)Feature.SIMPLE_RANDOM_SELECTOR.configure(new SimpleRandomFeatureConfig((List<Supplier<ConfiguredFeature<?, ?>>>)field_26090)).method_30373(class_5428.method_30315(-3, 4))).method_30374((ConfiguredDecorator)class_5466.field_26164)).method_30374((ConfiguredDecorator)class_5466.field_26165).method_30375(5));
    public static final ConfiguredFeature<?, ?> DARK_FOREST_VEGETATION_BROWN = class_5464.method_30590("dark_forest_vegetation_brown", Feature.RANDOM_SELECTOR.configure(new RandomFeatureConfig((List<RandomFeatureEntry>)ImmutableList.of((Object)HUGE_BROWN_MUSHROOM.withChance(0.025f), (Object)HUGE_RED_MUSHROOM.withChance(0.05f), (Object)DARK_OAK.withChance(0.6666667f), (Object)BIRCH.withChance(0.2f), (Object)FANCY_OAK.withChance(0.1f)), OAK)).method_30374((ConfiguredDecorator)Decorator.DARK_OAK_TREE.configure(DecoratorConfig.DEFAULT)));
    public static final ConfiguredFeature<?, ?> DARK_FOREST_VEGETATION_RED = class_5464.method_30590("dark_forest_vegetation_red", Feature.RANDOM_SELECTOR.configure(new RandomFeatureConfig((List<RandomFeatureEntry>)ImmutableList.of((Object)HUGE_RED_MUSHROOM.withChance(0.025f), (Object)HUGE_BROWN_MUSHROOM.withChance(0.05f), (Object)DARK_OAK.withChance(0.6666667f), (Object)BIRCH.withChance(0.2f), (Object)FANCY_OAK.withChance(0.1f)), OAK)).method_30374((ConfiguredDecorator)Decorator.DARK_OAK_TREE.configure(DecoratorConfig.DEFAULT)));
    public static final ConfiguredFeature<?, ?> WARM_OCEAN_VEGETATION = class_5464.method_30590("warm_ocean_vegetation", ((ConfiguredFeature)Feature.SIMPLE_RANDOM_SELECTOR.configure(new SimpleRandomFeatureConfig((List<Supplier<ConfiguredFeature<?, ?>>>)ImmutableList.of(() -> Feature.CORAL_TREE.configure(FeatureConfig.DEFAULT), () -> Feature.CORAL_CLAW.configure(FeatureConfig.DEFAULT), () -> Feature.CORAL_MUSHROOM.configure(FeatureConfig.DEFAULT)))).method_30374((ConfiguredDecorator)class_5466.field_26159).method_30371()).method_30374((ConfiguredDecorator)Decorator.COUNT_NOISE_BIASED.configure(new TopSolidHeightmapNoiseBiasedDecoratorConfig(20, 400.0, 0.0))));
    public static final ConfiguredFeature<?, ?> FOREST_FLOWER_TREES = class_5464.method_30590("forest_flower_trees", ((ConfiguredFeature)Feature.RANDOM_SELECTOR.configure(new RandomFeatureConfig((List<RandomFeatureEntry>)ImmutableList.of((Object)BIRCH_BEES_002.withChance(0.2f), (Object)FANCY_OAK_BEES_002.withChance(0.1f)), OAK_BEES_002)).method_30374((ConfiguredDecorator)class_5466.field_26165)).method_30374((ConfiguredDecorator)Decorator.COUNT_EXTRA.configure(new CountExtraChanceDecoratorConfig(6, 0.1f, 1))));
    public static final ConfiguredFeature<?, ?> TAIGA_VEGETATION = class_5464.method_30590("taiga_vegetation", ((ConfiguredFeature)Feature.RANDOM_SELECTOR.configure(new RandomFeatureConfig((List<RandomFeatureEntry>)ImmutableList.of((Object)PINE.withChance(0.33333334f)), SPRUCE)).method_30374((ConfiguredDecorator)class_5466.field_26165)).method_30374((ConfiguredDecorator)Decorator.COUNT_EXTRA.configure(new CountExtraChanceDecoratorConfig(10, 0.1f, 1))));
    public static final ConfiguredFeature<?, ?> TREES_SHATTERED_SAVANNA = class_5464.method_30590("trees_shattered_savanna", ((ConfiguredFeature)Feature.RANDOM_SELECTOR.configure(new RandomFeatureConfig((List<RandomFeatureEntry>)ImmutableList.of((Object)ACACIA.withChance(0.8f)), OAK)).method_30374((ConfiguredDecorator)class_5466.field_26165)).method_30374((ConfiguredDecorator)Decorator.COUNT_EXTRA.configure(new CountExtraChanceDecoratorConfig(2, 0.1f, 1))));
    public static final ConfiguredFeature<?, ?> TREES_SAVANNA = class_5464.method_30590("trees_savanna", ((ConfiguredFeature)Feature.RANDOM_SELECTOR.configure(new RandomFeatureConfig((List<RandomFeatureEntry>)ImmutableList.of((Object)ACACIA.withChance(0.8f)), OAK)).method_30374((ConfiguredDecorator)class_5466.field_26165)).method_30374((ConfiguredDecorator)Decorator.COUNT_EXTRA.configure(new CountExtraChanceDecoratorConfig(1, 0.1f, 1))));
    public static final ConfiguredFeature<?, ?> BIRCH_TALL = class_5464.method_30590("birch_tall", ((ConfiguredFeature)Feature.RANDOM_SELECTOR.configure(new RandomFeatureConfig((List<RandomFeatureEntry>)ImmutableList.of((Object)SUPER_BIRCH_BEES_0002.withChance(0.5f)), BIRCH_BEES_0002)).method_30374((ConfiguredDecorator)class_5466.field_26165)).method_30374((ConfiguredDecorator)Decorator.COUNT_EXTRA.configure(new CountExtraChanceDecoratorConfig(10, 0.1f, 1))));
    public static final ConfiguredFeature<?, ?> TREES_MOUNTAIN_EDGE = class_5464.method_30590("trees_mountain_edge", ((ConfiguredFeature)Feature.RANDOM_SELECTOR.configure(new RandomFeatureConfig((List<RandomFeatureEntry>)ImmutableList.of((Object)SPRUCE.withChance(0.666f), (Object)FANCY_OAK.withChance(0.1f)), OAK)).method_30374((ConfiguredDecorator)class_5466.field_26165)).method_30374((ConfiguredDecorator)Decorator.COUNT_EXTRA.configure(new CountExtraChanceDecoratorConfig(3, 0.1f, 1))));
    public static final ConfiguredFeature<?, ?> TREES_MOUNTAIN = class_5464.method_30590("trees_mountain", ((ConfiguredFeature)Feature.RANDOM_SELECTOR.configure(new RandomFeatureConfig((List<RandomFeatureEntry>)ImmutableList.of((Object)SPRUCE.withChance(0.666f), (Object)FANCY_OAK.withChance(0.1f)), OAK)).method_30374((ConfiguredDecorator)class_5466.field_26165)).method_30374((ConfiguredDecorator)Decorator.COUNT_EXTRA.configure(new CountExtraChanceDecoratorConfig(0, 0.1f, 1))));
    public static final ConfiguredFeature<?, ?> TREES_WATER = class_5464.method_30590("trees_water", ((ConfiguredFeature)Feature.RANDOM_SELECTOR.configure(new RandomFeatureConfig((List<RandomFeatureEntry>)ImmutableList.of((Object)FANCY_OAK.withChance(0.1f)), OAK)).method_30374((ConfiguredDecorator)class_5466.field_26165)).method_30374((ConfiguredDecorator)Decorator.COUNT_EXTRA.configure(new CountExtraChanceDecoratorConfig(0, 0.1f, 1))));
    public static final ConfiguredFeature<?, ?> BIRCH_OTHER = class_5464.method_30590("birch_other", ((ConfiguredFeature)Feature.RANDOM_SELECTOR.configure(new RandomFeatureConfig((List<RandomFeatureEntry>)ImmutableList.of((Object)BIRCH_BEES_0002.withChance(0.2f), (Object)FANCY_OAK_BEES_0002.withChance(0.1f)), OAK_BEES_0002)).method_30374((ConfiguredDecorator)class_5466.field_26165)).method_30374((ConfiguredDecorator)Decorator.COUNT_EXTRA.configure(new CountExtraChanceDecoratorConfig(10, 0.1f, 1))));
    public static final ConfiguredFeature<?, ?> PLAIN_VEGETATION = class_5464.method_30590("plain_vegetation", ((ConfiguredFeature)Feature.RANDOM_SELECTOR.configure(new RandomFeatureConfig((List<RandomFeatureEntry>)ImmutableList.of((Object)FANCY_OAK_BEES_005.withChance(0.33333334f)), OAK_BEES_005)).method_30374((ConfiguredDecorator)class_5466.field_26165)).method_30374((ConfiguredDecorator)Decorator.COUNT_EXTRA.configure(new CountExtraChanceDecoratorConfig(0, 0.05f, 1))));
    public static final ConfiguredFeature<?, ?> TREES_JUNGLE_EDGE = class_5464.method_30590("trees_jungle_edge", ((ConfiguredFeature)Feature.RANDOM_SELECTOR.configure(new RandomFeatureConfig((List<RandomFeatureEntry>)ImmutableList.of((Object)FANCY_OAK.withChance(0.1f), (Object)JUNGLE_BUSH.withChance(0.5f)), JUNGLE_TREE)).method_30374((ConfiguredDecorator)class_5466.field_26165)).method_30374((ConfiguredDecorator)Decorator.COUNT_EXTRA.configure(new CountExtraChanceDecoratorConfig(2, 0.1f, 1))));
    public static final ConfiguredFeature<?, ?> TREES_GIANT_SPRUCE = class_5464.method_30590("trees_giant_spruce", ((ConfiguredFeature)Feature.RANDOM_SELECTOR.configure(new RandomFeatureConfig((List<RandomFeatureEntry>)ImmutableList.of((Object)MEGA_SPRUCE.withChance(0.33333334f), (Object)PINE.withChance(0.33333334f)), SPRUCE)).method_30374((ConfiguredDecorator)class_5466.field_26165)).method_30374((ConfiguredDecorator)Decorator.COUNT_EXTRA.configure(new CountExtraChanceDecoratorConfig(10, 0.1f, 1))));
    public static final ConfiguredFeature<?, ?> TREES_GIANT = class_5464.method_30590("trees_giant", ((ConfiguredFeature)Feature.RANDOM_SELECTOR.configure(new RandomFeatureConfig((List<RandomFeatureEntry>)ImmutableList.of((Object)MEGA_SPRUCE.withChance(0.025641026f), (Object)MEGA_PINE.withChance(0.30769232f), (Object)PINE.withChance(0.33333334f)), SPRUCE)).method_30374((ConfiguredDecorator)class_5466.field_26165)).method_30374((ConfiguredDecorator)Decorator.COUNT_EXTRA.configure(new CountExtraChanceDecoratorConfig(10, 0.1f, 1))));
    public static final ConfiguredFeature<?, ?> TREES_JUNGLE = class_5464.method_30590("trees_jungle", ((ConfiguredFeature)Feature.RANDOM_SELECTOR.configure(new RandomFeatureConfig((List<RandomFeatureEntry>)ImmutableList.of((Object)FANCY_OAK.withChance(0.1f), (Object)JUNGLE_BUSH.withChance(0.5f), (Object)MEGA_JUNGLE_TREE.withChance(0.33333334f)), JUNGLE_TREE)).method_30374((ConfiguredDecorator)class_5466.field_26165)).method_30374((ConfiguredDecorator)Decorator.COUNT_EXTRA.configure(new CountExtraChanceDecoratorConfig(50, 0.1f, 1))));
    public static final ConfiguredFeature<?, ?> BAMBOO_VEGETATION = class_5464.method_30590("bamboo_vegetation", ((ConfiguredFeature)Feature.RANDOM_SELECTOR.configure(new RandomFeatureConfig((List<RandomFeatureEntry>)ImmutableList.of((Object)FANCY_OAK.withChance(0.05f), (Object)JUNGLE_BUSH.withChance(0.15f), (Object)MEGA_JUNGLE_TREE.withChance(0.7f)), Feature.RANDOM_PATCH.configure(class_5465.field_26143))).method_30374((ConfiguredDecorator)class_5466.field_26165)).method_30374((ConfiguredDecorator)Decorator.COUNT_EXTRA.configure(new CountExtraChanceDecoratorConfig(30, 0.1f, 1))));
    public static final ConfiguredFeature<?, ?> MUSHROOM_FIELD_VEGETATION = class_5464.method_30590("mushroom_field_vegetation", Feature.RANDOM_BOOLEAN_SELECTOR.configure(new RandomBooleanFeatureConfig(() -> HUGE_RED_MUSHROOM, () -> HUGE_BROWN_MUSHROOM)).method_30374((ConfiguredDecorator)class_5466.field_26165));

    private static <FC extends FeatureConfig> ConfiguredFeature<FC, ?> method_30590(String string, ConfiguredFeature<FC, ?> arg) {
        return Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, string, arg);
    }

    public static final class class_5465 {
        public static final RandomPatchFeatureConfig field_26141 = new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(class_5467.field_26200), SimpleBlockPlacer.INSTANCE).tries(32).build();
        public static final RandomPatchFeatureConfig field_26142 = new RandomPatchFeatureConfig.Builder(new WeightedBlockStateProvider().addState(class_5467.field_26200, 1).addState(class_5467.field_26227, 4), SimpleBlockPlacer.INSTANCE).tries(32).build();
        public static final RandomPatchFeatureConfig field_26143 = new RandomPatchFeatureConfig.Builder(new WeightedBlockStateProvider().addState(class_5467.field_26200, 3).addState(class_5467.field_26227, 1), SimpleBlockPlacer.INSTANCE).blacklist((Set<BlockState>)ImmutableSet.of((Object)class_5467.field_26228)).tries(32).build();
        public static final RandomPatchFeatureConfig field_26144 = new RandomPatchFeatureConfig.Builder(new WeightedBlockStateProvider().addState(class_5467.field_26173, 2).addState(class_5467.field_26174, 1), SimpleBlockPlacer.INSTANCE).tries(64).build();
        public static final RandomPatchFeatureConfig field_26145 = new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(class_5467.field_26175), SimpleBlockPlacer.INSTANCE).tries(4).build();
        public static final RandomPatchFeatureConfig field_26146 = new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(class_5467.field_26178), SimpleBlockPlacer.INSTANCE).tries(64).whitelist((Set<Block>)ImmutableSet.of((Object)class_5467.field_26245.getBlock())).cannotProject().build();
        public static final RandomPatchFeatureConfig field_26147 = new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(class_5467.field_26247), new DoublePlantPlacer()).tries(64).cannotProject().build();
        public static final RandomPatchFeatureConfig field_26148 = new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(class_5467.field_26189), new ColumnPlacer(2, 2)).tries(20).spreadX(4).spreadY(0).spreadZ(4).cannotProject().needsWater().build();
        public static final SpringFeatureConfig field_26149 = new SpringFeatureConfig(class_5467.field_26201, true, 4, 1, (Set<Block>)ImmutableSet.of((Object)Blocks.STONE, (Object)Blocks.GRANITE, (Object)Blocks.DIORITE, (Object)Blocks.ANDESITE));
        public static final SpringFeatureConfig field_26150 = new SpringFeatureConfig(class_5467.field_26201, false, 5, 0, (Set<Block>)ImmutableSet.of((Object)Blocks.NETHERRACK));
        public static final BlockPileFeatureConfig field_26151 = new BlockPileFeatureConfig(new WeightedBlockStateProvider().addState(class_5467.field_26183, 87).addState(class_5467.field_26196, 11).addState(class_5467.field_26197, 1));
        public static final BlockPileFeatureConfig field_26152 = new BlockPileFeatureConfig(new WeightedBlockStateProvider().addState(class_5467.field_26198, 85).addState(class_5467.field_26183, 1).addState(class_5467.field_26197, 13).addState(class_5467.field_26196, 1));
        public static final BlockPileFeatureConfig field_26153 = new BlockPileFeatureConfig(new SimpleBlockStateProvider(class_5467.field_26199));
    }

    public static final class class_5467 {
        protected static final BlockState field_26200 = Blocks.GRASS.getDefaultState();
        protected static final BlockState field_26227 = Blocks.FERN.getDefaultState();
        protected static final BlockState field_26228 = Blocks.PODZOL.getDefaultState();
        protected static final BlockState field_26229 = Blocks.COARSE_DIRT.getDefaultState();
        protected static final BlockState field_26230 = Blocks.MYCELIUM.getDefaultState();
        protected static final BlockState field_26231 = Blocks.SNOW_BLOCK.getDefaultState();
        protected static final BlockState field_26232 = Blocks.ICE.getDefaultState();
        protected static final BlockState field_26233 = Blocks.OAK_LOG.getDefaultState();
        protected static final BlockState field_26234 = Blocks.OAK_LEAVES.getDefaultState();
        protected static final BlockState field_26235 = Blocks.JUNGLE_LOG.getDefaultState();
        protected static final BlockState field_26236 = Blocks.JUNGLE_LEAVES.getDefaultState();
        protected static final BlockState field_26237 = Blocks.SPRUCE_LOG.getDefaultState();
        protected static final BlockState field_26238 = Blocks.SPRUCE_LEAVES.getDefaultState();
        protected static final BlockState field_26239 = Blocks.ACACIA_LOG.getDefaultState();
        protected static final BlockState field_26240 = Blocks.ACACIA_LEAVES.getDefaultState();
        protected static final BlockState field_26241 = Blocks.BIRCH_LOG.getDefaultState();
        protected static final BlockState field_26242 = Blocks.BIRCH_LEAVES.getDefaultState();
        protected static final BlockState field_26243 = Blocks.DARK_OAK_LOG.getDefaultState();
        protected static final BlockState field_26244 = Blocks.DARK_OAK_LEAVES.getDefaultState();
        protected static final BlockState field_26245 = Blocks.GRASS_BLOCK.getDefaultState();
        protected static final BlockState field_26246 = Blocks.LARGE_FERN.getDefaultState();
        protected static final BlockState field_26247 = Blocks.TALL_GRASS.getDefaultState();
        protected static final BlockState field_26248 = Blocks.LILAC.getDefaultState();
        protected static final BlockState field_26249 = Blocks.ROSE_BUSH.getDefaultState();
        protected static final BlockState field_26250 = Blocks.PEONY.getDefaultState();
        protected static final BlockState field_26251 = Blocks.BROWN_MUSHROOM.getDefaultState();
        protected static final BlockState field_26168 = Blocks.RED_MUSHROOM.getDefaultState();
        protected static final BlockState field_26169 = Blocks.PACKED_ICE.getDefaultState();
        protected static final BlockState field_26170 = Blocks.BLUE_ICE.getDefaultState();
        protected static final BlockState field_26171 = Blocks.LILY_OF_THE_VALLEY.getDefaultState();
        protected static final BlockState field_26172 = Blocks.BLUE_ORCHID.getDefaultState();
        protected static final BlockState field_26173 = Blocks.POPPY.getDefaultState();
        protected static final BlockState field_26174 = Blocks.DANDELION.getDefaultState();
        protected static final BlockState field_26175 = Blocks.DEAD_BUSH.getDefaultState();
        protected static final BlockState field_26176 = Blocks.MELON.getDefaultState();
        protected static final BlockState field_26177 = Blocks.PUMPKIN.getDefaultState();
        protected static final BlockState field_26178 = (BlockState)Blocks.SWEET_BERRY_BUSH.getDefaultState().with(SweetBerryBushBlock.AGE, 3);
        protected static final BlockState field_26179 = Blocks.FIRE.getDefaultState();
        protected static final BlockState field_26180 = Blocks.SOUL_FIRE.getDefaultState();
        protected static final BlockState field_26181 = Blocks.NETHERRACK.getDefaultState();
        protected static final BlockState field_26182 = Blocks.SOUL_SOIL.getDefaultState();
        protected static final BlockState field_26183 = Blocks.CRIMSON_ROOTS.getDefaultState();
        protected static final BlockState field_26184 = Blocks.LILY_PAD.getDefaultState();
        protected static final BlockState field_26185 = Blocks.SNOW.getDefaultState();
        protected static final BlockState field_26186 = Blocks.JACK_O_LANTERN.getDefaultState();
        protected static final BlockState field_26187 = Blocks.SUNFLOWER.getDefaultState();
        protected static final BlockState field_26188 = Blocks.CACTUS.getDefaultState();
        protected static final BlockState field_26189 = Blocks.SUGAR_CANE.getDefaultState();
        protected static final BlockState field_26190 = (BlockState)Blocks.RED_MUSHROOM_BLOCK.getDefaultState().with(MushroomBlock.DOWN, false);
        protected static final BlockState field_26191 = (BlockState)((BlockState)Blocks.BROWN_MUSHROOM_BLOCK.getDefaultState().with(MushroomBlock.UP, true)).with(MushroomBlock.DOWN, false);
        protected static final BlockState field_26192 = (BlockState)((BlockState)Blocks.MUSHROOM_STEM.getDefaultState().with(MushroomBlock.UP, false)).with(MushroomBlock.DOWN, false);
        protected static final FluidState field_26193 = Fluids.WATER.getDefaultState();
        protected static final FluidState field_26201 = Fluids.LAVA.getDefaultState();
        protected static final BlockState field_26202 = Blocks.WATER.getDefaultState();
        protected static final BlockState field_26203 = Blocks.LAVA.getDefaultState();
        protected static final BlockState field_26204 = Blocks.DIRT.getDefaultState();
        protected static final BlockState field_26205 = Blocks.GRAVEL.getDefaultState();
        protected static final BlockState field_26206 = Blocks.GRANITE.getDefaultState();
        protected static final BlockState field_26207 = Blocks.DIORITE.getDefaultState();
        protected static final BlockState field_26208 = Blocks.ANDESITE.getDefaultState();
        protected static final BlockState field_26209 = Blocks.COAL_ORE.getDefaultState();
        protected static final BlockState field_26210 = Blocks.IRON_ORE.getDefaultState();
        protected static final BlockState field_26211 = Blocks.GOLD_ORE.getDefaultState();
        protected static final BlockState field_26212 = Blocks.REDSTONE_ORE.getDefaultState();
        protected static final BlockState field_26213 = Blocks.DIAMOND_ORE.getDefaultState();
        protected static final BlockState field_26214 = Blocks.LAPIS_ORE.getDefaultState();
        protected static final BlockState field_26215 = Blocks.STONE.getDefaultState();
        protected static final BlockState field_26216 = Blocks.EMERALD_ORE.getDefaultState();
        protected static final BlockState field_26217 = Blocks.INFESTED_STONE.getDefaultState();
        protected static final BlockState field_26218 = Blocks.SAND.getDefaultState();
        protected static final BlockState field_26219 = Blocks.CLAY.getDefaultState();
        protected static final BlockState field_26220 = Blocks.MOSSY_COBBLESTONE.getDefaultState();
        protected static final BlockState field_26221 = Blocks.SEAGRASS.getDefaultState();
        protected static final BlockState field_26222 = Blocks.MAGMA_BLOCK.getDefaultState();
        protected static final BlockState field_26223 = Blocks.SOUL_SAND.getDefaultState();
        protected static final BlockState field_26224 = Blocks.NETHER_GOLD_ORE.getDefaultState();
        protected static final BlockState field_26225 = Blocks.NETHER_QUARTZ_ORE.getDefaultState();
        protected static final BlockState field_26226 = Blocks.BLACKSTONE.getDefaultState();
        protected static final BlockState field_26194 = Blocks.ANCIENT_DEBRIS.getDefaultState();
        protected static final BlockState field_26195 = Blocks.BASALT.getDefaultState();
        protected static final BlockState field_26196 = Blocks.CRIMSON_FUNGUS.getDefaultState();
        protected static final BlockState field_26197 = Blocks.WARPED_FUNGUS.getDefaultState();
        protected static final BlockState field_26198 = Blocks.WARPED_ROOTS.getDefaultState();
        protected static final BlockState field_26199 = Blocks.NETHER_SPROUTS.getDefaultState();
    }

    public static final class class_5466 {
        public static final BeehiveTreeDecorator field_26154 = new BeehiveTreeDecorator(0.002f);
        public static final BeehiveTreeDecorator field_26155 = new BeehiveTreeDecorator(0.02f);
        public static final BeehiveTreeDecorator field_26156 = new BeehiveTreeDecorator(0.05f);
        public static final ConfiguredDecorator<SeaPickleFeatureConfig> field_26157 = Decorator.FIRE.configure(new SeaPickleFeatureConfig(10));
        public static final ConfiguredDecorator<NopeDecoratorConfig> field_26158 = Decorator.HEIGHTMAP.configure(DecoratorConfig.DEFAULT);
        public static final ConfiguredDecorator<NopeDecoratorConfig> field_26159 = Decorator.TOP_SOLID_HEIGHTMAP.configure(DecoratorConfig.DEFAULT);
        public static final ConfiguredDecorator<NopeDecoratorConfig> field_26160 = Decorator.HEIGHTMAP_WORLD_SURFACE.configure(DecoratorConfig.DEFAULT);
        public static final ConfiguredDecorator<NopeDecoratorConfig> field_26161 = Decorator.HEIGHTMAP_SPREAD_DOUBLE.configure(DecoratorConfig.DEFAULT);
        public static final ConfiguredDecorator<RangeDecoratorConfig> field_26162 = Decorator.RANGE.configure(new RangeDecoratorConfig(10, 20, 128));
        public static final ConfiguredDecorator<RangeDecoratorConfig> field_26163 = Decorator.RANGE.configure(new RangeDecoratorConfig(4, 8, 128));
        public static final ConfiguredDecorator<?> field_26164 = Decorator.SPREAD_32_ABOVE.configure(NopeDecoratorConfig.field_24892);
        public static final ConfiguredDecorator<?> field_26165 = (ConfiguredDecorator)field_26158.method_30371();
        public static final ConfiguredDecorator<?> field_26166 = (ConfiguredDecorator)field_26161.method_30371();
        public static final ConfiguredDecorator<?> field_26167 = (ConfiguredDecorator)field_26159.method_30371();
    }
}

