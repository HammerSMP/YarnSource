/*
 * Decompiled with CFR 0.149.
 * 
 * Could not load the following classes:
 *  com.google.common.collect.ImmutableList
 *  com.mojang.datafixers.util.Pair
 */
package net.minecraft.structure;

import com.google.common.collect.ImmutableList;
import com.mojang.datafixers.util.Pair;
import java.util.List;
import net.minecraft.block.Blocks;
import net.minecraft.structure.BastionData;
import net.minecraft.structure.pool.SinglePoolElement;
import net.minecraft.structure.pool.StructurePool;
import net.minecraft.structure.pool.StructurePoolBasedGenerator;
import net.minecraft.structure.pool.StructurePoolElement;
import net.minecraft.structure.processor.RuleStructureProcessor;
import net.minecraft.structure.processor.StructureProcessor;
import net.minecraft.structure.processor.StructureProcessorRule;
import net.minecraft.structure.rule.AlwaysTrueRuleTest;
import net.minecraft.structure.rule.AxisAlignedLinearPosRuleTest;
import net.minecraft.structure.rule.RandomBlockMatchRuleTest;
import net.minecraft.util.Identifier;
import net.minecraft.util.math.Direction;

public class BastionTreasureData {
    public static void init() {
    }

    static {
        ImmutableList immutableList = ImmutableList.of((Object)new RuleStructureProcessor((List<? extends StructureProcessorRule>)ImmutableList.of((Object)new StructureProcessorRule(new RandomBlockMatchRuleTest(Blocks.POLISHED_BLACKSTONE_BRICKS, 0.3f), AlwaysTrueRuleTest.INSTANCE, Blocks.CRACKED_POLISHED_BLACKSTONE_BRICKS.getDefaultState()), (Object)new StructureProcessorRule(new RandomBlockMatchRuleTest(Blocks.POLISHED_BLACKSTONE_BRICKS, 0.15f), AlwaysTrueRuleTest.INSTANCE, Blocks.AIR.getDefaultState()), (Object)new StructureProcessorRule(new RandomBlockMatchRuleTest(Blocks.POLISHED_BLACKSTONE_BRICKS, 0.3f), AlwaysTrueRuleTest.INSTANCE, Blocks.BLACKSTONE.getDefaultState()))));
        ImmutableList immutableList2 = ImmutableList.of((Object)new RuleStructureProcessor((List<? extends StructureProcessorRule>)ImmutableList.of((Object)new StructureProcessorRule(new RandomBlockMatchRuleTest(Blocks.POLISHED_BLACKSTONE_BRICKS, 0.35f), AlwaysTrueRuleTest.INSTANCE, Blocks.CRACKED_POLISHED_BLACKSTONE_BRICKS.getDefaultState()), (Object)new StructureProcessorRule(new RandomBlockMatchRuleTest(Blocks.CHISELED_POLISHED_BLACKSTONE, 0.1f), AlwaysTrueRuleTest.INSTANCE, Blocks.CRACKED_POLISHED_BLACKSTONE_BRICKS.getDefaultState()), (Object)BastionData.PROCESSOR_RULE)));
        ImmutableList immutableList3 = ImmutableList.of((Object)new RuleStructureProcessor((List<? extends StructureProcessorRule>)ImmutableList.of((Object)new StructureProcessorRule(new RandomBlockMatchRuleTest(Blocks.POLISHED_BLACKSTONE_BRICKS, 0.01f), AlwaysTrueRuleTest.INSTANCE, Blocks.AIR.getDefaultState()), (Object)new StructureProcessorRule(new RandomBlockMatchRuleTest(Blocks.POLISHED_BLACKSTONE_BRICKS, 0.5f), AlwaysTrueRuleTest.INSTANCE, Blocks.CRACKED_POLISHED_BLACKSTONE_BRICKS.getDefaultState()), (Object)new StructureProcessorRule(new RandomBlockMatchRuleTest(Blocks.POLISHED_BLACKSTONE_BRICKS, 0.3f), AlwaysTrueRuleTest.INSTANCE, Blocks.BLACKSTONE.getDefaultState()))));
        ImmutableList immutableList4 = ImmutableList.of((Object)new RuleStructureProcessor((List<? extends StructureProcessorRule>)ImmutableList.of((Object)new StructureProcessorRule(new RandomBlockMatchRuleTest(Blocks.GOLD_BLOCK, 0.3f), AlwaysTrueRuleTest.INSTANCE, Blocks.CRACKED_POLISHED_BLACKSTONE_BRICKS.getDefaultState()), (Object)new StructureProcessorRule(AlwaysTrueRuleTest.INSTANCE, AlwaysTrueRuleTest.INSTANCE, new AxisAlignedLinearPosRuleTest(0.0f, 0.05f, 0, 100, Direction.Axis.Y), Blocks.AIR.getDefaultState()))));
        ImmutableList immutableList5 = ImmutableList.of((Object)new RuleStructureProcessor((List<? extends StructureProcessorRule>)ImmutableList.of((Object)new StructureProcessorRule(new RandomBlockMatchRuleTest(Blocks.MAGMA_BLOCK, 0.75f), AlwaysTrueRuleTest.INSTANCE, Blocks.CRACKED_POLISHED_BLACKSTONE_BRICKS.getDefaultState()), (Object)new StructureProcessorRule(new RandomBlockMatchRuleTest(Blocks.CRACKED_POLISHED_BLACKSTONE_BRICKS, 0.15f), AlwaysTrueRuleTest.INSTANCE, Blocks.POLISHED_BLACKSTONE_BRICKS.getDefaultState()), (Object)BastionData.PROCESSOR_RULE)));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier("bastion/treasure/starters"), new Identifier("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of((Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/big_air_full", (List<StructureProcessor>)immutableList2), (Object)1)), StructurePool.Projection.RIGID));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier("bastion/treasure/bases"), new Identifier("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of((Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/bases/lava_basin", (List<StructureProcessor>)immutableList2), (Object)1)), StructurePool.Projection.RIGID));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier("bastion/treasure/stairs"), new Identifier("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of((Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/stairs/lower_stairs", (List<StructureProcessor>)immutableList2), (Object)1)), StructurePool.Projection.RIGID));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier("bastion/treasure/bases/centers"), new Identifier("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of((Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/bases/centers/center_0", (List<StructureProcessor>)immutableList2), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/bases/centers/center_1", (List<StructureProcessor>)immutableList2), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/bases/centers/center_2", (List<StructureProcessor>)immutableList2), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/bases/centers/center_3", (List<StructureProcessor>)immutableList2), (Object)1)), StructurePool.Projection.RIGID));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier("bastion/treasure/brains"), new Identifier("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of((Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/brains/center_brain", (List<StructureProcessor>)immutableList2), (Object)1)), StructurePool.Projection.RIGID));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier("bastion/treasure/walls"), new Identifier("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of((Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/walls/lava_wall", (List<StructureProcessor>)immutableList2), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/walls/entrance_wall", (List<StructureProcessor>)immutableList3), (Object)1)), StructurePool.Projection.RIGID));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier("bastion/treasure/walls/outer"), new Identifier("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of((Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/walls/outer/top_corner", (List<StructureProcessor>)immutableList3), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/walls/outer/mid_corner", (List<StructureProcessor>)immutableList3), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/walls/outer/bottom_corner", (List<StructureProcessor>)immutableList3), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/walls/outer/outer_wall", (List<StructureProcessor>)immutableList3), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/walls/outer/medium_outer_wall", (List<StructureProcessor>)immutableList3), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/walls/outer/tall_outer_wall", (List<StructureProcessor>)immutableList3), (Object)1)), StructurePool.Projection.RIGID));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier("bastion/treasure/walls/bottom"), new Identifier("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of((Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/walls/bottom/wall_0", (List<StructureProcessor>)immutableList2), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/walls/bottom/wall_1", (List<StructureProcessor>)immutableList2), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/walls/bottom/wall_2", (List<StructureProcessor>)immutableList2), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/walls/bottom/wall_3", (List<StructureProcessor>)immutableList2), (Object)1)), StructurePool.Projection.RIGID));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier("bastion/treasure/walls/mid"), new Identifier("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of((Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/walls/mid/wall_0", (List<StructureProcessor>)immutableList2), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/walls/mid/wall_1", (List<StructureProcessor>)immutableList2), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/walls/mid/wall_2", (List<StructureProcessor>)immutableList2), (Object)1)), StructurePool.Projection.RIGID));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier("bastion/treasure/walls/top"), new Identifier("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of((Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/walls/top/main_entrance", (List<StructureProcessor>)immutableList2), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/walls/top/wall_0", (List<StructureProcessor>)immutableList2), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/walls/top/wall_1", (List<StructureProcessor>)immutableList2), (Object)1)), StructurePool.Projection.RIGID));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier("bastion/treasure/connectors"), new Identifier("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of((Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/connectors/center_to_wall_middle", (List<StructureProcessor>)immutableList2), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/connectors/center_to_wall_top", (List<StructureProcessor>)immutableList2), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/connectors/center_to_wall_top_entrance", (List<StructureProcessor>)immutableList2), (Object)1)), StructurePool.Projection.RIGID));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier("bastion/treasure/entrances"), new Identifier("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of((Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/entrances/entrance_0", (List<StructureProcessor>)immutableList2), (Object)1)), StructurePool.Projection.RIGID));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier("bastion/treasure/ramparts"), new Identifier("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of((Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/ramparts/mid_wall_main", (List<StructureProcessor>)immutableList2), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/ramparts/mid_wall_side", (List<StructureProcessor>)immutableList2), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/ramparts/bottom_wall_0", (List<StructureProcessor>)immutableList5), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/ramparts/top_wall", (List<StructureProcessor>)immutableList4), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/ramparts/lava_basin_side", (List<StructureProcessor>)immutableList2), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/ramparts/lava_basin_main", (List<StructureProcessor>)immutableList2), (Object)1)), StructurePool.Projection.RIGID));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier("bastion/treasure/corners/bottom"), new Identifier("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of((Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/corners/bottom/corner_0", (List<StructureProcessor>)immutableList2), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/corners/bottom/corner_1", (List<StructureProcessor>)immutableList2), (Object)1)), StructurePool.Projection.RIGID));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier("bastion/treasure/corners/edges"), new Identifier("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of((Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/corners/edges/bottom", (List<StructureProcessor>)immutableList3), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/corners/edges/middle", (List<StructureProcessor>)immutableList3), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/corners/edges/top", (List<StructureProcessor>)immutableList3), (Object)1)), StructurePool.Projection.RIGID));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier("bastion/treasure/corners/middle"), new Identifier("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of((Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/corners/middle/corner_0", (List<StructureProcessor>)immutableList2), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/corners/middle/corner_1", (List<StructureProcessor>)immutableList2), (Object)1)), StructurePool.Projection.RIGID));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier("bastion/treasure/corners/top"), new Identifier("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of((Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/corners/top/corner_0", (List<StructureProcessor>)immutableList2), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/corners/top/corner_1", (List<StructureProcessor>)immutableList2), (Object)1)), StructurePool.Projection.RIGID));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier("bastion/treasure/extensions/large_pool"), new Identifier("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of((Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/extensions/empty", (List<StructureProcessor>)immutableList2), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/extensions/empty", (List<StructureProcessor>)immutableList2), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/extensions/fire_room", (List<StructureProcessor>)immutableList2), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/extensions/large_bridge_0", (List<StructureProcessor>)immutableList2), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/extensions/large_bridge_1", (List<StructureProcessor>)immutableList2), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/extensions/large_bridge_2", (List<StructureProcessor>)immutableList2), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/extensions/large_bridge_3", (List<StructureProcessor>)immutableList2), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/extensions/roofed_bridge", (List<StructureProcessor>)immutableList2), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/extensions/empty", (List<StructureProcessor>)immutableList2), (Object)1)), StructurePool.Projection.RIGID));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier("bastion/treasure/extensions/small_pool"), new Identifier("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of((Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/extensions/empty", (List<StructureProcessor>)immutableList2), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/extensions/fire_room", (List<StructureProcessor>)immutableList2), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/extensions/empty", (List<StructureProcessor>)immutableList2), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/extensions/small_bridge_0", (List<StructureProcessor>)immutableList2), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/extensions/small_bridge_1", (List<StructureProcessor>)immutableList2), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/extensions/small_bridge_2", (List<StructureProcessor>)immutableList2), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/extensions/small_bridge_3", (List<StructureProcessor>)immutableList2), (Object)1)), StructurePool.Projection.RIGID));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier("bastion/treasure/extensions/houses"), new Identifier("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of((Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/extensions/house_0", (List<StructureProcessor>)immutableList2), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/extensions/house_1", (List<StructureProcessor>)immutableList2), (Object)1)), StructurePool.Projection.RIGID));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier("bastion/treasure/roofs"), new Identifier("empty"), (List<Pair<StructurePoolElement, Integer>>)ImmutableList.of((Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/roofs/wall_roof", (List<StructureProcessor>)immutableList), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/roofs/corner_roof", (List<StructureProcessor>)immutableList), (Object)1), (Object)Pair.of((Object)new SinglePoolElement("bastion/treasure/roofs/center_roof", (List<StructureProcessor>)immutableList), (Object)1)), StructurePool.Projection.RIGID));
    }
}

