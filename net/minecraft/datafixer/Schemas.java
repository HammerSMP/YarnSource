/*
 * Decompiled with CFR 0.149.
 * 
 * Could not load the following classes:
 *  com.google.common.collect.ImmutableMap
 *  com.mojang.datafixers.DSL
 *  com.mojang.datafixers.DataFix
 *  com.mojang.datafixers.DataFixer
 *  com.mojang.datafixers.DataFixerBuilder
 *  com.mojang.datafixers.Typed
 *  com.mojang.datafixers.schemas.Schema
 */
package net.minecraft.datafixer;

import com.google.common.collect.ImmutableMap;
import com.mojang.datafixers.DSL;
import com.mojang.datafixers.DataFix;
import com.mojang.datafixers.DataFixer;
import com.mojang.datafixers.DataFixerBuilder;
import com.mojang.datafixers.Typed;
import com.mojang.datafixers.schemas.Schema;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiFunction;
import net.minecraft.SharedConstants;
import net.minecraft.class_5196;
import net.minecraft.class_5273;
import net.minecraft.datafixer.TypeReferences;
import net.minecraft.datafixer.fix.AddTrappedChestFix;
import net.minecraft.datafixer.fix.AdvancementRenameFix;
import net.minecraft.datafixer.fix.AdvancementsFix;
import net.minecraft.datafixer.fix.BedBlockEntityFix;
import net.minecraft.datafixer.fix.BedItemColorFix;
import net.minecraft.datafixer.fix.BeehiveRenameFix;
import net.minecraft.datafixer.fix.BiomeFormatFix;
import net.minecraft.datafixer.fix.BiomeRenameFix;
import net.minecraft.datafixer.fix.BiomesFix;
import net.minecraft.datafixer.fix.BlockEntityBannerColorFix;
import net.minecraft.datafixer.fix.BlockEntityBlockStateFix;
import net.minecraft.datafixer.fix.BlockEntityCustomNameToTextFix;
import net.minecraft.datafixer.fix.BlockEntityIdFix;
import net.minecraft.datafixer.fix.BlockEntityJukeboxFix;
import net.minecraft.datafixer.fix.BlockEntityKeepPacked;
import net.minecraft.datafixer.fix.BlockEntityShulkerBoxColorFix;
import net.minecraft.datafixer.fix.BlockEntitySignTextStrictJsonFix;
import net.minecraft.datafixer.fix.BlockEntityUuidFix;
import net.minecraft.datafixer.fix.BlockNameFix;
import net.minecraft.datafixer.fix.BlockNameFlatteningFix;
import net.minecraft.datafixer.fix.BlockStateStructureTemplateFix;
import net.minecraft.datafixer.fix.CatTypeFix;
import net.minecraft.datafixer.fix.ChoiceFix;
import net.minecraft.datafixer.fix.ChoiceTypesFix;
import net.minecraft.datafixer.fix.ChunkLightRemoveFix;
import net.minecraft.datafixer.fix.ChunkPalettedStorageFix;
import net.minecraft.datafixer.fix.ChunkStatusFix;
import net.minecraft.datafixer.fix.ChunkStatusFix2;
import net.minecraft.datafixer.fix.ChunkStructuresTemplateRenameFix;
import net.minecraft.datafixer.fix.ChunkToProtoChunkFix;
import net.minecraft.datafixer.fix.ColorlessShulkerEntityFix;
import net.minecraft.datafixer.fix.EntityArmorStandSilentFix;
import net.minecraft.datafixer.fix.EntityBlockStateFix;
import net.minecraft.datafixer.fix.EntityCatSplitFix;
import net.minecraft.datafixer.fix.EntityCodSalmonFix;
import net.minecraft.datafixer.fix.EntityCustomNameToTextFix;
import net.minecraft.datafixer.fix.EntityElderGuardianSplitFix;
import net.minecraft.datafixer.fix.EntityEquipmentToArmorAndHandFix;
import net.minecraft.datafixer.fix.EntityHealthFix;
import net.minecraft.datafixer.fix.EntityHorseSaddleFix;
import net.minecraft.datafixer.fix.EntityHorseSplitFix;
import net.minecraft.datafixer.fix.EntityIdFix;
import net.minecraft.datafixer.fix.EntityItemFrameDirectionFix;
import net.minecraft.datafixer.fix.EntityMinecartIdentifiersFix;
import net.minecraft.datafixer.fix.EntityPaintingMotiveFix;
import net.minecraft.datafixer.fix.EntityProjectileOwnerFix;
import net.minecraft.datafixer.fix.EntityPufferfishRenameFix;
import net.minecraft.datafixer.fix.EntityRavagerRenameFix;
import net.minecraft.datafixer.fix.EntityRedundantChanceTagsFix;
import net.minecraft.datafixer.fix.EntityRidingToPassengerFix;
import net.minecraft.datafixer.fix.EntityShulkerColorFix;
import net.minecraft.datafixer.fix.EntitySkeletonSplitFix;
import net.minecraft.datafixer.fix.EntityStringUuidFix;
import net.minecraft.datafixer.fix.EntityTheRenameningBlock;
import net.minecraft.datafixer.fix.EntityTippedArrowFix;
import net.minecraft.datafixer.fix.EntityUuidFix;
import net.minecraft.datafixer.fix.EntityWolfColorFix;
import net.minecraft.datafixer.fix.EntityZombieSplitFix;
import net.minecraft.datafixer.fix.EntityZombieVillagerTypeFix;
import net.minecraft.datafixer.fix.EntityZombifiedPiglinRenameFix;
import net.minecraft.datafixer.fix.FurnaceRecipesFix;
import net.minecraft.datafixer.fix.HangingEntityFix;
import net.minecraft.datafixer.fix.HeightmapRenamingFix;
import net.minecraft.datafixer.fix.IglooMetadataRemovalFix;
import net.minecraft.datafixer.fix.ItemBannerColorFix;
import net.minecraft.datafixer.fix.ItemCustomNameToComponentFix;
import net.minecraft.datafixer.fix.ItemIdFix;
import net.minecraft.datafixer.fix.ItemInstanceMapIdFix;
import net.minecraft.datafixer.fix.ItemInstanceSpawnEggFix;
import net.minecraft.datafixer.fix.ItemInstanceTheFlatteningFix;
import net.minecraft.datafixer.fix.ItemLoreToTextFix;
import net.minecraft.datafixer.fix.ItemNameFix;
import net.minecraft.datafixer.fix.ItemPotionFix;
import net.minecraft.datafixer.fix.ItemShulkerBoxColorFix;
import net.minecraft.datafixer.fix.ItemSpawnEggFix;
import net.minecraft.datafixer.fix.ItemStackEnchantmentFix;
import net.minecraft.datafixer.fix.ItemStackUuidFix;
import net.minecraft.datafixer.fix.ItemWaterPotionFix;
import net.minecraft.datafixer.fix.ItemWrittenBookPagesStrictJsonFix;
import net.minecraft.datafixer.fix.JigsawPropertiesFix;
import net.minecraft.datafixer.fix.JigsawRotationFix;
import net.minecraft.datafixer.fix.LeavesFix;
import net.minecraft.datafixer.fix.LevelDataGeneratorOptionsFix;
import net.minecraft.datafixer.fix.LevelFlatGeneratorInfoFix;
import net.minecraft.datafixer.fix.MapIdFix;
import net.minecraft.datafixer.fix.MemoryExpiryDataFix;
import net.minecraft.datafixer.fix.MobSpawnerEntityIdentifiersFix;
import net.minecraft.datafixer.fix.NewVillageFix;
import net.minecraft.datafixer.fix.ObjectiveDisplayNameFix;
import net.minecraft.datafixer.fix.ObjectiveRenderTypeFix;
import net.minecraft.datafixer.fix.OminousBannerBlockEntityRenameFix;
import net.minecraft.datafixer.fix.OminousBannerItemRenameFix;
import net.minecraft.datafixer.fix.OptionsAddTextBackgroundFix;
import net.minecraft.datafixer.fix.OptionsForceVBOFix;
import net.minecraft.datafixer.fix.OptionsKeyLwjgl3Fix;
import net.minecraft.datafixer.fix.OptionsKeyTranslationFix;
import net.minecraft.datafixer.fix.OptionsLowerCaseLanguageFix;
import net.minecraft.datafixer.fix.PersistentStateUuidFix;
import net.minecraft.datafixer.fix.PlayerUuidFix;
import net.minecraft.datafixer.fix.PointOfInterestReorganizationFix;
import net.minecraft.datafixer.fix.RecipeFix;
import net.minecraft.datafixer.fix.RecipeRenameFix;
import net.minecraft.datafixer.fix.RecipeRenamingFix;
import net.minecraft.datafixer.fix.RedstoneConnectionsFix;
import net.minecraft.datafixer.fix.RemovePoiValidTagFix;
import net.minecraft.datafixer.fix.RenameItemStackAttributesFix;
import net.minecraft.datafixer.fix.SavedDataVillageCropFix;
import net.minecraft.datafixer.fix.StatsCounterFix;
import net.minecraft.datafixer.fix.StriderGravityFix;
import net.minecraft.datafixer.fix.StructureReferenceFix;
import net.minecraft.datafixer.fix.SwimStatsRenameFix;
import net.minecraft.datafixer.fix.TeamDisplayNameFix;
import net.minecraft.datafixer.fix.VillagerGossipFix;
import net.minecraft.datafixer.fix.VillagerProfessionFix;
import net.minecraft.datafixer.fix.VillagerTradeFix;
import net.minecraft.datafixer.fix.VillagerXpRebuildFix;
import net.minecraft.datafixer.fix.WallPropertyFix;
import net.minecraft.datafixer.fix.WorldUuidFix;
import net.minecraft.datafixer.fix.WriteAndReadFix;
import net.minecraft.datafixer.fix.ZombieVillagerXpRebuildFix;
import net.minecraft.datafixer.mapping.LegacyCoralBlockMapping;
import net.minecraft.datafixer.mapping.LegacyCoralFanBlockMapping;
import net.minecraft.datafixer.mapping.LegacyDyeItemMapping;
import net.minecraft.datafixer.schema.IdentifierNormalizingSchema;
import net.minecraft.datafixer.schema.Schema100;
import net.minecraft.datafixer.schema.Schema102;
import net.minecraft.datafixer.schema.Schema1022;
import net.minecraft.datafixer.schema.Schema106;
import net.minecraft.datafixer.schema.Schema107;
import net.minecraft.datafixer.schema.Schema1125;
import net.minecraft.datafixer.schema.Schema135;
import net.minecraft.datafixer.schema.Schema143;
import net.minecraft.datafixer.schema.Schema1451;
import net.minecraft.datafixer.schema.Schema1451v1;
import net.minecraft.datafixer.schema.Schema1451v2;
import net.minecraft.datafixer.schema.Schema1451v3;
import net.minecraft.datafixer.schema.Schema1451v4;
import net.minecraft.datafixer.schema.Schema1451v5;
import net.minecraft.datafixer.schema.Schema1451v6;
import net.minecraft.datafixer.schema.Schema1451v7;
import net.minecraft.datafixer.schema.Schema1460;
import net.minecraft.datafixer.schema.Schema1466;
import net.minecraft.datafixer.schema.Schema1470;
import net.minecraft.datafixer.schema.Schema1481;
import net.minecraft.datafixer.schema.Schema1483;
import net.minecraft.datafixer.schema.Schema1486;
import net.minecraft.datafixer.schema.Schema1510;
import net.minecraft.datafixer.schema.Schema1800;
import net.minecraft.datafixer.schema.Schema1801;
import net.minecraft.datafixer.schema.Schema1904;
import net.minecraft.datafixer.schema.Schema1906;
import net.minecraft.datafixer.schema.Schema1909;
import net.minecraft.datafixer.schema.Schema1920;
import net.minecraft.datafixer.schema.Schema1928;
import net.minecraft.datafixer.schema.Schema1929;
import net.minecraft.datafixer.schema.Schema1931;
import net.minecraft.datafixer.schema.Schema2100;
import net.minecraft.datafixer.schema.Schema2501;
import net.minecraft.datafixer.schema.Schema2502;
import net.minecraft.datafixer.schema.Schema2505;
import net.minecraft.datafixer.schema.Schema2509;
import net.minecraft.datafixer.schema.Schema2519;
import net.minecraft.datafixer.schema.Schema2522;
import net.minecraft.datafixer.schema.Schema501;
import net.minecraft.datafixer.schema.Schema700;
import net.minecraft.datafixer.schema.Schema701;
import net.minecraft.datafixer.schema.Schema702;
import net.minecraft.datafixer.schema.Schema703;
import net.minecraft.datafixer.schema.Schema704;
import net.minecraft.datafixer.schema.Schema705;
import net.minecraft.datafixer.schema.Schema808;
import net.minecraft.datafixer.schema.Schema99;
import net.minecraft.util.Util;

public class Schemas {
    private static final BiFunction<Integer, Schema, Schema> EMPTY = Schema::new;
    private static final BiFunction<Integer, Schema, Schema> EMPTY_IDENTIFIER_NORMALIZE = IdentifierNormalizingSchema::new;
    private static final DataFixer fixer = Schemas.create();

    private static DataFixer create() {
        DataFixerBuilder dataFixerBuilder = new DataFixerBuilder(SharedConstants.getGameVersion().getWorldVersion());
        Schemas.build(dataFixerBuilder);
        return dataFixerBuilder.build(Util.getServerWorkerExecutor());
    }

    public static DataFixer getFixer() {
        return fixer;
    }

    private static void build(DataFixerBuilder dataFixerBuilder) {
        Schema schema = dataFixerBuilder.addSchema(99, Schema99::new);
        Schema schema2 = dataFixerBuilder.addSchema(100, Schema100::new);
        dataFixerBuilder.addFixer((DataFix)new EntityEquipmentToArmorAndHandFix(schema2, true));
        Schema schema3 = dataFixerBuilder.addSchema(101, EMPTY);
        dataFixerBuilder.addFixer((DataFix)new BlockEntitySignTextStrictJsonFix(schema3, false));
        Schema schema4 = dataFixerBuilder.addSchema(102, Schema102::new);
        dataFixerBuilder.addFixer((DataFix)new ItemIdFix(schema4, true));
        dataFixerBuilder.addFixer((DataFix)new ItemPotionFix(schema4, false));
        Schema schema5 = dataFixerBuilder.addSchema(105, EMPTY);
        dataFixerBuilder.addFixer((DataFix)new ItemSpawnEggFix(schema5, true));
        Schema schema6 = dataFixerBuilder.addSchema(106, Schema106::new);
        dataFixerBuilder.addFixer((DataFix)new MobSpawnerEntityIdentifiersFix(schema6, true));
        Schema schema7 = dataFixerBuilder.addSchema(107, Schema107::new);
        dataFixerBuilder.addFixer((DataFix)new EntityMinecartIdentifiersFix(schema7, true));
        Schema schema8 = dataFixerBuilder.addSchema(108, EMPTY);
        dataFixerBuilder.addFixer((DataFix)new EntityStringUuidFix(schema8, true));
        Schema schema9 = dataFixerBuilder.addSchema(109, EMPTY);
        dataFixerBuilder.addFixer((DataFix)new EntityHealthFix(schema9, true));
        Schema schema10 = dataFixerBuilder.addSchema(110, EMPTY);
        dataFixerBuilder.addFixer((DataFix)new EntityHorseSaddleFix(schema10, true));
        Schema schema11 = dataFixerBuilder.addSchema(111, EMPTY);
        dataFixerBuilder.addFixer((DataFix)new HangingEntityFix(schema11, true));
        Schema schema12 = dataFixerBuilder.addSchema(113, EMPTY);
        dataFixerBuilder.addFixer((DataFix)new EntityRedundantChanceTagsFix(schema12, true));
        Schema schema13 = dataFixerBuilder.addSchema(135, Schema135::new);
        dataFixerBuilder.addFixer((DataFix)new EntityRidingToPassengerFix(schema13, true));
        Schema schema14 = dataFixerBuilder.addSchema(143, Schema143::new);
        dataFixerBuilder.addFixer((DataFix)new EntityTippedArrowFix(schema14, true));
        Schema schema15 = dataFixerBuilder.addSchema(147, EMPTY);
        dataFixerBuilder.addFixer((DataFix)new EntityArmorStandSilentFix(schema15, true));
        Schema schema16 = dataFixerBuilder.addSchema(165, EMPTY);
        dataFixerBuilder.addFixer((DataFix)new ItemWrittenBookPagesStrictJsonFix(schema16, true));
        Schema schema17 = dataFixerBuilder.addSchema(501, Schema501::new);
        dataFixerBuilder.addFixer((DataFix)new ChoiceTypesFix(schema17, "Add 1.10 entities fix", TypeReferences.ENTITY));
        Schema schema18 = dataFixerBuilder.addSchema(502, EMPTY);
        dataFixerBuilder.addFixer(ItemNameFix.create(schema18, "cooked_fished item renamer", string -> Objects.equals(IdentifierNormalizingSchema.normalize(string), "minecraft:cooked_fished") ? "minecraft:cooked_fish" : string));
        dataFixerBuilder.addFixer((DataFix)new EntityZombieVillagerTypeFix(schema18, false));
        Schema schema19 = dataFixerBuilder.addSchema(505, EMPTY);
        dataFixerBuilder.addFixer((DataFix)new OptionsForceVBOFix(schema19, false));
        Schema schema20 = dataFixerBuilder.addSchema(700, Schema700::new);
        dataFixerBuilder.addFixer((DataFix)new EntityElderGuardianSplitFix(schema20, true));
        Schema schema21 = dataFixerBuilder.addSchema(701, Schema701::new);
        dataFixerBuilder.addFixer((DataFix)new EntitySkeletonSplitFix(schema21, true));
        Schema schema22 = dataFixerBuilder.addSchema(702, Schema702::new);
        dataFixerBuilder.addFixer((DataFix)new EntityZombieSplitFix(schema22, true));
        Schema schema23 = dataFixerBuilder.addSchema(703, Schema703::new);
        dataFixerBuilder.addFixer((DataFix)new EntityHorseSplitFix(schema23, true));
        Schema schema24 = dataFixerBuilder.addSchema(704, Schema704::new);
        dataFixerBuilder.addFixer((DataFix)new BlockEntityIdFix(schema24, true));
        Schema schema25 = dataFixerBuilder.addSchema(705, Schema705::new);
        dataFixerBuilder.addFixer((DataFix)new EntityIdFix(schema25, true));
        Schema schema26 = dataFixerBuilder.addSchema(804, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new ItemBannerColorFix(schema26, true));
        Schema schema27 = dataFixerBuilder.addSchema(806, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new ItemWaterPotionFix(schema27, false));
        Schema schema28 = dataFixerBuilder.addSchema(808, Schema808::new);
        dataFixerBuilder.addFixer((DataFix)new ChoiceTypesFix(schema28, "added shulker box", TypeReferences.BLOCK_ENTITY));
        Schema schema29 = dataFixerBuilder.addSchema(808, 1, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new EntityShulkerColorFix(schema29, false));
        Schema schema30 = dataFixerBuilder.addSchema(813, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new ItemShulkerBoxColorFix(schema30, false));
        dataFixerBuilder.addFixer((DataFix)new BlockEntityShulkerBoxColorFix(schema30, false));
        Schema schema31 = dataFixerBuilder.addSchema(816, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new OptionsLowerCaseLanguageFix(schema31, false));
        Schema schema32 = dataFixerBuilder.addSchema(820, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer(ItemNameFix.create(schema32, "totem item renamer", string -> Objects.equals(string, "minecraft:totem") ? "minecraft:totem_of_undying" : string));
        Schema schema33 = dataFixerBuilder.addSchema(1022, Schema1022::new);
        dataFixerBuilder.addFixer((DataFix)new WriteAndReadFix(schema33, "added shoulder entities to players", TypeReferences.PLAYER));
        Schema schema34 = dataFixerBuilder.addSchema(1125, Schema1125::new);
        dataFixerBuilder.addFixer((DataFix)new BedBlockEntityFix(schema34, true));
        dataFixerBuilder.addFixer((DataFix)new BedItemColorFix(schema34, false));
        Schema schema35 = dataFixerBuilder.addSchema(1344, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new OptionsKeyLwjgl3Fix(schema35, false));
        Schema schema36 = dataFixerBuilder.addSchema(1446, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new OptionsKeyTranslationFix(schema36, false));
        Schema schema37 = dataFixerBuilder.addSchema(1450, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new BlockStateStructureTemplateFix(schema37, false));
        Schema schema38 = dataFixerBuilder.addSchema(1451, Schema1451::new);
        dataFixerBuilder.addFixer((DataFix)new ChoiceTypesFix(schema38, "AddTrappedChestFix", TypeReferences.BLOCK_ENTITY));
        Schema schema39 = dataFixerBuilder.addSchema(1451, 1, Schema1451v1::new);
        dataFixerBuilder.addFixer((DataFix)new ChunkPalettedStorageFix(schema39, true));
        Schema schema40 = dataFixerBuilder.addSchema(1451, 2, Schema1451v2::new);
        dataFixerBuilder.addFixer((DataFix)new BlockEntityBlockStateFix(schema40, true));
        Schema schema41 = dataFixerBuilder.addSchema(1451, 3, Schema1451v3::new);
        dataFixerBuilder.addFixer((DataFix)new EntityBlockStateFix(schema41, true));
        dataFixerBuilder.addFixer((DataFix)new ItemInstanceMapIdFix(schema41, false));
        Schema schema42 = dataFixerBuilder.addSchema(1451, 4, Schema1451v4::new);
        dataFixerBuilder.addFixer((DataFix)new BlockNameFlatteningFix(schema42, true));
        dataFixerBuilder.addFixer((DataFix)new ItemInstanceTheFlatteningFix(schema42, false));
        Schema schema43 = dataFixerBuilder.addSchema(1451, 5, Schema1451v5::new);
        dataFixerBuilder.addFixer((DataFix)new ChoiceTypesFix(schema43, "RemoveNoteBlockFlowerPotFix", TypeReferences.BLOCK_ENTITY));
        dataFixerBuilder.addFixer((DataFix)new ItemInstanceSpawnEggFix(schema43, false));
        dataFixerBuilder.addFixer((DataFix)new EntityWolfColorFix(schema43, false));
        dataFixerBuilder.addFixer((DataFix)new BlockEntityBannerColorFix(schema43, false));
        dataFixerBuilder.addFixer((DataFix)new LevelFlatGeneratorInfoFix(schema43, false));
        Schema schema44 = dataFixerBuilder.addSchema(1451, 6, Schema1451v6::new);
        dataFixerBuilder.addFixer((DataFix)new StatsCounterFix(schema44, true));
        dataFixerBuilder.addFixer((DataFix)new BlockEntityJukeboxFix(schema44, false));
        Schema schema45 = dataFixerBuilder.addSchema(1451, 7, Schema1451v7::new);
        dataFixerBuilder.addFixer((DataFix)new SavedDataVillageCropFix(schema45, true));
        Schema schema46 = dataFixerBuilder.addSchema(1451, 7, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new VillagerTradeFix(schema46, false));
        Schema schema47 = dataFixerBuilder.addSchema(1456, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new EntityItemFrameDirectionFix(schema47, false));
        Schema schema48 = dataFixerBuilder.addSchema(1458, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new EntityCustomNameToTextFix(schema48, false));
        dataFixerBuilder.addFixer((DataFix)new ItemCustomNameToComponentFix(schema48, false));
        dataFixerBuilder.addFixer((DataFix)new BlockEntityCustomNameToTextFix(schema48, false));
        Schema schema49 = dataFixerBuilder.addSchema(1460, Schema1460::new);
        dataFixerBuilder.addFixer((DataFix)new EntityPaintingMotiveFix(schema49, false));
        Schema schema50 = dataFixerBuilder.addSchema(1466, Schema1466::new);
        dataFixerBuilder.addFixer((DataFix)new ChunkToProtoChunkFix(schema50, true));
        Schema schema51 = dataFixerBuilder.addSchema(1470, Schema1470::new);
        dataFixerBuilder.addFixer((DataFix)new ChoiceTypesFix(schema51, "Add 1.13 entities fix", TypeReferences.ENTITY));
        Schema schema52 = dataFixerBuilder.addSchema(1474, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new ColorlessShulkerEntityFix(schema52, false));
        dataFixerBuilder.addFixer(BlockNameFix.create(schema52, "Colorless shulker block fixer", string -> Objects.equals(IdentifierNormalizingSchema.normalize(string), "minecraft:purple_shulker_box") ? "minecraft:shulker_box" : string));
        dataFixerBuilder.addFixer(ItemNameFix.create(schema52, "Colorless shulker item fixer", string -> Objects.equals(IdentifierNormalizingSchema.normalize(string), "minecraft:purple_shulker_box") ? "minecraft:shulker_box" : string));
        Schema schema53 = dataFixerBuilder.addSchema(1475, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer(BlockNameFix.create(schema53, "Flowing fixer", string -> (String)ImmutableMap.of((Object)"minecraft:flowing_water", (Object)"minecraft:water", (Object)"minecraft:flowing_lava", (Object)"minecraft:lava").getOrDefault(string, string)));
        Schema schema54 = dataFixerBuilder.addSchema(1480, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer(BlockNameFix.create(schema54, "Rename coral blocks", string -> LegacyCoralBlockMapping.MAP.getOrDefault(string, (String)string)));
        dataFixerBuilder.addFixer(ItemNameFix.create(schema54, "Rename coral items", string -> LegacyCoralBlockMapping.MAP.getOrDefault(string, (String)string)));
        Schema schema55 = dataFixerBuilder.addSchema(1481, Schema1481::new);
        dataFixerBuilder.addFixer((DataFix)new ChoiceTypesFix(schema55, "Add conduit", TypeReferences.BLOCK_ENTITY));
        Schema schema56 = dataFixerBuilder.addSchema(1483, Schema1483::new);
        dataFixerBuilder.addFixer((DataFix)new EntityPufferfishRenameFix(schema56, true));
        dataFixerBuilder.addFixer(ItemNameFix.create(schema56, "Rename pufferfish egg item", string -> EntityPufferfishRenameFix.RENAMED_FISHES.getOrDefault(string, (String)string)));
        Schema schema57 = dataFixerBuilder.addSchema(1484, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer(ItemNameFix.create(schema57, "Rename seagrass items", string -> (String)ImmutableMap.of((Object)"minecraft:sea_grass", (Object)"minecraft:seagrass", (Object)"minecraft:tall_sea_grass", (Object)"minecraft:tall_seagrass").getOrDefault(string, string)));
        dataFixerBuilder.addFixer(BlockNameFix.create(schema57, "Rename seagrass blocks", string -> (String)ImmutableMap.of((Object)"minecraft:sea_grass", (Object)"minecraft:seagrass", (Object)"minecraft:tall_sea_grass", (Object)"minecraft:tall_seagrass").getOrDefault(string, string)));
        dataFixerBuilder.addFixer((DataFix)new HeightmapRenamingFix(schema57, false));
        Schema schema58 = dataFixerBuilder.addSchema(1486, Schema1486::new);
        dataFixerBuilder.addFixer((DataFix)new EntityCodSalmonFix(schema58, true));
        dataFixerBuilder.addFixer(ItemNameFix.create(schema58, "Rename cod/salmon egg items", string -> EntityCodSalmonFix.SPAWN_EGGS.getOrDefault(string, (String)string)));
        Schema schema59 = dataFixerBuilder.addSchema(1487, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer(ItemNameFix.create(schema59, "Rename prismarine_brick(s)_* blocks", string -> (String)ImmutableMap.of((Object)"minecraft:prismarine_bricks_slab", (Object)"minecraft:prismarine_brick_slab", (Object)"minecraft:prismarine_bricks_stairs", (Object)"minecraft:prismarine_brick_stairs").getOrDefault(string, string)));
        dataFixerBuilder.addFixer(BlockNameFix.create(schema59, "Rename prismarine_brick(s)_* items", string -> (String)ImmutableMap.of((Object)"minecraft:prismarine_bricks_slab", (Object)"minecraft:prismarine_brick_slab", (Object)"minecraft:prismarine_bricks_stairs", (Object)"minecraft:prismarine_brick_stairs").getOrDefault(string, string)));
        Schema schema60 = dataFixerBuilder.addSchema(1488, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer(BlockNameFix.create(schema60, "Rename kelp/kelptop", string -> (String)ImmutableMap.of((Object)"minecraft:kelp_top", (Object)"minecraft:kelp", (Object)"minecraft:kelp", (Object)"minecraft:kelp_plant").getOrDefault(string, string)));
        dataFixerBuilder.addFixer(ItemNameFix.create(schema60, "Rename kelptop", string -> Objects.equals(string, "minecraft:kelp_top") ? "minecraft:kelp" : string));
        dataFixerBuilder.addFixer((DataFix)new ChoiceFix(schema60, false, "Command block block entity custom name fix", TypeReferences.BLOCK_ENTITY, "minecraft:command_block"){

            @Override
            protected Typed<?> transform(Typed<?> typed) {
                return typed.update(DSL.remainderFinder(), EntityCustomNameToTextFix::fixCustomName);
            }
        });
        dataFixerBuilder.addFixer((DataFix)new ChoiceFix(schema60, false, "Command block minecart custom name fix", TypeReferences.ENTITY, "minecraft:commandblock_minecart"){

            @Override
            protected Typed<?> transform(Typed<?> typed) {
                return typed.update(DSL.remainderFinder(), EntityCustomNameToTextFix::fixCustomName);
            }
        });
        dataFixerBuilder.addFixer((DataFix)new IglooMetadataRemovalFix(schema60, false));
        Schema schema61 = dataFixerBuilder.addSchema(1490, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer(BlockNameFix.create(schema61, "Rename melon_block", string -> Objects.equals(string, "minecraft:melon_block") ? "minecraft:melon" : string));
        dataFixerBuilder.addFixer(ItemNameFix.create(schema61, "Rename melon_block/melon/speckled_melon", string -> (String)ImmutableMap.of((Object)"minecraft:melon_block", (Object)"minecraft:melon", (Object)"minecraft:melon", (Object)"minecraft:melon_slice", (Object)"minecraft:speckled_melon", (Object)"minecraft:glistering_melon_slice").getOrDefault(string, string)));
        Schema schema62 = dataFixerBuilder.addSchema(1492, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new ChunkStructuresTemplateRenameFix(schema62, false));
        Schema schema63 = dataFixerBuilder.addSchema(1494, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new ItemStackEnchantmentFix(schema63, false));
        Schema schema64 = dataFixerBuilder.addSchema(1496, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new LeavesFix(schema64, false));
        Schema schema65 = dataFixerBuilder.addSchema(1500, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new BlockEntityKeepPacked(schema65, false));
        Schema schema66 = dataFixerBuilder.addSchema(1501, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new AdvancementsFix(schema66, false));
        Schema schema67 = dataFixerBuilder.addSchema(1502, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new RecipeFix(schema67, false));
        Schema schema68 = dataFixerBuilder.addSchema(1506, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new LevelDataGeneratorOptionsFix(schema68, false));
        Schema schema69 = dataFixerBuilder.addSchema(1508, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new BiomesFix(schema69, false));
        Schema schema70 = dataFixerBuilder.addSchema(1510, Schema1510::new);
        dataFixerBuilder.addFixer(BlockNameFix.create(schema70, "Block renamening fix", string -> EntityTheRenameningBlock.BLOCKS.getOrDefault(string, (String)string)));
        dataFixerBuilder.addFixer(ItemNameFix.create(schema70, "Item renamening fix", string -> EntityTheRenameningBlock.ITEMS.getOrDefault(string, (String)string)));
        dataFixerBuilder.addFixer((DataFix)new RecipeRenamingFix(schema70, false));
        dataFixerBuilder.addFixer((DataFix)new EntityTheRenameningBlock(schema70, true));
        dataFixerBuilder.addFixer((DataFix)new SwimStatsRenameFix(schema70, false));
        Schema schema71 = dataFixerBuilder.addSchema(1514, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new ObjectiveDisplayNameFix(schema71, false));
        dataFixerBuilder.addFixer((DataFix)new TeamDisplayNameFix(schema71, false));
        dataFixerBuilder.addFixer((DataFix)new ObjectiveRenderTypeFix(schema71, false));
        Schema schema72 = dataFixerBuilder.addSchema(1515, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer(BlockNameFix.create(schema72, "Rename coral fan blocks", string -> LegacyCoralFanBlockMapping.MAP.getOrDefault(string, (String)string)));
        Schema schema73 = dataFixerBuilder.addSchema(1624, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new AddTrappedChestFix(schema73, false));
        Schema schema74 = dataFixerBuilder.addSchema(1800, Schema1800::new);
        dataFixerBuilder.addFixer((DataFix)new ChoiceTypesFix(schema74, "Added 1.14 mobs fix", TypeReferences.ENTITY));
        dataFixerBuilder.addFixer(ItemNameFix.create(schema74, "Rename dye items", string -> LegacyDyeItemMapping.MAP.getOrDefault(string, (String)string)));
        Schema schema75 = dataFixerBuilder.addSchema(1801, Schema1801::new);
        dataFixerBuilder.addFixer((DataFix)new ChoiceTypesFix(schema75, "Added Illager Beast", TypeReferences.ENTITY));
        Schema schema76 = dataFixerBuilder.addSchema(1802, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer(BlockNameFix.create(schema76, "Rename sign blocks & stone slabs", string -> (String)ImmutableMap.of((Object)"minecraft:stone_slab", (Object)"minecraft:smooth_stone_slab", (Object)"minecraft:sign", (Object)"minecraft:oak_sign", (Object)"minecraft:wall_sign", (Object)"minecraft:oak_wall_sign").getOrDefault(string, string)));
        dataFixerBuilder.addFixer(ItemNameFix.create(schema76, "Rename sign item & stone slabs", string -> (String)ImmutableMap.of((Object)"minecraft:stone_slab", (Object)"minecraft:smooth_stone_slab", (Object)"minecraft:sign", (Object)"minecraft:oak_sign").getOrDefault(string, string)));
        Schema schema77 = dataFixerBuilder.addSchema(1803, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new ItemLoreToTextFix(schema77, false));
        Schema schema78 = dataFixerBuilder.addSchema(1904, Schema1904::new);
        dataFixerBuilder.addFixer((DataFix)new ChoiceTypesFix(schema78, "Added Cats", TypeReferences.ENTITY));
        dataFixerBuilder.addFixer((DataFix)new EntityCatSplitFix(schema78, false));
        Schema schema79 = dataFixerBuilder.addSchema(1905, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new ChunkStatusFix(schema79, false));
        Schema schema80 = dataFixerBuilder.addSchema(1906, Schema1906::new);
        dataFixerBuilder.addFixer((DataFix)new ChoiceTypesFix(schema80, "Add POI Blocks", TypeReferences.BLOCK_ENTITY));
        Schema schema81 = dataFixerBuilder.addSchema(1909, Schema1909::new);
        dataFixerBuilder.addFixer((DataFix)new ChoiceTypesFix(schema81, "Add jigsaw", TypeReferences.BLOCK_ENTITY));
        Schema schema82 = dataFixerBuilder.addSchema(1911, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new ChunkStatusFix2(schema82, false));
        Schema schema83 = dataFixerBuilder.addSchema(1917, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new CatTypeFix(schema83, false));
        Schema schema84 = dataFixerBuilder.addSchema(1918, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new VillagerProfessionFix(schema84, "minecraft:villager"));
        dataFixerBuilder.addFixer((DataFix)new VillagerProfessionFix(schema84, "minecraft:zombie_villager"));
        Schema schema85 = dataFixerBuilder.addSchema(1920, Schema1920::new);
        dataFixerBuilder.addFixer((DataFix)new NewVillageFix(schema85, false));
        dataFixerBuilder.addFixer((DataFix)new ChoiceTypesFix(schema85, "Add campfire", TypeReferences.BLOCK_ENTITY));
        Schema schema86 = dataFixerBuilder.addSchema(1925, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new MapIdFix(schema86, false));
        Schema schema87 = dataFixerBuilder.addSchema(1928, Schema1928::new);
        dataFixerBuilder.addFixer((DataFix)new EntityRavagerRenameFix(schema87, true));
        dataFixerBuilder.addFixer(ItemNameFix.create(schema87, "Rename ravager egg item", string -> EntityRavagerRenameFix.ITEMS.getOrDefault(string, (String)string)));
        Schema schema88 = dataFixerBuilder.addSchema(1929, Schema1929::new);
        dataFixerBuilder.addFixer((DataFix)new ChoiceTypesFix(schema88, "Add Wandering Trader and Trader Llama", TypeReferences.ENTITY));
        Schema schema89 = dataFixerBuilder.addSchema(1931, Schema1931::new);
        dataFixerBuilder.addFixer((DataFix)new ChoiceTypesFix(schema89, "Added Fox", TypeReferences.ENTITY));
        Schema schema90 = dataFixerBuilder.addSchema(1936, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new OptionsAddTextBackgroundFix(schema90, false));
        Schema schema91 = dataFixerBuilder.addSchema(1946, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new PointOfInterestReorganizationFix(schema91, false));
        Schema schema92 = dataFixerBuilder.addSchema(1948, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new OminousBannerItemRenameFix(schema92, false));
        Schema schema93 = dataFixerBuilder.addSchema(1953, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new OminousBannerBlockEntityRenameFix(schema93, false));
        Schema schema94 = dataFixerBuilder.addSchema(1955, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new VillagerXpRebuildFix(schema94, false));
        dataFixerBuilder.addFixer((DataFix)new ZombieVillagerXpRebuildFix(schema94, false));
        Schema schema95 = dataFixerBuilder.addSchema(1961, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new ChunkLightRemoveFix(schema95, false));
        Schema schema96 = dataFixerBuilder.addSchema(2100, Schema2100::new);
        dataFixerBuilder.addFixer((DataFix)new ChoiceTypesFix(schema96, "Added Bee and Bee Stinger", TypeReferences.ENTITY));
        dataFixerBuilder.addFixer((DataFix)new ChoiceTypesFix(schema96, "Add beehive", TypeReferences.BLOCK_ENTITY));
        dataFixerBuilder.addFixer((DataFix)new RecipeRenameFix(schema96, false, "Rename sugar recipe", string -> "minecraft:sugar".equals(string) ? "sugar_from_sugar_cane" : string));
        dataFixerBuilder.addFixer((DataFix)new AdvancementRenameFix(schema96, false, "Rename sugar recipe advancement", string -> "minecraft:recipes/misc/sugar".equals(string) ? "minecraft:recipes/misc/sugar_from_sugar_cane" : string));
        Schema schema97 = dataFixerBuilder.addSchema(2202, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new BiomeFormatFix(schema97, false));
        Schema schema98 = dataFixerBuilder.addSchema(2209, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer(ItemNameFix.create(schema98, "Rename bee_hive item to beehive", string -> Objects.equals(string, "minecraft:bee_hive") ? "minecraft:beehive" : string));
        dataFixerBuilder.addFixer((DataFix)new BeehiveRenameFix(schema98));
        dataFixerBuilder.addFixer(BlockNameFix.create(schema98, "Rename bee_hive block to beehive", string -> (String)ImmutableMap.of((Object)"minecraft:bee_hive", (Object)"minecraft:beehive").getOrDefault(string, string)));
        Schema schema99 = dataFixerBuilder.addSchema(2211, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new StructureReferenceFix(schema99, false));
        Schema schema100 = dataFixerBuilder.addSchema(2218, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new RemovePoiValidTagFix(schema100, false));
        Schema schema101 = dataFixerBuilder.addSchema(2501, Schema2501::new);
        dataFixerBuilder.addFixer((DataFix)new FurnaceRecipesFix(schema101, true));
        Schema schema102 = dataFixerBuilder.addSchema(2502, Schema2502::new);
        dataFixerBuilder.addFixer((DataFix)new ChoiceTypesFix(schema102, "Added Hoglin", TypeReferences.ENTITY));
        dataFixerBuilder.addFixer((DataFix)new BiomeRenameFix(schema102, false, "Nether biome rename", (Map<String, String>)ImmutableMap.of((Object)"minecraft:nether", (Object)"minecraft:nether_wastes")));
        Schema schema103 = dataFixerBuilder.addSchema(2503, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new WallPropertyFix(schema103, false));
        Schema schema104 = dataFixerBuilder.addSchema(2505, Schema2505::new);
        dataFixerBuilder.addFixer((DataFix)new ChoiceTypesFix(schema104, "Added Piglin", TypeReferences.ENTITY));
        dataFixerBuilder.addFixer((DataFix)new MemoryExpiryDataFix(schema104, "minecraft:villager"));
        Schema schema105 = dataFixerBuilder.addSchema(2508, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer(ItemNameFix.create(schema105, "Renamed fungi items to fungus", string -> (String)ImmutableMap.of((Object)"minecraft:warped_fungi", (Object)"minecraft:warped_fungus", (Object)"minecraft:crimson_fungi", (Object)"minecraft:crimson_fungus").getOrDefault(string, string)));
        dataFixerBuilder.addFixer(BlockNameFix.create(schema105, "Renamed fungi blocks to fungus", string -> (String)ImmutableMap.of((Object)"minecraft:warped_fungi", (Object)"minecraft:warped_fungus", (Object)"minecraft:crimson_fungi", (Object)"minecraft:crimson_fungus").getOrDefault(string, string)));
        Schema schema106 = dataFixerBuilder.addSchema(2509, Schema2509::new);
        dataFixerBuilder.addFixer((DataFix)new EntityZombifiedPiglinRenameFix(schema106));
        dataFixerBuilder.addFixer(ItemNameFix.create(schema106, "Rename zombie pigman egg item", string -> EntityZombifiedPiglinRenameFix.RENAMES.getOrDefault(string, (String)string)));
        Schema schema107 = dataFixerBuilder.addSchema(2511, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new EntityProjectileOwnerFix(schema107));
        Schema schema108 = dataFixerBuilder.addSchema(2514, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new EntityUuidFix(schema108));
        dataFixerBuilder.addFixer((DataFix)new BlockEntityUuidFix(schema108));
        dataFixerBuilder.addFixer((DataFix)new PlayerUuidFix(schema108));
        dataFixerBuilder.addFixer((DataFix)new WorldUuidFix(schema108));
        dataFixerBuilder.addFixer((DataFix)new PersistentStateUuidFix(schema108));
        dataFixerBuilder.addFixer((DataFix)new ItemStackUuidFix(schema108));
        Schema schema109 = dataFixerBuilder.addSchema(2516, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new VillagerGossipFix(schema109, "minecraft:villager"));
        dataFixerBuilder.addFixer((DataFix)new VillagerGossipFix(schema109, "minecraft:zombie_villager"));
        Schema schema110 = dataFixerBuilder.addSchema(2518, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new JigsawPropertiesFix(schema110, false));
        dataFixerBuilder.addFixer((DataFix)new JigsawRotationFix(schema110, false));
        Schema schema111 = dataFixerBuilder.addSchema(2519, Schema2519::new);
        dataFixerBuilder.addFixer((DataFix)new ChoiceTypesFix(schema111, "Added Strider", TypeReferences.ENTITY));
        Schema schema112 = dataFixerBuilder.addSchema(2522, Schema2522::new);
        dataFixerBuilder.addFixer((DataFix)new ChoiceTypesFix(schema112, "Added Zoglin", TypeReferences.ENTITY));
        Schema schema113 = dataFixerBuilder.addSchema(2523, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new RenameItemStackAttributesFix(schema113));
        Schema schema114 = dataFixerBuilder.addSchema(2527, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new class_5196(schema114));
        Schema schema115 = dataFixerBuilder.addSchema(2528, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer(ItemNameFix.create(schema115, "Rename soul fire torch and soul fire lantern", string -> (String)ImmutableMap.of((Object)"minecraft:soul_fire_torch", (Object)"minecraft:soul_torch", (Object)"minecraft:soul_fire_lantern", (Object)"minecraft:soul_lantern").getOrDefault(string, string)));
        dataFixerBuilder.addFixer(BlockNameFix.create(schema115, "Rename soul fire torch and soul fire lantern", string -> (String)ImmutableMap.of((Object)"minecraft:soul_fire_torch", (Object)"minecraft:soul_torch", (Object)"minecraft:soul_fire_wall_torch", (Object)"minecraft:soul_wall_torch", (Object)"minecraft:soul_fire_lantern", (Object)"minecraft:soul_lantern").getOrDefault(string, string)));
        Schema schema116 = dataFixerBuilder.addSchema(2529, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new StriderGravityFix(schema116, false));
        Schema schema117 = dataFixerBuilder.addSchema(2531, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new RedstoneConnectionsFix(schema117));
        Schema schema118 = dataFixerBuilder.addSchema(2533, EMPTY_IDENTIFIER_NORMALIZE);
        dataFixerBuilder.addFixer((DataFix)new class_5273(schema118));
    }
}

