/*
 * Decompiled with CFR 0.149.
 */
package net.minecraft.block;

import java.util.function.ToIntFunction;
import net.minecraft.block.AbstractBlock;
import net.minecraft.block.AirBlock;
import net.minecraft.block.AnvilBlock;
import net.minecraft.block.AttachedStemBlock;
import net.minecraft.block.BambooBlock;
import net.minecraft.block.BambooSaplingBlock;
import net.minecraft.block.BannerBlock;
import net.minecraft.block.BarrelBlock;
import net.minecraft.block.BarrierBlock;
import net.minecraft.block.BeaconBlock;
import net.minecraft.block.BedBlock;
import net.minecraft.block.BeehiveBlock;
import net.minecraft.block.BeetrootsBlock;
import net.minecraft.block.BellBlock;
import net.minecraft.block.BlastFurnaceBlock;
import net.minecraft.block.Block;
import net.minecraft.block.BlockState;
import net.minecraft.block.BrewingStandBlock;
import net.minecraft.block.BubbleColumnBlock;
import net.minecraft.block.CactusBlock;
import net.minecraft.block.CakeBlock;
import net.minecraft.block.CampfireBlock;
import net.minecraft.block.CarpetBlock;
import net.minecraft.block.CarrotsBlock;
import net.minecraft.block.CartographyTableBlock;
import net.minecraft.block.CarvedPumpkinBlock;
import net.minecraft.block.CauldronBlock;
import net.minecraft.block.ChainBlock;
import net.minecraft.block.ChestBlock;
import net.minecraft.block.ChorusFlowerBlock;
import net.minecraft.block.ChorusPlantBlock;
import net.minecraft.block.CobwebBlock;
import net.minecraft.block.CocoaBlock;
import net.minecraft.block.CommandBlock;
import net.minecraft.block.ComparatorBlock;
import net.minecraft.block.ComposterBlock;
import net.minecraft.block.ConcretePowderBlock;
import net.minecraft.block.ConduitBlock;
import net.minecraft.block.CoralBlock;
import net.minecraft.block.CoralBlockBlock;
import net.minecraft.block.CoralFanBlock;
import net.minecraft.block.CoralWallFanBlock;
import net.minecraft.block.CraftingTableBlock;
import net.minecraft.block.CropBlock;
import net.minecraft.block.CryingObsidianBlock;
import net.minecraft.block.DaylightDetectorBlock;
import net.minecraft.block.DeadBushBlock;
import net.minecraft.block.DeadCoralBlock;
import net.minecraft.block.DeadCoralFanBlock;
import net.minecraft.block.DeadCoralWallFanBlock;
import net.minecraft.block.DetectorRailBlock;
import net.minecraft.block.DispenserBlock;
import net.minecraft.block.DoorBlock;
import net.minecraft.block.DragonEggBlock;
import net.minecraft.block.DropperBlock;
import net.minecraft.block.EnchantingTableBlock;
import net.minecraft.block.EndGatewayBlock;
import net.minecraft.block.EndPortalBlock;
import net.minecraft.block.EndPortalFrameBlock;
import net.minecraft.block.EndRodBlock;
import net.minecraft.block.EnderChestBlock;
import net.minecraft.block.FarmlandBlock;
import net.minecraft.block.FenceBlock;
import net.minecraft.block.FenceGateBlock;
import net.minecraft.block.FernBlock;
import net.minecraft.block.FireBlock;
import net.minecraft.block.FletchingTableBlock;
import net.minecraft.block.FlowerBlock;
import net.minecraft.block.FlowerPotBlock;
import net.minecraft.block.FluidBlock;
import net.minecraft.block.FrostedIceBlock;
import net.minecraft.block.FungusBlock;
import net.minecraft.block.FurnaceBlock;
import net.minecraft.block.GlassBlock;
import net.minecraft.block.GlazedTerracottaBlock;
import net.minecraft.block.GourdBlock;
import net.minecraft.block.GrassBlock;
import net.minecraft.block.GrassPathBlock;
import net.minecraft.block.GravelBlock;
import net.minecraft.block.GrindstoneBlock;
import net.minecraft.block.HayBlock;
import net.minecraft.block.HoneyBlock;
import net.minecraft.block.HopperBlock;
import net.minecraft.block.IceBlock;
import net.minecraft.block.InfestedBlock;
import net.minecraft.block.JigsawBlock;
import net.minecraft.block.JukeboxBlock;
import net.minecraft.block.KelpBlock;
import net.minecraft.block.KelpPlantBlock;
import net.minecraft.block.LadderBlock;
import net.minecraft.block.LanternBlock;
import net.minecraft.block.LeavesBlock;
import net.minecraft.block.LecternBlock;
import net.minecraft.block.LeverBlock;
import net.minecraft.block.LilyPadBlock;
import net.minecraft.block.LoomBlock;
import net.minecraft.block.MagmaBlock;
import net.minecraft.block.Material;
import net.minecraft.block.MaterialColor;
import net.minecraft.block.MelonBlock;
import net.minecraft.block.MushroomBlock;
import net.minecraft.block.MushroomPlantBlock;
import net.minecraft.block.MyceliumBlock;
import net.minecraft.block.NetherPortalBlock;
import net.minecraft.block.NetherWartBlock;
import net.minecraft.block.NetherrackBlock;
import net.minecraft.block.NoteBlock;
import net.minecraft.block.NyliumBlock;
import net.minecraft.block.ObserverBlock;
import net.minecraft.block.OreBlock;
import net.minecraft.block.PaneBlock;
import net.minecraft.block.PillarBlock;
import net.minecraft.block.PistonBlock;
import net.minecraft.block.PistonExtensionBlock;
import net.minecraft.block.PistonHeadBlock;
import net.minecraft.block.PlayerSkullBlock;
import net.minecraft.block.PotatoesBlock;
import net.minecraft.block.PoweredRailBlock;
import net.minecraft.block.PressurePlateBlock;
import net.minecraft.block.PumpkinBlock;
import net.minecraft.block.RailBlock;
import net.minecraft.block.RedstoneBlock;
import net.minecraft.block.RedstoneLampBlock;
import net.minecraft.block.RedstoneOreBlock;
import net.minecraft.block.RedstoneTorchBlock;
import net.minecraft.block.RedstoneWireBlock;
import net.minecraft.block.RepeaterBlock;
import net.minecraft.block.RespawnAnchorBlock;
import net.minecraft.block.RootsBlock;
import net.minecraft.block.SandBlock;
import net.minecraft.block.SaplingBlock;
import net.minecraft.block.ScaffoldingBlock;
import net.minecraft.block.SeaPickleBlock;
import net.minecraft.block.SeagrassBlock;
import net.minecraft.block.ShulkerBoxBlock;
import net.minecraft.block.SignBlock;
import net.minecraft.block.SkullBlock;
import net.minecraft.block.SlabBlock;
import net.minecraft.block.SlimeBlock;
import net.minecraft.block.SmithingTableBlock;
import net.minecraft.block.SmokerBlock;
import net.minecraft.block.SnowBlock;
import net.minecraft.block.SnowyBlock;
import net.minecraft.block.SoulFireBlock;
import net.minecraft.block.SoulSandBlock;
import net.minecraft.block.SpawnerBlock;
import net.minecraft.block.SpongeBlock;
import net.minecraft.block.SproutsBlock;
import net.minecraft.block.StainedGlassBlock;
import net.minecraft.block.StainedGlassPaneBlock;
import net.minecraft.block.StairsBlock;
import net.minecraft.block.StemBlock;
import net.minecraft.block.StoneButtonBlock;
import net.minecraft.block.StonecutterBlock;
import net.minecraft.block.StructureBlock;
import net.minecraft.block.StructureVoidBlock;
import net.minecraft.block.SugarCaneBlock;
import net.minecraft.block.SweetBerryBushBlock;
import net.minecraft.block.TallFlowerBlock;
import net.minecraft.block.TallPlantBlock;
import net.minecraft.block.TallSeagrassBlock;
import net.minecraft.block.TargetBlock;
import net.minecraft.block.TntBlock;
import net.minecraft.block.TorchBlock;
import net.minecraft.block.TransparentBlock;
import net.minecraft.block.TrapdoorBlock;
import net.minecraft.block.TrappedChestBlock;
import net.minecraft.block.TripwireBlock;
import net.minecraft.block.TripwireHookBlock;
import net.minecraft.block.TurtleEggBlock;
import net.minecraft.block.TwistingVinesBlock;
import net.minecraft.block.TwistingVinesPlantBlock;
import net.minecraft.block.VineBlock;
import net.minecraft.block.WallBannerBlock;
import net.minecraft.block.WallBlock;
import net.minecraft.block.WallPlayerSkullBlock;
import net.minecraft.block.WallRedstoneTorchBlock;
import net.minecraft.block.WallSignBlock;
import net.minecraft.block.WallSkullBlock;
import net.minecraft.block.WallTorchBlock;
import net.minecraft.block.WallWitherSkullBlock;
import net.minecraft.block.WeepingVinesBlock;
import net.minecraft.block.WeepingVinesPlantBlock;
import net.minecraft.block.WeightedPressurePlateBlock;
import net.minecraft.block.WetSpongeBlock;
import net.minecraft.block.WitherRoseBlock;
import net.minecraft.block.WitherSkullBlock;
import net.minecraft.block.WoodButtonBlock;
import net.minecraft.block.entity.BlockEntity;
import net.minecraft.block.entity.BlockEntityType;
import net.minecraft.block.entity.ShulkerBoxBlockEntity;
import net.minecraft.block.enums.BedPart;
import net.minecraft.block.sapling.AcaciaSaplingGenerator;
import net.minecraft.block.sapling.BirchSaplingGenerator;
import net.minecraft.block.sapling.DarkOakSaplingGenerator;
import net.minecraft.block.sapling.JungleSaplingGenerator;
import net.minecraft.block.sapling.OakSaplingGenerator;
import net.minecraft.block.sapling.SpruceSaplingGenerator;
import net.minecraft.entity.EntityType;
import net.minecraft.entity.effect.StatusEffects;
import net.minecraft.fluid.Fluids;
import net.minecraft.particle.ParticleTypes;
import net.minecraft.sound.BlockSoundGroup;
import net.minecraft.state.property.Properties;
import net.minecraft.util.DyeColor;
import net.minecraft.util.SignType;
import net.minecraft.util.math.BlockPos;
import net.minecraft.util.math.Direction;
import net.minecraft.util.registry.Registry;
import net.minecraft.world.BlockView;
import net.minecraft.world.gen.feature.Feature;
import net.minecraft.world.gen.feature.HugeFungusFeatureConfig;

public class Blocks {
    public static final Block AIR = Blocks.register("air", new AirBlock(AbstractBlock.Settings.of(Material.AIR).noCollision().dropsNothing().air()));
    public static final Block STONE = Blocks.register("stone", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.STONE).strength(1.5f, 6.0f)));
    public static final Block GRANITE = Blocks.register("granite", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.DIRT).strength(1.5f, 6.0f)));
    public static final Block POLISHED_GRANITE = Blocks.register("polished_granite", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.DIRT).strength(1.5f, 6.0f)));
    public static final Block DIORITE = Blocks.register("diorite", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.QUARTZ).strength(1.5f, 6.0f)));
    public static final Block POLISHED_DIORITE = Blocks.register("polished_diorite", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.QUARTZ).strength(1.5f, 6.0f)));
    public static final Block ANDESITE = Blocks.register("andesite", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.STONE).strength(1.5f, 6.0f)));
    public static final Block POLISHED_ANDESITE = Blocks.register("polished_andesite", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.STONE).strength(1.5f, 6.0f)));
    public static final Block GRASS_BLOCK = Blocks.register("grass_block", new GrassBlock(AbstractBlock.Settings.of(Material.ORGANIC).ticksRandomly().strength(0.6f).sounds(BlockSoundGroup.GRASS)));
    public static final Block DIRT = Blocks.register("dirt", new Block(AbstractBlock.Settings.of(Material.EARTH, MaterialColor.DIRT).strength(0.5f).sounds(BlockSoundGroup.GRAVEL)));
    public static final Block COARSE_DIRT = Blocks.register("coarse_dirt", new Block(AbstractBlock.Settings.of(Material.EARTH, MaterialColor.DIRT).strength(0.5f).sounds(BlockSoundGroup.GRAVEL)));
    public static final Block PODZOL = Blocks.register("podzol", new SnowyBlock(AbstractBlock.Settings.of(Material.EARTH, MaterialColor.SPRUCE).strength(0.5f).sounds(BlockSoundGroup.GRAVEL)));
    public static final Block COBBLESTONE = Blocks.register("cobblestone", new Block(AbstractBlock.Settings.of(Material.STONE).strength(2.0f, 6.0f)));
    public static final Block OAK_PLANKS = Blocks.register("oak_planks", new Block(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.WOOD).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block SPRUCE_PLANKS = Blocks.register("spruce_planks", new Block(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.SPRUCE).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block BIRCH_PLANKS = Blocks.register("birch_planks", new Block(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.SAND).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block JUNGLE_PLANKS = Blocks.register("jungle_planks", new Block(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.DIRT).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block ACACIA_PLANKS = Blocks.register("acacia_planks", new Block(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.ORANGE).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block DARK_OAK_PLANKS = Blocks.register("dark_oak_planks", new Block(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.BROWN).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block OAK_SAPLING = Blocks.register("oak_sapling", new SaplingBlock(new OakSaplingGenerator(), AbstractBlock.Settings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly().sounds(BlockSoundGroup.GRASS)));
    public static final Block SPRUCE_SAPLING = Blocks.register("spruce_sapling", new SaplingBlock(new SpruceSaplingGenerator(), AbstractBlock.Settings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly().sounds(BlockSoundGroup.GRASS)));
    public static final Block BIRCH_SAPLING = Blocks.register("birch_sapling", new SaplingBlock(new BirchSaplingGenerator(), AbstractBlock.Settings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly().sounds(BlockSoundGroup.GRASS)));
    public static final Block JUNGLE_SAPLING = Blocks.register("jungle_sapling", new SaplingBlock(new JungleSaplingGenerator(), AbstractBlock.Settings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly().sounds(BlockSoundGroup.GRASS)));
    public static final Block ACACIA_SAPLING = Blocks.register("acacia_sapling", new SaplingBlock(new AcaciaSaplingGenerator(), AbstractBlock.Settings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly().sounds(BlockSoundGroup.GRASS)));
    public static final Block DARK_OAK_SAPLING = Blocks.register("dark_oak_sapling", new SaplingBlock(new DarkOakSaplingGenerator(), AbstractBlock.Settings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly().sounds(BlockSoundGroup.GRASS)));
    public static final Block BEDROCK = Blocks.register("bedrock", new Block(AbstractBlock.Settings.of(Material.STONE).strength(-1.0f, 3600000.0f).dropsNothing().allowsSpawning(Blocks::never)));
    public static final Block WATER = Blocks.register("water", new FluidBlock(Fluids.WATER, AbstractBlock.Settings.of(Material.WATER).noCollision().strength(100.0f).dropsNothing()));
    public static final Block LAVA = Blocks.register("lava", new FluidBlock(Fluids.LAVA, AbstractBlock.Settings.of(Material.LAVA).noCollision().ticksRandomly().strength(100.0f).lightLevel(arg -> 15).dropsNothing()));
    public static final Block SAND = Blocks.register("sand", new SandBlock(14406560, AbstractBlock.Settings.of(Material.SAND, MaterialColor.SAND).strength(0.5f).sounds(BlockSoundGroup.SAND)));
    public static final Block RED_SAND = Blocks.register("red_sand", new SandBlock(11098145, AbstractBlock.Settings.of(Material.SAND, MaterialColor.ORANGE).strength(0.5f).sounds(BlockSoundGroup.SAND)));
    public static final Block GRAVEL = Blocks.register("gravel", new GravelBlock(AbstractBlock.Settings.of(Material.SAND, MaterialColor.STONE).strength(0.6f).sounds(BlockSoundGroup.GRAVEL)));
    public static final Block GOLD_ORE = Blocks.register("gold_ore", new OreBlock(AbstractBlock.Settings.of(Material.STONE).strength(3.0f, 3.0f)));
    public static final Block IRON_ORE = Blocks.register("iron_ore", new OreBlock(AbstractBlock.Settings.of(Material.STONE).strength(3.0f, 3.0f)));
    public static final Block COAL_ORE = Blocks.register("coal_ore", new OreBlock(AbstractBlock.Settings.of(Material.STONE).strength(3.0f, 3.0f)));
    public static final Block NETHER_GOLD_ORE = Blocks.register("nether_gold_ore", new OreBlock(AbstractBlock.Settings.of(Material.STONE).strength(3.0f, 3.0f).sounds(BlockSoundGroup.field_24120)));
    public static final Block OAK_LOG = Blocks.register("oak_log", Blocks.createLogBlock(MaterialColor.WOOD, MaterialColor.SPRUCE));
    public static final Block SPRUCE_LOG = Blocks.register("spruce_log", Blocks.createLogBlock(MaterialColor.SPRUCE, MaterialColor.BROWN));
    public static final Block BIRCH_LOG = Blocks.register("birch_log", Blocks.createLogBlock(MaterialColor.SAND, MaterialColor.QUARTZ));
    public static final Block JUNGLE_LOG = Blocks.register("jungle_log", Blocks.createLogBlock(MaterialColor.DIRT, MaterialColor.SPRUCE));
    public static final Block ACACIA_LOG = Blocks.register("acacia_log", Blocks.createLogBlock(MaterialColor.ORANGE, MaterialColor.STONE));
    public static final Block DARK_OAK_LOG = Blocks.register("dark_oak_log", Blocks.createLogBlock(MaterialColor.BROWN, MaterialColor.BROWN));
    public static final Block STRIPPED_SPRUCE_LOG = Blocks.register("stripped_spruce_log", Blocks.createLogBlock(MaterialColor.SPRUCE, MaterialColor.SPRUCE));
    public static final Block STRIPPED_BIRCH_LOG = Blocks.register("stripped_birch_log", Blocks.createLogBlock(MaterialColor.SAND, MaterialColor.SAND));
    public static final Block STRIPPED_JUNGLE_LOG = Blocks.register("stripped_jungle_log", Blocks.createLogBlock(MaterialColor.DIRT, MaterialColor.DIRT));
    public static final Block STRIPPED_ACACIA_LOG = Blocks.register("stripped_acacia_log", Blocks.createLogBlock(MaterialColor.ORANGE, MaterialColor.ORANGE));
    public static final Block STRIPPED_DARK_OAK_LOG = Blocks.register("stripped_dark_oak_log", Blocks.createLogBlock(MaterialColor.BROWN, MaterialColor.BROWN));
    public static final Block STRIPPED_OAK_LOG = Blocks.register("stripped_oak_log", Blocks.createLogBlock(MaterialColor.WOOD, MaterialColor.WOOD));
    public static final Block OAK_WOOD = Blocks.register("oak_wood", new PillarBlock(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.WOOD).strength(2.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block SPRUCE_WOOD = Blocks.register("spruce_wood", new PillarBlock(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.SPRUCE).strength(2.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block BIRCH_WOOD = Blocks.register("birch_wood", new PillarBlock(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.SAND).strength(2.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block JUNGLE_WOOD = Blocks.register("jungle_wood", new PillarBlock(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.DIRT).strength(2.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block ACACIA_WOOD = Blocks.register("acacia_wood", new PillarBlock(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.GRAY).strength(2.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block DARK_OAK_WOOD = Blocks.register("dark_oak_wood", new PillarBlock(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.BROWN).strength(2.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block STRIPPED_OAK_WOOD = Blocks.register("stripped_oak_wood", new PillarBlock(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.WOOD).strength(2.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block STRIPPED_SPRUCE_WOOD = Blocks.register("stripped_spruce_wood", new PillarBlock(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.SPRUCE).strength(2.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block STRIPPED_BIRCH_WOOD = Blocks.register("stripped_birch_wood", new PillarBlock(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.SAND).strength(2.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block STRIPPED_JUNGLE_WOOD = Blocks.register("stripped_jungle_wood", new PillarBlock(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.DIRT).strength(2.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block STRIPPED_ACACIA_WOOD = Blocks.register("stripped_acacia_wood", new PillarBlock(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.ORANGE).strength(2.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block STRIPPED_DARK_OAK_WOOD = Blocks.register("stripped_dark_oak_wood", new PillarBlock(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.BROWN).strength(2.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block OAK_LEAVES = Blocks.register("oak_leaves", Blocks.createLeavesBlock());
    public static final Block SPRUCE_LEAVES = Blocks.register("spruce_leaves", Blocks.createLeavesBlock());
    public static final Block BIRCH_LEAVES = Blocks.register("birch_leaves", Blocks.createLeavesBlock());
    public static final Block JUNGLE_LEAVES = Blocks.register("jungle_leaves", Blocks.createLeavesBlock());
    public static final Block ACACIA_LEAVES = Blocks.register("acacia_leaves", Blocks.createLeavesBlock());
    public static final Block DARK_OAK_LEAVES = Blocks.register("dark_oak_leaves", Blocks.createLeavesBlock());
    public static final Block SPONGE = Blocks.register("sponge", new SpongeBlock(AbstractBlock.Settings.of(Material.SPONGE).strength(0.6f).sounds(BlockSoundGroup.GRASS)));
    public static final Block WET_SPONGE = Blocks.register("wet_sponge", new WetSpongeBlock(AbstractBlock.Settings.of(Material.SPONGE).strength(0.6f).sounds(BlockSoundGroup.GRASS)));
    public static final Block GLASS = Blocks.register("glass", new GlassBlock(AbstractBlock.Settings.of(Material.GLASS).strength(0.3f).sounds(BlockSoundGroup.GLASS).nonOpaque().allowsSpawning(Blocks::never).solidBlock(Blocks::never).suffocates(Blocks::never).blockVision(Blocks::never)));
    public static final Block LAPIS_ORE = Blocks.register("lapis_ore", new OreBlock(AbstractBlock.Settings.of(Material.STONE).strength(3.0f, 3.0f)));
    public static final Block LAPIS_BLOCK = Blocks.register("lapis_block", new Block(AbstractBlock.Settings.of(Material.METAL, MaterialColor.LAPIS).strength(3.0f, 3.0f)));
    public static final Block DISPENSER = Blocks.register("dispenser", new DispenserBlock(AbstractBlock.Settings.of(Material.STONE).strength(3.5f)));
    public static final Block SANDSTONE = Blocks.register("sandstone", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.SAND).strength(0.8f)));
    public static final Block CHISELED_SANDSTONE = Blocks.register("chiseled_sandstone", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.SAND).strength(0.8f)));
    public static final Block CUT_SANDSTONE = Blocks.register("cut_sandstone", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.SAND).strength(0.8f)));
    public static final Block NOTE_BLOCK = Blocks.register("note_block", new NoteBlock(AbstractBlock.Settings.of(Material.WOOD).sounds(BlockSoundGroup.WOOD).strength(0.8f)));
    public static final Block WHITE_BED = Blocks.register("white_bed", Blocks.createBedBlock(DyeColor.WHITE));
    public static final Block ORANGE_BED = Blocks.register("orange_bed", Blocks.createBedBlock(DyeColor.ORANGE));
    public static final Block MAGENTA_BED = Blocks.register("magenta_bed", Blocks.createBedBlock(DyeColor.MAGENTA));
    public static final Block LIGHT_BLUE_BED = Blocks.register("light_blue_bed", Blocks.createBedBlock(DyeColor.LIGHT_BLUE));
    public static final Block YELLOW_BED = Blocks.register("yellow_bed", Blocks.createBedBlock(DyeColor.YELLOW));
    public static final Block LIME_BED = Blocks.register("lime_bed", Blocks.createBedBlock(DyeColor.LIME));
    public static final Block PINK_BED = Blocks.register("pink_bed", Blocks.createBedBlock(DyeColor.PINK));
    public static final Block GRAY_BED = Blocks.register("gray_bed", Blocks.createBedBlock(DyeColor.GRAY));
    public static final Block LIGHT_GRAY_BED = Blocks.register("light_gray_bed", Blocks.createBedBlock(DyeColor.LIGHT_GRAY));
    public static final Block CYAN_BED = Blocks.register("cyan_bed", Blocks.createBedBlock(DyeColor.CYAN));
    public static final Block PURPLE_BED = Blocks.register("purple_bed", Blocks.createBedBlock(DyeColor.PURPLE));
    public static final Block BLUE_BED = Blocks.register("blue_bed", Blocks.createBedBlock(DyeColor.BLUE));
    public static final Block BROWN_BED = Blocks.register("brown_bed", Blocks.createBedBlock(DyeColor.BROWN));
    public static final Block GREEN_BED = Blocks.register("green_bed", Blocks.createBedBlock(DyeColor.GREEN));
    public static final Block RED_BED = Blocks.register("red_bed", Blocks.createBedBlock(DyeColor.RED));
    public static final Block BLACK_BED = Blocks.register("black_bed", Blocks.createBedBlock(DyeColor.BLACK));
    public static final Block POWERED_RAIL = Blocks.register("powered_rail", new PoweredRailBlock(AbstractBlock.Settings.of(Material.PART).noCollision().strength(0.7f).sounds(BlockSoundGroup.METAL)));
    public static final Block DETECTOR_RAIL = Blocks.register("detector_rail", new DetectorRailBlock(AbstractBlock.Settings.of(Material.PART).noCollision().strength(0.7f).sounds(BlockSoundGroup.METAL)));
    public static final Block STICKY_PISTON = Blocks.register("sticky_piston", Blocks.createPistonBlock(true));
    public static final Block COBWEB = Blocks.register("cobweb", new CobwebBlock(AbstractBlock.Settings.of(Material.COBWEB).noCollision().strength(4.0f)));
    public static final Block GRASS = Blocks.register("grass", new FernBlock(AbstractBlock.Settings.of(Material.REPLACEABLE_PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
    public static final Block FERN = Blocks.register("fern", new FernBlock(AbstractBlock.Settings.of(Material.REPLACEABLE_PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
    public static final Block DEAD_BUSH = Blocks.register("dead_bush", new DeadBushBlock(AbstractBlock.Settings.of(Material.REPLACEABLE_PLANT, MaterialColor.WOOD).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
    public static final Block SEAGRASS = Blocks.register("seagrass", new SeagrassBlock(AbstractBlock.Settings.of(Material.SEAGRASS).noCollision().breakInstantly().sounds(BlockSoundGroup.WET_GRASS)));
    public static final Block TALL_SEAGRASS = Blocks.register("tall_seagrass", new TallSeagrassBlock(AbstractBlock.Settings.of(Material.SEAGRASS).noCollision().breakInstantly().sounds(BlockSoundGroup.WET_GRASS)));
    public static final Block PISTON = Blocks.register("piston", Blocks.createPistonBlock(false));
    public static final Block PISTON_HEAD = Blocks.register("piston_head", new PistonHeadBlock(AbstractBlock.Settings.of(Material.PISTON).strength(1.5f).dropsNothing()));
    public static final Block WHITE_WOOL = Blocks.register("white_wool", new Block(AbstractBlock.Settings.of(Material.WOOL, MaterialColor.WHITE).strength(0.8f).sounds(BlockSoundGroup.WOOL)));
    public static final Block ORANGE_WOOL = Blocks.register("orange_wool", new Block(AbstractBlock.Settings.of(Material.WOOL, MaterialColor.ORANGE).strength(0.8f).sounds(BlockSoundGroup.WOOL)));
    public static final Block MAGENTA_WOOL = Blocks.register("magenta_wool", new Block(AbstractBlock.Settings.of(Material.WOOL, MaterialColor.MAGENTA).strength(0.8f).sounds(BlockSoundGroup.WOOL)));
    public static final Block LIGHT_BLUE_WOOL = Blocks.register("light_blue_wool", new Block(AbstractBlock.Settings.of(Material.WOOL, MaterialColor.LIGHT_BLUE).strength(0.8f).sounds(BlockSoundGroup.WOOL)));
    public static final Block YELLOW_WOOL = Blocks.register("yellow_wool", new Block(AbstractBlock.Settings.of(Material.WOOL, MaterialColor.YELLOW).strength(0.8f).sounds(BlockSoundGroup.WOOL)));
    public static final Block LIME_WOOL = Blocks.register("lime_wool", new Block(AbstractBlock.Settings.of(Material.WOOL, MaterialColor.LIME).strength(0.8f).sounds(BlockSoundGroup.WOOL)));
    public static final Block PINK_WOOL = Blocks.register("pink_wool", new Block(AbstractBlock.Settings.of(Material.WOOL, MaterialColor.PINK).strength(0.8f).sounds(BlockSoundGroup.WOOL)));
    public static final Block GRAY_WOOL = Blocks.register("gray_wool", new Block(AbstractBlock.Settings.of(Material.WOOL, MaterialColor.GRAY).strength(0.8f).sounds(BlockSoundGroup.WOOL)));
    public static final Block LIGHT_GRAY_WOOL = Blocks.register("light_gray_wool", new Block(AbstractBlock.Settings.of(Material.WOOL, MaterialColor.LIGHT_GRAY).strength(0.8f).sounds(BlockSoundGroup.WOOL)));
    public static final Block CYAN_WOOL = Blocks.register("cyan_wool", new Block(AbstractBlock.Settings.of(Material.WOOL, MaterialColor.CYAN).strength(0.8f).sounds(BlockSoundGroup.WOOL)));
    public static final Block PURPLE_WOOL = Blocks.register("purple_wool", new Block(AbstractBlock.Settings.of(Material.WOOL, MaterialColor.PURPLE).strength(0.8f).sounds(BlockSoundGroup.WOOL)));
    public static final Block BLUE_WOOL = Blocks.register("blue_wool", new Block(AbstractBlock.Settings.of(Material.WOOL, MaterialColor.BLUE).strength(0.8f).sounds(BlockSoundGroup.WOOL)));
    public static final Block BROWN_WOOL = Blocks.register("brown_wool", new Block(AbstractBlock.Settings.of(Material.WOOL, MaterialColor.BROWN).strength(0.8f).sounds(BlockSoundGroup.WOOL)));
    public static final Block GREEN_WOOL = Blocks.register("green_wool", new Block(AbstractBlock.Settings.of(Material.WOOL, MaterialColor.GREEN).strength(0.8f).sounds(BlockSoundGroup.WOOL)));
    public static final Block RED_WOOL = Blocks.register("red_wool", new Block(AbstractBlock.Settings.of(Material.WOOL, MaterialColor.RED).strength(0.8f).sounds(BlockSoundGroup.WOOL)));
    public static final Block BLACK_WOOL = Blocks.register("black_wool", new Block(AbstractBlock.Settings.of(Material.WOOL, MaterialColor.BLACK).strength(0.8f).sounds(BlockSoundGroup.WOOL)));
    public static final Block MOVING_PISTON = Blocks.register("moving_piston", new PistonExtensionBlock(AbstractBlock.Settings.of(Material.PISTON).strength(-1.0f).dynamicBounds().dropsNothing().nonOpaque().solidBlock(Blocks::never).suffocates(Blocks::never).blockVision(Blocks::never)));
    public static final Block DANDELION = Blocks.register("dandelion", new FlowerBlock(StatusEffects.SATURATION, 7, AbstractBlock.Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
    public static final Block POPPY = Blocks.register("poppy", new FlowerBlock(StatusEffects.NIGHT_VISION, 5, AbstractBlock.Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
    public static final Block BLUE_ORCHID = Blocks.register("blue_orchid", new FlowerBlock(StatusEffects.SATURATION, 7, AbstractBlock.Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
    public static final Block ALLIUM = Blocks.register("allium", new FlowerBlock(StatusEffects.FIRE_RESISTANCE, 4, AbstractBlock.Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
    public static final Block AZURE_BLUET = Blocks.register("azure_bluet", new FlowerBlock(StatusEffects.BLINDNESS, 8, AbstractBlock.Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
    public static final Block RED_TULIP = Blocks.register("red_tulip", new FlowerBlock(StatusEffects.WEAKNESS, 9, AbstractBlock.Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
    public static final Block ORANGE_TULIP = Blocks.register("orange_tulip", new FlowerBlock(StatusEffects.WEAKNESS, 9, AbstractBlock.Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
    public static final Block WHITE_TULIP = Blocks.register("white_tulip", new FlowerBlock(StatusEffects.WEAKNESS, 9, AbstractBlock.Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
    public static final Block PINK_TULIP = Blocks.register("pink_tulip", new FlowerBlock(StatusEffects.WEAKNESS, 9, AbstractBlock.Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
    public static final Block OXEYE_DAISY = Blocks.register("oxeye_daisy", new FlowerBlock(StatusEffects.REGENERATION, 8, AbstractBlock.Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
    public static final Block CORNFLOWER = Blocks.register("cornflower", new FlowerBlock(StatusEffects.JUMP_BOOST, 6, AbstractBlock.Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
    public static final Block WITHER_ROSE = Blocks.register("wither_rose", new WitherRoseBlock(StatusEffects.WITHER, AbstractBlock.Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
    public static final Block LILY_OF_THE_VALLEY = Blocks.register("lily_of_the_valley", new FlowerBlock(StatusEffects.POISON, 12, AbstractBlock.Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
    public static final Block BROWN_MUSHROOM = Blocks.register("brown_mushroom", new MushroomPlantBlock(AbstractBlock.Settings.of(Material.PLANT, MaterialColor.BROWN).noCollision().ticksRandomly().breakInstantly().sounds(BlockSoundGroup.GRASS).lightLevel(arg -> 1).postProcess(Blocks::always)));
    public static final Block RED_MUSHROOM = Blocks.register("red_mushroom", new MushroomPlantBlock(AbstractBlock.Settings.of(Material.PLANT, MaterialColor.RED).noCollision().ticksRandomly().breakInstantly().sounds(BlockSoundGroup.GRASS).postProcess(Blocks::always)));
    public static final Block GOLD_BLOCK = Blocks.register("gold_block", new Block(AbstractBlock.Settings.of(Material.METAL, MaterialColor.GOLD).strength(3.0f, 6.0f).sounds(BlockSoundGroup.METAL)));
    public static final Block IRON_BLOCK = Blocks.register("iron_block", new Block(AbstractBlock.Settings.of(Material.METAL, MaterialColor.IRON).strength(5.0f, 6.0f).sounds(BlockSoundGroup.METAL)));
    public static final Block BRICKS = Blocks.register("bricks", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.RED).strength(2.0f, 6.0f)));
    public static final Block TNT = Blocks.register("tnt", new TntBlock(AbstractBlock.Settings.of(Material.TNT).breakInstantly().sounds(BlockSoundGroup.GRASS)));
    public static final Block BOOKSHELF = Blocks.register("bookshelf", new Block(AbstractBlock.Settings.of(Material.WOOD).strength(1.5f).sounds(BlockSoundGroup.WOOD)));
    public static final Block MOSSY_COBBLESTONE = Blocks.register("mossy_cobblestone", new Block(AbstractBlock.Settings.of(Material.STONE).strength(2.0f, 6.0f)));
    public static final Block OBSIDIAN = Blocks.register("obsidian", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.BLACK).strength(50.0f, 1200.0f)));
    public static final Block TORCH = Blocks.register("torch", new TorchBlock(AbstractBlock.Settings.of(Material.PART).noCollision().breakInstantly().lightLevel(arg -> 14).sounds(BlockSoundGroup.WOOD), ParticleTypes.FLAME));
    public static final Block WALL_TORCH = Blocks.register("wall_torch", new WallTorchBlock(AbstractBlock.Settings.of(Material.PART).noCollision().breakInstantly().lightLevel(arg -> 14).sounds(BlockSoundGroup.WOOD).dropsLike(TORCH), ParticleTypes.FLAME));
    public static final Block FIRE = Blocks.register("fire", new FireBlock(AbstractBlock.Settings.of(Material.FIRE, MaterialColor.LAVA).noCollision().breakInstantly().lightLevel(arg -> 15).sounds(BlockSoundGroup.WOOL)));
    public static final Block SOUL_FIRE = Blocks.register("soul_fire", new SoulFireBlock(AbstractBlock.Settings.of(Material.FIRE, MaterialColor.LIGHT_BLUE).noCollision().breakInstantly().lightLevel(arg -> 10).sounds(BlockSoundGroup.WOOL)));
    public static final Block SPAWNER = Blocks.register("spawner", new SpawnerBlock(AbstractBlock.Settings.of(Material.STONE).strength(5.0f).sounds(BlockSoundGroup.METAL).nonOpaque()));
    public static final Block OAK_STAIRS = Blocks.register("oak_stairs", new StairsBlock(OAK_PLANKS.getDefaultState(), AbstractBlock.Settings.copy(OAK_PLANKS)));
    public static final Block CHEST = Blocks.register("chest", new ChestBlock(AbstractBlock.Settings.of(Material.WOOD).strength(2.5f).sounds(BlockSoundGroup.WOOD), () -> BlockEntityType.CHEST));
    public static final Block REDSTONE_WIRE = Blocks.register("redstone_wire", new RedstoneWireBlock(AbstractBlock.Settings.of(Material.PART).noCollision().breakInstantly()));
    public static final Block DIAMOND_ORE = Blocks.register("diamond_ore", new OreBlock(AbstractBlock.Settings.of(Material.STONE).strength(3.0f, 3.0f)));
    public static final Block DIAMOND_BLOCK = Blocks.register("diamond_block", new Block(AbstractBlock.Settings.of(Material.METAL, MaterialColor.DIAMOND).strength(5.0f, 6.0f).sounds(BlockSoundGroup.METAL)));
    public static final Block CRAFTING_TABLE = Blocks.register("crafting_table", new CraftingTableBlock(AbstractBlock.Settings.of(Material.WOOD).strength(2.5f).sounds(BlockSoundGroup.WOOD)));
    public static final Block WHEAT = Blocks.register("wheat", new CropBlock(AbstractBlock.Settings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly().sounds(BlockSoundGroup.CROP)));
    public static final Block FARMLAND = Blocks.register("farmland", new FarmlandBlock(AbstractBlock.Settings.of(Material.EARTH).ticksRandomly().strength(0.6f).sounds(BlockSoundGroup.GRAVEL).blockVision(Blocks::always)));
    public static final Block FURNACE = Blocks.register("furnace", new FurnaceBlock(AbstractBlock.Settings.of(Material.STONE).strength(3.5f).lightLevel(Blocks.createLightLevelFromBlockState(13))));
    public static final Block OAK_SIGN = Blocks.register("oak_sign", new SignBlock(AbstractBlock.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD), SignType.OAK));
    public static final Block SPRUCE_SIGN = Blocks.register("spruce_sign", new SignBlock(AbstractBlock.Settings.of(Material.WOOD, SPRUCE_LOG.getDefaultMaterialColor()).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD), SignType.SPRUCE));
    public static final Block BIRCH_SIGN = Blocks.register("birch_sign", new SignBlock(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.SAND).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD), SignType.BIRCH));
    public static final Block ACACIA_SIGN = Blocks.register("acacia_sign", new SignBlock(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.ORANGE).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD), SignType.ACACIA));
    public static final Block JUNGLE_SIGN = Blocks.register("jungle_sign", new SignBlock(AbstractBlock.Settings.of(Material.WOOD, JUNGLE_LOG.getDefaultMaterialColor()).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD), SignType.JUNGLE));
    public static final Block DARK_OAK_SIGN = Blocks.register("dark_oak_sign", new SignBlock(AbstractBlock.Settings.of(Material.WOOD, DARK_OAK_LOG.getDefaultMaterialColor()).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD), SignType.DARK_OAK));
    public static final Block OAK_DOOR = Blocks.register("oak_door", new DoorBlock(AbstractBlock.Settings.of(Material.WOOD, OAK_PLANKS.getDefaultMaterialColor()).strength(3.0f).sounds(BlockSoundGroup.WOOD).nonOpaque()));
    public static final Block LADDER = Blocks.register("ladder", new LadderBlock(AbstractBlock.Settings.of(Material.PART).strength(0.4f).sounds(BlockSoundGroup.LADDER).nonOpaque()));
    public static final Block RAIL = Blocks.register("rail", new RailBlock(AbstractBlock.Settings.of(Material.PART).noCollision().strength(0.7f).sounds(BlockSoundGroup.METAL)));
    public static final Block COBBLESTONE_STAIRS = Blocks.register("cobblestone_stairs", new StairsBlock(COBBLESTONE.getDefaultState(), AbstractBlock.Settings.copy(COBBLESTONE)));
    public static final Block OAK_WALL_SIGN = Blocks.register("oak_wall_sign", new WallSignBlock(AbstractBlock.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(OAK_SIGN), SignType.OAK));
    public static final Block SPRUCE_WALL_SIGN = Blocks.register("spruce_wall_sign", new WallSignBlock(AbstractBlock.Settings.of(Material.WOOD, SPRUCE_LOG.getDefaultMaterialColor()).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(SPRUCE_SIGN), SignType.SPRUCE));
    public static final Block BIRCH_WALL_SIGN = Blocks.register("birch_wall_sign", new WallSignBlock(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.SAND).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(BIRCH_SIGN), SignType.BIRCH));
    public static final Block ACACIA_WALL_SIGN = Blocks.register("acacia_wall_sign", new WallSignBlock(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.ORANGE).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(ACACIA_SIGN), SignType.ACACIA));
    public static final Block JUNGLE_WALL_SIGN = Blocks.register("jungle_wall_sign", new WallSignBlock(AbstractBlock.Settings.of(Material.WOOD, JUNGLE_LOG.getDefaultMaterialColor()).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(JUNGLE_SIGN), SignType.JUNGLE));
    public static final Block DARK_OAK_WALL_SIGN = Blocks.register("dark_oak_wall_sign", new WallSignBlock(AbstractBlock.Settings.of(Material.WOOD, DARK_OAK_LOG.getDefaultMaterialColor()).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(DARK_OAK_SIGN), SignType.DARK_OAK));
    public static final Block LEVER = Blocks.register("lever", new LeverBlock(AbstractBlock.Settings.of(Material.PART).noCollision().strength(0.5f).sounds(BlockSoundGroup.WOOD)));
    public static final Block STONE_PRESSURE_PLATE = Blocks.register("stone_pressure_plate", new PressurePlateBlock(PressurePlateBlock.ActivationRule.MOBS, AbstractBlock.Settings.of(Material.STONE).noCollision().strength(0.5f)));
    public static final Block IRON_DOOR = Blocks.register("iron_door", new DoorBlock(AbstractBlock.Settings.of(Material.METAL, MaterialColor.IRON).strength(5.0f).sounds(BlockSoundGroup.METAL).nonOpaque()));
    public static final Block OAK_PRESSURE_PLATE = Blocks.register("oak_pressure_plate", new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, AbstractBlock.Settings.of(Material.WOOD, OAK_PLANKS.getDefaultMaterialColor()).noCollision().strength(0.5f).sounds(BlockSoundGroup.WOOD)));
    public static final Block SPRUCE_PRESSURE_PLATE = Blocks.register("spruce_pressure_plate", new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, AbstractBlock.Settings.of(Material.WOOD, SPRUCE_PLANKS.getDefaultMaterialColor()).noCollision().strength(0.5f).sounds(BlockSoundGroup.WOOD)));
    public static final Block BIRCH_PRESSURE_PLATE = Blocks.register("birch_pressure_plate", new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, AbstractBlock.Settings.of(Material.WOOD, BIRCH_PLANKS.getDefaultMaterialColor()).noCollision().strength(0.5f).sounds(BlockSoundGroup.WOOD)));
    public static final Block JUNGLE_PRESSURE_PLATE = Blocks.register("jungle_pressure_plate", new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, AbstractBlock.Settings.of(Material.WOOD, JUNGLE_PLANKS.getDefaultMaterialColor()).noCollision().strength(0.5f).sounds(BlockSoundGroup.WOOD)));
    public static final Block ACACIA_PRESSURE_PLATE = Blocks.register("acacia_pressure_plate", new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, AbstractBlock.Settings.of(Material.WOOD, ACACIA_PLANKS.getDefaultMaterialColor()).noCollision().strength(0.5f).sounds(BlockSoundGroup.WOOD)));
    public static final Block DARK_OAK_PRESSURE_PLATE = Blocks.register("dark_oak_pressure_plate", new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, AbstractBlock.Settings.of(Material.WOOD, DARK_OAK_PLANKS.getDefaultMaterialColor()).noCollision().strength(0.5f).sounds(BlockSoundGroup.WOOD)));
    public static final Block REDSTONE_ORE = Blocks.register("redstone_ore", new RedstoneOreBlock(AbstractBlock.Settings.of(Material.STONE).ticksRandomly().lightLevel(Blocks.createLightLevelFromBlockState(9)).strength(3.0f, 3.0f)));
    public static final Block REDSTONE_TORCH = Blocks.register("redstone_torch", new RedstoneTorchBlock(AbstractBlock.Settings.of(Material.PART).noCollision().breakInstantly().lightLevel(Blocks.createLightLevelFromBlockState(7)).sounds(BlockSoundGroup.WOOD)));
    public static final Block REDSTONE_WALL_TORCH = Blocks.register("redstone_wall_torch", new WallRedstoneTorchBlock(AbstractBlock.Settings.of(Material.PART).noCollision().breakInstantly().lightLevel(Blocks.createLightLevelFromBlockState(7)).sounds(BlockSoundGroup.WOOD).dropsLike(REDSTONE_TORCH)));
    public static final Block STONE_BUTTON = Blocks.register("stone_button", new StoneButtonBlock(AbstractBlock.Settings.of(Material.PART).noCollision().strength(0.5f)));
    public static final Block SNOW = Blocks.register("snow", new SnowBlock(AbstractBlock.Settings.of(Material.SNOW).ticksRandomly().strength(0.1f).sounds(BlockSoundGroup.SNOW)));
    public static final Block ICE = Blocks.register("ice", new IceBlock(AbstractBlock.Settings.of(Material.ICE).slipperiness(0.98f).ticksRandomly().strength(0.5f).sounds(BlockSoundGroup.GLASS).nonOpaque().allowsSpawning((arg, arg2, arg3, arg4) -> arg4 == EntityType.POLAR_BEAR)));
    public static final Block SNOW_BLOCK = Blocks.register("snow_block", new Block(AbstractBlock.Settings.of(Material.SNOW_BLOCK).strength(0.2f).sounds(BlockSoundGroup.SNOW)));
    public static final Block CACTUS = Blocks.register("cactus", new CactusBlock(AbstractBlock.Settings.of(Material.CACTUS).ticksRandomly().strength(0.4f).sounds(BlockSoundGroup.WOOL)));
    public static final Block CLAY = Blocks.register("clay", new Block(AbstractBlock.Settings.of(Material.CLAY).strength(0.6f).sounds(BlockSoundGroup.GRAVEL)));
    public static final Block SUGAR_CANE = Blocks.register("sugar_cane", new SugarCaneBlock(AbstractBlock.Settings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly().sounds(BlockSoundGroup.GRASS)));
    public static final Block JUKEBOX = Blocks.register("jukebox", new JukeboxBlock(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.DIRT).strength(2.0f, 6.0f)));
    public static final Block OAK_FENCE = Blocks.register("oak_fence", new FenceBlock(AbstractBlock.Settings.of(Material.WOOD, OAK_PLANKS.getDefaultMaterialColor()).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block PUMPKIN = Blocks.register("pumpkin", new PumpkinBlock(AbstractBlock.Settings.of(Material.PUMPKIN, MaterialColor.ORANGE).strength(1.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block NETHERRACK = Blocks.register("netherrack", new NetherrackBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.NETHER).strength(0.4f).sounds(BlockSoundGroup.NETHERRACK)));
    public static final Block SOUL_SAND = Blocks.register("soul_sand", new SoulSandBlock(AbstractBlock.Settings.of(Material.SAND, MaterialColor.BROWN).strength(0.5f).velocityMultiplier(0.4f).sounds(BlockSoundGroup.SOUL_SAND).allowsSpawning(Blocks::always).solidBlock(Blocks::always).blockVision(Blocks::always)));
    public static final Block SOUL_SOIL = Blocks.register("soul_soil", new Block(AbstractBlock.Settings.of(Material.EARTH, MaterialColor.BROWN).strength(0.5f).sounds(BlockSoundGroup.SOUL_SOIL)));
    public static final Block BASALT = Blocks.register("basalt", new PillarBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.BLACK).strength(1.25f, 4.2f).sounds(BlockSoundGroup.BASALT)));
    public static final Block POLISHED_BASALT = Blocks.register("polished_basalt", new PillarBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.BLACK).strength(1.25f, 4.2f).sounds(BlockSoundGroup.BASALT)));
    public static final Block SOUL_TORCH = Blocks.register("soul_torch", new TorchBlock(AbstractBlock.Settings.of(Material.PART).noCollision().breakInstantly().lightLevel(arg -> 10).sounds(BlockSoundGroup.WOOD), ParticleTypes.SOUL_FIRE_FLAME));
    public static final Block SOUL_WALL_TORCH = Blocks.register("soul_wall_torch", new WallTorchBlock(AbstractBlock.Settings.of(Material.PART).noCollision().breakInstantly().lightLevel(arg -> 10).sounds(BlockSoundGroup.WOOD).dropsLike(SOUL_TORCH), ParticleTypes.SOUL_FIRE_FLAME));
    public static final Block GLOWSTONE = Blocks.register("glowstone", new Block(AbstractBlock.Settings.of(Material.GLASS, MaterialColor.SAND).strength(0.3f).sounds(BlockSoundGroup.GLASS).lightLevel(arg -> 15)));
    public static final Block NETHER_PORTAL = Blocks.register("nether_portal", new NetherPortalBlock(AbstractBlock.Settings.of(Material.PORTAL).noCollision().ticksRandomly().strength(-1.0f).sounds(BlockSoundGroup.GLASS).lightLevel(arg -> 11).dropsNothing()));
    public static final Block CARVED_PUMPKIN = Blocks.register("carved_pumpkin", new CarvedPumpkinBlock(AbstractBlock.Settings.of(Material.PUMPKIN, MaterialColor.ORANGE).strength(1.0f).sounds(BlockSoundGroup.WOOD).allowsSpawning(Blocks::always)));
    public static final Block JACK_O_LANTERN = Blocks.register("jack_o_lantern", new CarvedPumpkinBlock(AbstractBlock.Settings.of(Material.PUMPKIN, MaterialColor.ORANGE).strength(1.0f).sounds(BlockSoundGroup.WOOD).lightLevel(arg -> 15).allowsSpawning(Blocks::always)));
    public static final Block CAKE = Blocks.register("cake", new CakeBlock(AbstractBlock.Settings.of(Material.CAKE).strength(0.5f).sounds(BlockSoundGroup.WOOL)));
    public static final Block REPEATER = Blocks.register("repeater", new RepeaterBlock(AbstractBlock.Settings.of(Material.PART).breakInstantly().sounds(BlockSoundGroup.WOOD)));
    public static final Block WHITE_STAINED_GLASS = Blocks.register("white_stained_glass", Blocks.createStainedGlassBlock(DyeColor.WHITE));
    public static final Block ORANGE_STAINED_GLASS = Blocks.register("orange_stained_glass", Blocks.createStainedGlassBlock(DyeColor.ORANGE));
    public static final Block MAGENTA_STAINED_GLASS = Blocks.register("magenta_stained_glass", Blocks.createStainedGlassBlock(DyeColor.MAGENTA));
    public static final Block LIGHT_BLUE_STAINED_GLASS = Blocks.register("light_blue_stained_glass", Blocks.createStainedGlassBlock(DyeColor.LIGHT_BLUE));
    public static final Block YELLOW_STAINED_GLASS = Blocks.register("yellow_stained_glass", Blocks.createStainedGlassBlock(DyeColor.YELLOW));
    public static final Block LIME_STAINED_GLASS = Blocks.register("lime_stained_glass", Blocks.createStainedGlassBlock(DyeColor.LIME));
    public static final Block PINK_STAINED_GLASS = Blocks.register("pink_stained_glass", Blocks.createStainedGlassBlock(DyeColor.PINK));
    public static final Block GRAY_STAINED_GLASS = Blocks.register("gray_stained_glass", Blocks.createStainedGlassBlock(DyeColor.GRAY));
    public static final Block LIGHT_GRAY_STAINED_GLASS = Blocks.register("light_gray_stained_glass", Blocks.createStainedGlassBlock(DyeColor.LIGHT_GRAY));
    public static final Block CYAN_STAINED_GLASS = Blocks.register("cyan_stained_glass", Blocks.createStainedGlassBlock(DyeColor.CYAN));
    public static final Block PURPLE_STAINED_GLASS = Blocks.register("purple_stained_glass", Blocks.createStainedGlassBlock(DyeColor.PURPLE));
    public static final Block BLUE_STAINED_GLASS = Blocks.register("blue_stained_glass", Blocks.createStainedGlassBlock(DyeColor.BLUE));
    public static final Block BROWN_STAINED_GLASS = Blocks.register("brown_stained_glass", Blocks.createStainedGlassBlock(DyeColor.BROWN));
    public static final Block GREEN_STAINED_GLASS = Blocks.register("green_stained_glass", Blocks.createStainedGlassBlock(DyeColor.GREEN));
    public static final Block RED_STAINED_GLASS = Blocks.register("red_stained_glass", Blocks.createStainedGlassBlock(DyeColor.RED));
    public static final Block BLACK_STAINED_GLASS = Blocks.register("black_stained_glass", Blocks.createStainedGlassBlock(DyeColor.BLACK));
    public static final Block OAK_TRAPDOOR = Blocks.register("oak_trapdoor", new TrapdoorBlock(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.WOOD).strength(3.0f).sounds(BlockSoundGroup.WOOD).nonOpaque().allowsSpawning(Blocks::never)));
    public static final Block SPRUCE_TRAPDOOR = Blocks.register("spruce_trapdoor", new TrapdoorBlock(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.SPRUCE).strength(3.0f).sounds(BlockSoundGroup.WOOD).nonOpaque().allowsSpawning(Blocks::never)));
    public static final Block BIRCH_TRAPDOOR = Blocks.register("birch_trapdoor", new TrapdoorBlock(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.SAND).strength(3.0f).sounds(BlockSoundGroup.WOOD).nonOpaque().allowsSpawning(Blocks::never)));
    public static final Block JUNGLE_TRAPDOOR = Blocks.register("jungle_trapdoor", new TrapdoorBlock(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.DIRT).strength(3.0f).sounds(BlockSoundGroup.WOOD).nonOpaque().allowsSpawning(Blocks::never)));
    public static final Block ACACIA_TRAPDOOR = Blocks.register("acacia_trapdoor", new TrapdoorBlock(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.ORANGE).strength(3.0f).sounds(BlockSoundGroup.WOOD).nonOpaque().allowsSpawning(Blocks::never)));
    public static final Block DARK_OAK_TRAPDOOR = Blocks.register("dark_oak_trapdoor", new TrapdoorBlock(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.BROWN).strength(3.0f).sounds(BlockSoundGroup.WOOD).nonOpaque().allowsSpawning(Blocks::never)));
    public static final Block STONE_BRICKS = Blocks.register("stone_bricks", new Block(AbstractBlock.Settings.of(Material.STONE).strength(1.5f, 6.0f)));
    public static final Block MOSSY_STONE_BRICKS = Blocks.register("mossy_stone_bricks", new Block(AbstractBlock.Settings.of(Material.STONE).strength(1.5f, 6.0f)));
    public static final Block CRACKED_STONE_BRICKS = Blocks.register("cracked_stone_bricks", new Block(AbstractBlock.Settings.of(Material.STONE).strength(1.5f, 6.0f)));
    public static final Block CHISELED_STONE_BRICKS = Blocks.register("chiseled_stone_bricks", new Block(AbstractBlock.Settings.of(Material.STONE).strength(1.5f, 6.0f)));
    public static final Block INFESTED_STONE = Blocks.register("infested_stone", new InfestedBlock(STONE, AbstractBlock.Settings.of(Material.CLAY).strength(0.0f, 0.75f)));
    public static final Block INFESTED_COBBLESTONE = Blocks.register("infested_cobblestone", new InfestedBlock(COBBLESTONE, AbstractBlock.Settings.of(Material.CLAY).strength(0.0f, 0.75f)));
    public static final Block INFESTED_STONE_BRICKS = Blocks.register("infested_stone_bricks", new InfestedBlock(STONE_BRICKS, AbstractBlock.Settings.of(Material.CLAY).strength(0.0f, 0.75f)));
    public static final Block INFESTED_MOSSY_STONE_BRICKS = Blocks.register("infested_mossy_stone_bricks", new InfestedBlock(MOSSY_STONE_BRICKS, AbstractBlock.Settings.of(Material.CLAY).strength(0.0f, 0.75f)));
    public static final Block INFESTED_CRACKED_STONE_BRICKS = Blocks.register("infested_cracked_stone_bricks", new InfestedBlock(CRACKED_STONE_BRICKS, AbstractBlock.Settings.of(Material.CLAY).strength(0.0f, 0.75f)));
    public static final Block INFESTED_CHISELED_STONE_BRICKS = Blocks.register("infested_chiseled_stone_bricks", new InfestedBlock(CHISELED_STONE_BRICKS, AbstractBlock.Settings.of(Material.CLAY).strength(0.0f, 0.75f)));
    public static final Block BROWN_MUSHROOM_BLOCK = Blocks.register("brown_mushroom_block", new MushroomBlock(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.DIRT).strength(0.2f).sounds(BlockSoundGroup.WOOD)));
    public static final Block RED_MUSHROOM_BLOCK = Blocks.register("red_mushroom_block", new MushroomBlock(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.RED).strength(0.2f).sounds(BlockSoundGroup.WOOD)));
    public static final Block MUSHROOM_STEM = Blocks.register("mushroom_stem", new MushroomBlock(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.WEB).strength(0.2f).sounds(BlockSoundGroup.WOOD)));
    public static final Block IRON_BARS = Blocks.register("iron_bars", new PaneBlock(AbstractBlock.Settings.of(Material.METAL, MaterialColor.AIR).strength(5.0f, 6.0f).sounds(BlockSoundGroup.METAL).nonOpaque()));
    public static final Block CHAIN = Blocks.register("chain", new ChainBlock(AbstractBlock.Settings.of(Material.METAL, MaterialColor.AIR).strength(5.0f, 6.0f).sounds(BlockSoundGroup.field_24119).nonOpaque()));
    public static final Block GLASS_PANE = Blocks.register("glass_pane", new PaneBlock(AbstractBlock.Settings.of(Material.GLASS).strength(0.3f).sounds(BlockSoundGroup.GLASS).nonOpaque()));
    public static final Block MELON = Blocks.register("melon", new MelonBlock(AbstractBlock.Settings.of(Material.PUMPKIN, MaterialColor.LIME).strength(1.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block ATTACHED_PUMPKIN_STEM = Blocks.register("attached_pumpkin_stem", new AttachedStemBlock((GourdBlock)PUMPKIN, AbstractBlock.Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.WOOD)));
    public static final Block ATTACHED_MELON_STEM = Blocks.register("attached_melon_stem", new AttachedStemBlock((GourdBlock)MELON, AbstractBlock.Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.WOOD)));
    public static final Block PUMPKIN_STEM = Blocks.register("pumpkin_stem", new StemBlock((GourdBlock)PUMPKIN, AbstractBlock.Settings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly().sounds(BlockSoundGroup.STEM)));
    public static final Block MELON_STEM = Blocks.register("melon_stem", new StemBlock((GourdBlock)MELON, AbstractBlock.Settings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly().sounds(BlockSoundGroup.STEM)));
    public static final Block VINE = Blocks.register("vine", new VineBlock(AbstractBlock.Settings.of(Material.REPLACEABLE_PLANT).noCollision().ticksRandomly().strength(0.2f).sounds(BlockSoundGroup.VINE)));
    public static final Block OAK_FENCE_GATE = Blocks.register("oak_fence_gate", new FenceGateBlock(AbstractBlock.Settings.of(Material.WOOD, OAK_PLANKS.getDefaultMaterialColor()).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block BRICK_STAIRS = Blocks.register("brick_stairs", new StairsBlock(BRICKS.getDefaultState(), AbstractBlock.Settings.copy(BRICKS)));
    public static final Block STONE_BRICK_STAIRS = Blocks.register("stone_brick_stairs", new StairsBlock(STONE_BRICKS.getDefaultState(), AbstractBlock.Settings.copy(STONE_BRICKS)));
    public static final Block MYCELIUM = Blocks.register("mycelium", new MyceliumBlock(AbstractBlock.Settings.of(Material.ORGANIC, MaterialColor.PURPLE).ticksRandomly().strength(0.6f).sounds(BlockSoundGroup.GRASS)));
    public static final Block LILY_PAD = Blocks.register("lily_pad", new LilyPadBlock(AbstractBlock.Settings.of(Material.PLANT).breakInstantly().sounds(BlockSoundGroup.GRASS).nonOpaque()));
    public static final Block NETHER_BRICKS = Blocks.register("nether_bricks", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.NETHER).strength(2.0f, 6.0f).sounds(BlockSoundGroup.NETHER_BRICK)));
    public static final Block NETHER_BRICK_FENCE = Blocks.register("nether_brick_fence", new FenceBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.NETHER).strength(2.0f, 6.0f).sounds(BlockSoundGroup.NETHER_BRICK)));
    public static final Block NETHER_BRICK_STAIRS = Blocks.register("nether_brick_stairs", new StairsBlock(NETHER_BRICKS.getDefaultState(), AbstractBlock.Settings.copy(NETHER_BRICKS)));
    public static final Block NETHER_WART = Blocks.register("nether_wart", new NetherWartBlock(AbstractBlock.Settings.of(Material.PLANT, MaterialColor.RED).noCollision().ticksRandomly().sounds(BlockSoundGroup.NETHER_WART)));
    public static final Block ENCHANTING_TABLE = Blocks.register("enchanting_table", new EnchantingTableBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.RED).strength(5.0f, 1200.0f)));
    public static final Block BREWING_STAND = Blocks.register("brewing_stand", new BrewingStandBlock(AbstractBlock.Settings.of(Material.METAL).strength(0.5f).lightLevel(arg -> 1).nonOpaque()));
    public static final Block CAULDRON = Blocks.register("cauldron", new CauldronBlock(AbstractBlock.Settings.of(Material.METAL, MaterialColor.STONE).strength(2.0f).nonOpaque()));
    public static final Block END_PORTAL = Blocks.register("end_portal", new EndPortalBlock(AbstractBlock.Settings.of(Material.PORTAL, MaterialColor.BLACK).noCollision().lightLevel(arg -> 15).strength(-1.0f, 3600000.0f).dropsNothing()));
    public static final Block END_PORTAL_FRAME = Blocks.register("end_portal_frame", new EndPortalFrameBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.GREEN).sounds(BlockSoundGroup.GLASS).lightLevel(arg -> 1).strength(-1.0f, 3600000.0f).dropsNothing()));
    public static final Block END_STONE = Blocks.register("end_stone", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.SAND).strength(3.0f, 9.0f)));
    public static final Block DRAGON_EGG = Blocks.register("dragon_egg", new DragonEggBlock(AbstractBlock.Settings.of(Material.EGG, MaterialColor.BLACK).strength(3.0f, 9.0f).lightLevel(arg -> 1).nonOpaque()));
    public static final Block REDSTONE_LAMP = Blocks.register("redstone_lamp", new RedstoneLampBlock(AbstractBlock.Settings.of(Material.REDSTONE_LAMP).lightLevel(Blocks.createLightLevelFromBlockState(15)).strength(0.3f).sounds(BlockSoundGroup.GLASS).allowsSpawning(Blocks::always)));
    public static final Block COCOA = Blocks.register("cocoa", new CocoaBlock(AbstractBlock.Settings.of(Material.PLANT).ticksRandomly().strength(0.2f, 3.0f).sounds(BlockSoundGroup.WOOD).nonOpaque()));
    public static final Block SANDSTONE_STAIRS = Blocks.register("sandstone_stairs", new StairsBlock(SANDSTONE.getDefaultState(), AbstractBlock.Settings.copy(SANDSTONE)));
    public static final Block EMERALD_ORE = Blocks.register("emerald_ore", new OreBlock(AbstractBlock.Settings.of(Material.STONE).strength(3.0f, 3.0f)));
    public static final Block ENDER_CHEST = Blocks.register("ender_chest", new EnderChestBlock(AbstractBlock.Settings.of(Material.STONE).strength(22.5f, 600.0f).lightLevel(arg -> 7)));
    public static final Block TRIPWIRE_HOOK = Blocks.register("tripwire_hook", new TripwireHookBlock(AbstractBlock.Settings.of(Material.PART).noCollision()));
    public static final Block TRIPWIRE = Blocks.register("tripwire", new TripwireBlock((TripwireHookBlock)TRIPWIRE_HOOK, AbstractBlock.Settings.of(Material.PART).noCollision()));
    public static final Block EMERALD_BLOCK = Blocks.register("emerald_block", new Block(AbstractBlock.Settings.of(Material.METAL, MaterialColor.EMERALD).strength(5.0f, 6.0f).sounds(BlockSoundGroup.METAL)));
    public static final Block SPRUCE_STAIRS = Blocks.register("spruce_stairs", new StairsBlock(SPRUCE_PLANKS.getDefaultState(), AbstractBlock.Settings.copy(SPRUCE_PLANKS)));
    public static final Block BIRCH_STAIRS = Blocks.register("birch_stairs", new StairsBlock(BIRCH_PLANKS.getDefaultState(), AbstractBlock.Settings.copy(BIRCH_PLANKS)));
    public static final Block JUNGLE_STAIRS = Blocks.register("jungle_stairs", new StairsBlock(JUNGLE_PLANKS.getDefaultState(), AbstractBlock.Settings.copy(JUNGLE_PLANKS)));
    public static final Block COMMAND_BLOCK = Blocks.register("command_block", new CommandBlock(AbstractBlock.Settings.of(Material.METAL, MaterialColor.BROWN).strength(-1.0f, 3600000.0f).dropsNothing()));
    public static final Block BEACON = Blocks.register("beacon", new BeaconBlock(AbstractBlock.Settings.of(Material.GLASS, MaterialColor.DIAMOND).strength(3.0f).lightLevel(arg -> 15).nonOpaque().solidBlock(Blocks::never)));
    public static final Block COBBLESTONE_WALL = Blocks.register("cobblestone_wall", new WallBlock(AbstractBlock.Settings.copy(COBBLESTONE)));
    public static final Block MOSSY_COBBLESTONE_WALL = Blocks.register("mossy_cobblestone_wall", new WallBlock(AbstractBlock.Settings.copy(COBBLESTONE)));
    public static final Block FLOWER_POT = Blocks.register("flower_pot", new FlowerPotBlock(AIR, AbstractBlock.Settings.of(Material.PART).breakInstantly().nonOpaque()));
    public static final Block POTTED_OAK_SAPLING = Blocks.register("potted_oak_sapling", new FlowerPotBlock(OAK_SAPLING, AbstractBlock.Settings.of(Material.PART).breakInstantly().nonOpaque()));
    public static final Block POTTED_SPRUCE_SAPLING = Blocks.register("potted_spruce_sapling", new FlowerPotBlock(SPRUCE_SAPLING, AbstractBlock.Settings.of(Material.PART).breakInstantly().nonOpaque()));
    public static final Block POTTED_BIRCH_SAPLING = Blocks.register("potted_birch_sapling", new FlowerPotBlock(BIRCH_SAPLING, AbstractBlock.Settings.of(Material.PART).breakInstantly().nonOpaque()));
    public static final Block POTTED_JUNGLE_SAPLING = Blocks.register("potted_jungle_sapling", new FlowerPotBlock(JUNGLE_SAPLING, AbstractBlock.Settings.of(Material.PART).breakInstantly().nonOpaque()));
    public static final Block POTTED_ACACIA_SAPLING = Blocks.register("potted_acacia_sapling", new FlowerPotBlock(ACACIA_SAPLING, AbstractBlock.Settings.of(Material.PART).breakInstantly().nonOpaque()));
    public static final Block POTTED_DARK_OAK_SAPLING = Blocks.register("potted_dark_oak_sapling", new FlowerPotBlock(DARK_OAK_SAPLING, AbstractBlock.Settings.of(Material.PART).breakInstantly().nonOpaque()));
    public static final Block POTTED_FERN = Blocks.register("potted_fern", new FlowerPotBlock(FERN, AbstractBlock.Settings.of(Material.PART).breakInstantly().nonOpaque()));
    public static final Block POTTED_DANDELION = Blocks.register("potted_dandelion", new FlowerPotBlock(DANDELION, AbstractBlock.Settings.of(Material.PART).breakInstantly().nonOpaque()));
    public static final Block POTTED_POPPY = Blocks.register("potted_poppy", new FlowerPotBlock(POPPY, AbstractBlock.Settings.of(Material.PART).breakInstantly().nonOpaque()));
    public static final Block POTTED_BLUE_ORCHID = Blocks.register("potted_blue_orchid", new FlowerPotBlock(BLUE_ORCHID, AbstractBlock.Settings.of(Material.PART).breakInstantly().nonOpaque()));
    public static final Block POTTED_ALLIUM = Blocks.register("potted_allium", new FlowerPotBlock(ALLIUM, AbstractBlock.Settings.of(Material.PART).breakInstantly().nonOpaque()));
    public static final Block POTTED_AZURE_BLUET = Blocks.register("potted_azure_bluet", new FlowerPotBlock(AZURE_BLUET, AbstractBlock.Settings.of(Material.PART).breakInstantly().nonOpaque()));
    public static final Block POTTED_RED_TULIP = Blocks.register("potted_red_tulip", new FlowerPotBlock(RED_TULIP, AbstractBlock.Settings.of(Material.PART).breakInstantly().nonOpaque()));
    public static final Block POTTED_ORANGE_TULIP = Blocks.register("potted_orange_tulip", new FlowerPotBlock(ORANGE_TULIP, AbstractBlock.Settings.of(Material.PART).breakInstantly().nonOpaque()));
    public static final Block POTTED_WHITE_TULIP = Blocks.register("potted_white_tulip", new FlowerPotBlock(WHITE_TULIP, AbstractBlock.Settings.of(Material.PART).breakInstantly().nonOpaque()));
    public static final Block POTTED_PINK_TULIP = Blocks.register("potted_pink_tulip", new FlowerPotBlock(PINK_TULIP, AbstractBlock.Settings.of(Material.PART).breakInstantly().nonOpaque()));
    public static final Block POTTED_OXEYE_DAISY = Blocks.register("potted_oxeye_daisy", new FlowerPotBlock(OXEYE_DAISY, AbstractBlock.Settings.of(Material.PART).breakInstantly().nonOpaque()));
    public static final Block POTTED_CORNFLOWER = Blocks.register("potted_cornflower", new FlowerPotBlock(CORNFLOWER, AbstractBlock.Settings.of(Material.PART).breakInstantly().nonOpaque()));
    public static final Block POTTED_LILY_OF_THE_VALLEY = Blocks.register("potted_lily_of_the_valley", new FlowerPotBlock(LILY_OF_THE_VALLEY, AbstractBlock.Settings.of(Material.PART).breakInstantly().nonOpaque()));
    public static final Block POTTED_WITHER_ROSE = Blocks.register("potted_wither_rose", new FlowerPotBlock(WITHER_ROSE, AbstractBlock.Settings.of(Material.PART).breakInstantly().nonOpaque()));
    public static final Block POTTED_RED_MUSHROOM = Blocks.register("potted_red_mushroom", new FlowerPotBlock(RED_MUSHROOM, AbstractBlock.Settings.of(Material.PART).breakInstantly().nonOpaque()));
    public static final Block POTTED_BROWN_MUSHROOM = Blocks.register("potted_brown_mushroom", new FlowerPotBlock(BROWN_MUSHROOM, AbstractBlock.Settings.of(Material.PART).breakInstantly().nonOpaque()));
    public static final Block POTTED_DEAD_BUSH = Blocks.register("potted_dead_bush", new FlowerPotBlock(DEAD_BUSH, AbstractBlock.Settings.of(Material.PART).breakInstantly().nonOpaque()));
    public static final Block POTTED_CACTUS = Blocks.register("potted_cactus", new FlowerPotBlock(CACTUS, AbstractBlock.Settings.of(Material.PART).breakInstantly().nonOpaque()));
    public static final Block CARROTS = Blocks.register("carrots", new CarrotsBlock(AbstractBlock.Settings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly().sounds(BlockSoundGroup.CROP)));
    public static final Block POTATOES = Blocks.register("potatoes", new PotatoesBlock(AbstractBlock.Settings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly().sounds(BlockSoundGroup.CROP)));
    public static final Block OAK_BUTTON = Blocks.register("oak_button", new WoodButtonBlock(AbstractBlock.Settings.of(Material.PART).noCollision().strength(0.5f).sounds(BlockSoundGroup.WOOD)));
    public static final Block SPRUCE_BUTTON = Blocks.register("spruce_button", new WoodButtonBlock(AbstractBlock.Settings.of(Material.PART).noCollision().strength(0.5f).sounds(BlockSoundGroup.WOOD)));
    public static final Block BIRCH_BUTTON = Blocks.register("birch_button", new WoodButtonBlock(AbstractBlock.Settings.of(Material.PART).noCollision().strength(0.5f).sounds(BlockSoundGroup.WOOD)));
    public static final Block JUNGLE_BUTTON = Blocks.register("jungle_button", new WoodButtonBlock(AbstractBlock.Settings.of(Material.PART).noCollision().strength(0.5f).sounds(BlockSoundGroup.WOOD)));
    public static final Block ACACIA_BUTTON = Blocks.register("acacia_button", new WoodButtonBlock(AbstractBlock.Settings.of(Material.PART).noCollision().strength(0.5f).sounds(BlockSoundGroup.WOOD)));
    public static final Block DARK_OAK_BUTTON = Blocks.register("dark_oak_button", new WoodButtonBlock(AbstractBlock.Settings.of(Material.PART).noCollision().strength(0.5f).sounds(BlockSoundGroup.WOOD)));
    public static final Block SKELETON_SKULL = Blocks.register("skeleton_skull", new SkullBlock(SkullBlock.Type.SKELETON, AbstractBlock.Settings.of(Material.PART).strength(1.0f)));
    public static final Block SKELETON_WALL_SKULL = Blocks.register("skeleton_wall_skull", new WallSkullBlock(SkullBlock.Type.SKELETON, AbstractBlock.Settings.of(Material.PART).strength(1.0f).dropsLike(SKELETON_SKULL)));
    public static final Block WITHER_SKELETON_SKULL = Blocks.register("wither_skeleton_skull", new WitherSkullBlock(AbstractBlock.Settings.of(Material.PART).strength(1.0f)));
    public static final Block WITHER_SKELETON_WALL_SKULL = Blocks.register("wither_skeleton_wall_skull", new WallWitherSkullBlock(AbstractBlock.Settings.of(Material.PART).strength(1.0f).dropsLike(WITHER_SKELETON_SKULL)));
    public static final Block ZOMBIE_HEAD = Blocks.register("zombie_head", new SkullBlock(SkullBlock.Type.ZOMBIE, AbstractBlock.Settings.of(Material.PART).strength(1.0f)));
    public static final Block ZOMBIE_WALL_HEAD = Blocks.register("zombie_wall_head", new WallSkullBlock(SkullBlock.Type.ZOMBIE, AbstractBlock.Settings.of(Material.PART).strength(1.0f).dropsLike(ZOMBIE_HEAD)));
    public static final Block PLAYER_HEAD = Blocks.register("player_head", new PlayerSkullBlock(AbstractBlock.Settings.of(Material.PART).strength(1.0f)));
    public static final Block PLAYER_WALL_HEAD = Blocks.register("player_wall_head", new WallPlayerSkullBlock(AbstractBlock.Settings.of(Material.PART).strength(1.0f).dropsLike(PLAYER_HEAD)));
    public static final Block CREEPER_HEAD = Blocks.register("creeper_head", new SkullBlock(SkullBlock.Type.CREEPER, AbstractBlock.Settings.of(Material.PART).strength(1.0f)));
    public static final Block CREEPER_WALL_HEAD = Blocks.register("creeper_wall_head", new WallSkullBlock(SkullBlock.Type.CREEPER, AbstractBlock.Settings.of(Material.PART).strength(1.0f).dropsLike(CREEPER_HEAD)));
    public static final Block DRAGON_HEAD = Blocks.register("dragon_head", new SkullBlock(SkullBlock.Type.DRAGON, AbstractBlock.Settings.of(Material.PART).strength(1.0f)));
    public static final Block DRAGON_WALL_HEAD = Blocks.register("dragon_wall_head", new WallSkullBlock(SkullBlock.Type.DRAGON, AbstractBlock.Settings.of(Material.PART).strength(1.0f).dropsLike(DRAGON_HEAD)));
    public static final Block ANVIL = Blocks.register("anvil", new AnvilBlock(AbstractBlock.Settings.of(Material.ANVIL, MaterialColor.IRON).strength(5.0f, 1200.0f).sounds(BlockSoundGroup.ANVIL)));
    public static final Block CHIPPED_ANVIL = Blocks.register("chipped_anvil", new AnvilBlock(AbstractBlock.Settings.of(Material.ANVIL, MaterialColor.IRON).strength(5.0f, 1200.0f).sounds(BlockSoundGroup.ANVIL)));
    public static final Block DAMAGED_ANVIL = Blocks.register("damaged_anvil", new AnvilBlock(AbstractBlock.Settings.of(Material.ANVIL, MaterialColor.IRON).strength(5.0f, 1200.0f).sounds(BlockSoundGroup.ANVIL)));
    public static final Block TRAPPED_CHEST = Blocks.register("trapped_chest", new TrappedChestBlock(AbstractBlock.Settings.of(Material.WOOD).strength(2.5f).sounds(BlockSoundGroup.WOOD)));
    public static final Block LIGHT_WEIGHTED_PRESSURE_PLATE = Blocks.register("light_weighted_pressure_plate", new WeightedPressurePlateBlock(15, AbstractBlock.Settings.of(Material.METAL, MaterialColor.GOLD).noCollision().strength(0.5f).sounds(BlockSoundGroup.WOOD)));
    public static final Block HEAVY_WEIGHTED_PRESSURE_PLATE = Blocks.register("heavy_weighted_pressure_plate", new WeightedPressurePlateBlock(150, AbstractBlock.Settings.of(Material.METAL).noCollision().strength(0.5f).sounds(BlockSoundGroup.WOOD)));
    public static final Block COMPARATOR = Blocks.register("comparator", new ComparatorBlock(AbstractBlock.Settings.of(Material.PART).breakInstantly().sounds(BlockSoundGroup.WOOD)));
    public static final Block DAYLIGHT_DETECTOR = Blocks.register("daylight_detector", new DaylightDetectorBlock(AbstractBlock.Settings.of(Material.WOOD).strength(0.2f).sounds(BlockSoundGroup.WOOD)));
    public static final Block REDSTONE_BLOCK = Blocks.register("redstone_block", new RedstoneBlock(AbstractBlock.Settings.of(Material.METAL, MaterialColor.LAVA).strength(5.0f, 6.0f).sounds(BlockSoundGroup.METAL).solidBlock(Blocks::never)));
    public static final Block NETHER_QUARTZ_ORE = Blocks.register("nether_quartz_ore", new OreBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.NETHER).strength(3.0f, 3.0f).sounds(BlockSoundGroup.NETHER_ORE)));
    public static final Block HOPPER = Blocks.register("hopper", new HopperBlock(AbstractBlock.Settings.of(Material.METAL, MaterialColor.STONE).strength(3.0f, 4.8f).sounds(BlockSoundGroup.METAL).nonOpaque()));
    public static final Block QUARTZ_BLOCK = Blocks.register("quartz_block", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.QUARTZ).strength(0.8f)));
    public static final Block CHISELED_QUARTZ_BLOCK = Blocks.register("chiseled_quartz_block", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.QUARTZ).strength(0.8f)));
    public static final Block QUARTZ_PILLAR = Blocks.register("quartz_pillar", new PillarBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.QUARTZ).strength(0.8f)));
    public static final Block QUARTZ_STAIRS = Blocks.register("quartz_stairs", new StairsBlock(QUARTZ_BLOCK.getDefaultState(), AbstractBlock.Settings.copy(QUARTZ_BLOCK)));
    public static final Block ACTIVATOR_RAIL = Blocks.register("activator_rail", new PoweredRailBlock(AbstractBlock.Settings.of(Material.PART).noCollision().strength(0.7f).sounds(BlockSoundGroup.METAL)));
    public static final Block DROPPER = Blocks.register("dropper", new DropperBlock(AbstractBlock.Settings.of(Material.STONE).strength(3.5f)));
    public static final Block WHITE_TERRACOTTA = Blocks.register("white_terracotta", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.WHITE_TERRACOTTA).strength(1.25f, 4.2f)));
    public static final Block ORANGE_TERRACOTTA = Blocks.register("orange_terracotta", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.ORANGE_TERRACOTTA).strength(1.25f, 4.2f)));
    public static final Block MAGENTA_TERRACOTTA = Blocks.register("magenta_terracotta", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.MAGENTA_TERRACOTTA).strength(1.25f, 4.2f)));
    public static final Block LIGHT_BLUE_TERRACOTTA = Blocks.register("light_blue_terracotta", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.LIGHT_BLUE_TERRACOTTA).strength(1.25f, 4.2f)));
    public static final Block YELLOW_TERRACOTTA = Blocks.register("yellow_terracotta", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.YELLOW_TERRACOTTA).strength(1.25f, 4.2f)));
    public static final Block LIME_TERRACOTTA = Blocks.register("lime_terracotta", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.LIME_TERRACOTTA).strength(1.25f, 4.2f)));
    public static final Block PINK_TERRACOTTA = Blocks.register("pink_terracotta", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.PINK_TERRACOTTA).strength(1.25f, 4.2f)));
    public static final Block GRAY_TERRACOTTA = Blocks.register("gray_terracotta", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.GRAY_TERRACOTTA).strength(1.25f, 4.2f)));
    public static final Block LIGHT_GRAY_TERRACOTTA = Blocks.register("light_gray_terracotta", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.LIGHT_GRAY_TERRACOTTA).strength(1.25f, 4.2f)));
    public static final Block CYAN_TERRACOTTA = Blocks.register("cyan_terracotta", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.CYAN_TERRACOTTA).strength(1.25f, 4.2f)));
    public static final Block PURPLE_TERRACOTTA = Blocks.register("purple_terracotta", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.PURPLE_TERRACOTTA).strength(1.25f, 4.2f)));
    public static final Block BLUE_TERRACOTTA = Blocks.register("blue_terracotta", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.BLUE_TERRACOTTA).strength(1.25f, 4.2f)));
    public static final Block BROWN_TERRACOTTA = Blocks.register("brown_terracotta", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.BROWN_TERRACOTTA).strength(1.25f, 4.2f)));
    public static final Block GREEN_TERRACOTTA = Blocks.register("green_terracotta", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.GREEN_TERRACOTTA).strength(1.25f, 4.2f)));
    public static final Block RED_TERRACOTTA = Blocks.register("red_terracotta", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.RED_TERRACOTTA).strength(1.25f, 4.2f)));
    public static final Block BLACK_TERRACOTTA = Blocks.register("black_terracotta", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.BLACK_TERRACOTTA).strength(1.25f, 4.2f)));
    public static final Block WHITE_STAINED_GLASS_PANE = Blocks.register("white_stained_glass_pane", new StainedGlassPaneBlock(DyeColor.WHITE, AbstractBlock.Settings.of(Material.GLASS).strength(0.3f).sounds(BlockSoundGroup.GLASS).nonOpaque()));
    public static final Block ORANGE_STAINED_GLASS_PANE = Blocks.register("orange_stained_glass_pane", new StainedGlassPaneBlock(DyeColor.ORANGE, AbstractBlock.Settings.of(Material.GLASS).strength(0.3f).sounds(BlockSoundGroup.GLASS).nonOpaque()));
    public static final Block MAGENTA_STAINED_GLASS_PANE = Blocks.register("magenta_stained_glass_pane", new StainedGlassPaneBlock(DyeColor.MAGENTA, AbstractBlock.Settings.of(Material.GLASS).strength(0.3f).sounds(BlockSoundGroup.GLASS).nonOpaque()));
    public static final Block LIGHT_BLUE_STAINED_GLASS_PANE = Blocks.register("light_blue_stained_glass_pane", new StainedGlassPaneBlock(DyeColor.LIGHT_BLUE, AbstractBlock.Settings.of(Material.GLASS).strength(0.3f).sounds(BlockSoundGroup.GLASS).nonOpaque()));
    public static final Block YELLOW_STAINED_GLASS_PANE = Blocks.register("yellow_stained_glass_pane", new StainedGlassPaneBlock(DyeColor.YELLOW, AbstractBlock.Settings.of(Material.GLASS).strength(0.3f).sounds(BlockSoundGroup.GLASS).nonOpaque()));
    public static final Block LIME_STAINED_GLASS_PANE = Blocks.register("lime_stained_glass_pane", new StainedGlassPaneBlock(DyeColor.LIME, AbstractBlock.Settings.of(Material.GLASS).strength(0.3f).sounds(BlockSoundGroup.GLASS).nonOpaque()));
    public static final Block PINK_STAINED_GLASS_PANE = Blocks.register("pink_stained_glass_pane", new StainedGlassPaneBlock(DyeColor.PINK, AbstractBlock.Settings.of(Material.GLASS).strength(0.3f).sounds(BlockSoundGroup.GLASS).nonOpaque()));
    public static final Block GRAY_STAINED_GLASS_PANE = Blocks.register("gray_stained_glass_pane", new StainedGlassPaneBlock(DyeColor.GRAY, AbstractBlock.Settings.of(Material.GLASS).strength(0.3f).sounds(BlockSoundGroup.GLASS).nonOpaque()));
    public static final Block LIGHT_GRAY_STAINED_GLASS_PANE = Blocks.register("light_gray_stained_glass_pane", new StainedGlassPaneBlock(DyeColor.LIGHT_GRAY, AbstractBlock.Settings.of(Material.GLASS).strength(0.3f).sounds(BlockSoundGroup.GLASS).nonOpaque()));
    public static final Block CYAN_STAINED_GLASS_PANE = Blocks.register("cyan_stained_glass_pane", new StainedGlassPaneBlock(DyeColor.CYAN, AbstractBlock.Settings.of(Material.GLASS).strength(0.3f).sounds(BlockSoundGroup.GLASS).nonOpaque()));
    public static final Block PURPLE_STAINED_GLASS_PANE = Blocks.register("purple_stained_glass_pane", new StainedGlassPaneBlock(DyeColor.PURPLE, AbstractBlock.Settings.of(Material.GLASS).strength(0.3f).sounds(BlockSoundGroup.GLASS).nonOpaque()));
    public static final Block BLUE_STAINED_GLASS_PANE = Blocks.register("blue_stained_glass_pane", new StainedGlassPaneBlock(DyeColor.BLUE, AbstractBlock.Settings.of(Material.GLASS).strength(0.3f).sounds(BlockSoundGroup.GLASS).nonOpaque()));
    public static final Block BROWN_STAINED_GLASS_PANE = Blocks.register("brown_stained_glass_pane", new StainedGlassPaneBlock(DyeColor.BROWN, AbstractBlock.Settings.of(Material.GLASS).strength(0.3f).sounds(BlockSoundGroup.GLASS).nonOpaque()));
    public static final Block GREEN_STAINED_GLASS_PANE = Blocks.register("green_stained_glass_pane", new StainedGlassPaneBlock(DyeColor.GREEN, AbstractBlock.Settings.of(Material.GLASS).strength(0.3f).sounds(BlockSoundGroup.GLASS).nonOpaque()));
    public static final Block RED_STAINED_GLASS_PANE = Blocks.register("red_stained_glass_pane", new StainedGlassPaneBlock(DyeColor.RED, AbstractBlock.Settings.of(Material.GLASS).strength(0.3f).sounds(BlockSoundGroup.GLASS).nonOpaque()));
    public static final Block BLACK_STAINED_GLASS_PANE = Blocks.register("black_stained_glass_pane", new StainedGlassPaneBlock(DyeColor.BLACK, AbstractBlock.Settings.of(Material.GLASS).strength(0.3f).sounds(BlockSoundGroup.GLASS).nonOpaque()));
    public static final Block ACACIA_STAIRS = Blocks.register("acacia_stairs", new StairsBlock(ACACIA_PLANKS.getDefaultState(), AbstractBlock.Settings.copy(ACACIA_PLANKS)));
    public static final Block DARK_OAK_STAIRS = Blocks.register("dark_oak_stairs", new StairsBlock(DARK_OAK_PLANKS.getDefaultState(), AbstractBlock.Settings.copy(DARK_OAK_PLANKS)));
    public static final Block SLIME_BLOCK = Blocks.register("slime_block", new SlimeBlock(AbstractBlock.Settings.of(Material.CLAY, MaterialColor.GRASS).slipperiness(0.8f).sounds(BlockSoundGroup.SLIME).nonOpaque()));
    public static final Block BARRIER = Blocks.register("barrier", new BarrierBlock(AbstractBlock.Settings.of(Material.BARRIER).strength(-1.0f, 3600000.8f).dropsNothing().nonOpaque().allowsSpawning(Blocks::never)));
    public static final Block IRON_TRAPDOOR = Blocks.register("iron_trapdoor", new TrapdoorBlock(AbstractBlock.Settings.of(Material.METAL).strength(5.0f).sounds(BlockSoundGroup.METAL).nonOpaque()));
    public static final Block PRISMARINE = Blocks.register("prismarine", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.CYAN).strength(1.5f, 6.0f)));
    public static final Block PRISMARINE_BRICKS = Blocks.register("prismarine_bricks", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.DIAMOND).strength(1.5f, 6.0f)));
    public static final Block DARK_PRISMARINE = Blocks.register("dark_prismarine", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.DIAMOND).strength(1.5f, 6.0f)));
    public static final Block PRISMARINE_STAIRS = Blocks.register("prismarine_stairs", new StairsBlock(PRISMARINE.getDefaultState(), AbstractBlock.Settings.copy(PRISMARINE)));
    public static final Block PRISMARINE_BRICK_STAIRS = Blocks.register("prismarine_brick_stairs", new StairsBlock(PRISMARINE_BRICKS.getDefaultState(), AbstractBlock.Settings.copy(PRISMARINE_BRICKS)));
    public static final Block DARK_PRISMARINE_STAIRS = Blocks.register("dark_prismarine_stairs", new StairsBlock(DARK_PRISMARINE.getDefaultState(), AbstractBlock.Settings.copy(DARK_PRISMARINE)));
    public static final Block PRISMARINE_SLAB = Blocks.register("prismarine_slab", new SlabBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.CYAN).strength(1.5f, 6.0f)));
    public static final Block PRISMARINE_BRICK_SLAB = Blocks.register("prismarine_brick_slab", new SlabBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.DIAMOND).strength(1.5f, 6.0f)));
    public static final Block DARK_PRISMARINE_SLAB = Blocks.register("dark_prismarine_slab", new SlabBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.DIAMOND).strength(1.5f, 6.0f)));
    public static final Block SEA_LANTERN = Blocks.register("sea_lantern", new Block(AbstractBlock.Settings.of(Material.GLASS, MaterialColor.QUARTZ).strength(0.3f).sounds(BlockSoundGroup.GLASS).lightLevel(arg -> 15)));
    public static final Block HAY_BLOCK = Blocks.register("hay_block", new HayBlock(AbstractBlock.Settings.of(Material.ORGANIC, MaterialColor.YELLOW).strength(0.5f).sounds(BlockSoundGroup.GRASS)));
    public static final Block WHITE_CARPET = Blocks.register("white_carpet", new CarpetBlock(DyeColor.WHITE, AbstractBlock.Settings.of(Material.CARPET, MaterialColor.WHITE).strength(0.1f).sounds(BlockSoundGroup.WOOL)));
    public static final Block ORANGE_CARPET = Blocks.register("orange_carpet", new CarpetBlock(DyeColor.ORANGE, AbstractBlock.Settings.of(Material.CARPET, MaterialColor.ORANGE).strength(0.1f).sounds(BlockSoundGroup.WOOL)));
    public static final Block MAGENTA_CARPET = Blocks.register("magenta_carpet", new CarpetBlock(DyeColor.MAGENTA, AbstractBlock.Settings.of(Material.CARPET, MaterialColor.MAGENTA).strength(0.1f).sounds(BlockSoundGroup.WOOL)));
    public static final Block LIGHT_BLUE_CARPET = Blocks.register("light_blue_carpet", new CarpetBlock(DyeColor.LIGHT_BLUE, AbstractBlock.Settings.of(Material.CARPET, MaterialColor.LIGHT_BLUE).strength(0.1f).sounds(BlockSoundGroup.WOOL)));
    public static final Block YELLOW_CARPET = Blocks.register("yellow_carpet", new CarpetBlock(DyeColor.YELLOW, AbstractBlock.Settings.of(Material.CARPET, MaterialColor.YELLOW).strength(0.1f).sounds(BlockSoundGroup.WOOL)));
    public static final Block LIME_CARPET = Blocks.register("lime_carpet", new CarpetBlock(DyeColor.LIME, AbstractBlock.Settings.of(Material.CARPET, MaterialColor.LIME).strength(0.1f).sounds(BlockSoundGroup.WOOL)));
    public static final Block PINK_CARPET = Blocks.register("pink_carpet", new CarpetBlock(DyeColor.PINK, AbstractBlock.Settings.of(Material.CARPET, MaterialColor.PINK).strength(0.1f).sounds(BlockSoundGroup.WOOL)));
    public static final Block GRAY_CARPET = Blocks.register("gray_carpet", new CarpetBlock(DyeColor.GRAY, AbstractBlock.Settings.of(Material.CARPET, MaterialColor.GRAY).strength(0.1f).sounds(BlockSoundGroup.WOOL)));
    public static final Block LIGHT_GRAY_CARPET = Blocks.register("light_gray_carpet", new CarpetBlock(DyeColor.LIGHT_GRAY, AbstractBlock.Settings.of(Material.CARPET, MaterialColor.LIGHT_GRAY).strength(0.1f).sounds(BlockSoundGroup.WOOL)));
    public static final Block CYAN_CARPET = Blocks.register("cyan_carpet", new CarpetBlock(DyeColor.CYAN, AbstractBlock.Settings.of(Material.CARPET, MaterialColor.CYAN).strength(0.1f).sounds(BlockSoundGroup.WOOL)));
    public static final Block PURPLE_CARPET = Blocks.register("purple_carpet", new CarpetBlock(DyeColor.PURPLE, AbstractBlock.Settings.of(Material.CARPET, MaterialColor.PURPLE).strength(0.1f).sounds(BlockSoundGroup.WOOL)));
    public static final Block BLUE_CARPET = Blocks.register("blue_carpet", new CarpetBlock(DyeColor.BLUE, AbstractBlock.Settings.of(Material.CARPET, MaterialColor.BLUE).strength(0.1f).sounds(BlockSoundGroup.WOOL)));
    public static final Block BROWN_CARPET = Blocks.register("brown_carpet", new CarpetBlock(DyeColor.BROWN, AbstractBlock.Settings.of(Material.CARPET, MaterialColor.BROWN).strength(0.1f).sounds(BlockSoundGroup.WOOL)));
    public static final Block GREEN_CARPET = Blocks.register("green_carpet", new CarpetBlock(DyeColor.GREEN, AbstractBlock.Settings.of(Material.CARPET, MaterialColor.GREEN).strength(0.1f).sounds(BlockSoundGroup.WOOL)));
    public static final Block RED_CARPET = Blocks.register("red_carpet", new CarpetBlock(DyeColor.RED, AbstractBlock.Settings.of(Material.CARPET, MaterialColor.RED).strength(0.1f).sounds(BlockSoundGroup.WOOL)));
    public static final Block BLACK_CARPET = Blocks.register("black_carpet", new CarpetBlock(DyeColor.BLACK, AbstractBlock.Settings.of(Material.CARPET, MaterialColor.BLACK).strength(0.1f).sounds(BlockSoundGroup.WOOL)));
    public static final Block TERRACOTTA = Blocks.register("terracotta", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.ORANGE).strength(1.25f, 4.2f)));
    public static final Block COAL_BLOCK = Blocks.register("coal_block", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.BLACK).strength(5.0f, 6.0f)));
    public static final Block PACKED_ICE = Blocks.register("packed_ice", new Block(AbstractBlock.Settings.of(Material.PACKED_ICE).slipperiness(0.98f).strength(0.5f).sounds(BlockSoundGroup.GLASS)));
    public static final Block SUNFLOWER = Blocks.register("sunflower", new TallFlowerBlock(AbstractBlock.Settings.of(Material.REPLACEABLE_PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
    public static final Block LILAC = Blocks.register("lilac", new TallFlowerBlock(AbstractBlock.Settings.of(Material.REPLACEABLE_PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
    public static final Block ROSE_BUSH = Blocks.register("rose_bush", new TallFlowerBlock(AbstractBlock.Settings.of(Material.REPLACEABLE_PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
    public static final Block PEONY = Blocks.register("peony", new TallFlowerBlock(AbstractBlock.Settings.of(Material.REPLACEABLE_PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
    public static final Block TALL_GRASS = Blocks.register("tall_grass", new TallPlantBlock(AbstractBlock.Settings.of(Material.REPLACEABLE_PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
    public static final Block LARGE_FERN = Blocks.register("large_fern", new TallPlantBlock(AbstractBlock.Settings.of(Material.REPLACEABLE_PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
    public static final Block WHITE_BANNER = Blocks.register("white_banner", new BannerBlock(DyeColor.WHITE, AbstractBlock.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block ORANGE_BANNER = Blocks.register("orange_banner", new BannerBlock(DyeColor.ORANGE, AbstractBlock.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block MAGENTA_BANNER = Blocks.register("magenta_banner", new BannerBlock(DyeColor.MAGENTA, AbstractBlock.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block LIGHT_BLUE_BANNER = Blocks.register("light_blue_banner", new BannerBlock(DyeColor.LIGHT_BLUE, AbstractBlock.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block YELLOW_BANNER = Blocks.register("yellow_banner", new BannerBlock(DyeColor.YELLOW, AbstractBlock.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block LIME_BANNER = Blocks.register("lime_banner", new BannerBlock(DyeColor.LIME, AbstractBlock.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block PINK_BANNER = Blocks.register("pink_banner", new BannerBlock(DyeColor.PINK, AbstractBlock.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block GRAY_BANNER = Blocks.register("gray_banner", new BannerBlock(DyeColor.GRAY, AbstractBlock.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block LIGHT_GRAY_BANNER = Blocks.register("light_gray_banner", new BannerBlock(DyeColor.LIGHT_GRAY, AbstractBlock.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block CYAN_BANNER = Blocks.register("cyan_banner", new BannerBlock(DyeColor.CYAN, AbstractBlock.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block PURPLE_BANNER = Blocks.register("purple_banner", new BannerBlock(DyeColor.PURPLE, AbstractBlock.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block BLUE_BANNER = Blocks.register("blue_banner", new BannerBlock(DyeColor.BLUE, AbstractBlock.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block BROWN_BANNER = Blocks.register("brown_banner", new BannerBlock(DyeColor.BROWN, AbstractBlock.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block GREEN_BANNER = Blocks.register("green_banner", new BannerBlock(DyeColor.GREEN, AbstractBlock.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block RED_BANNER = Blocks.register("red_banner", new BannerBlock(DyeColor.RED, AbstractBlock.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block BLACK_BANNER = Blocks.register("black_banner", new BannerBlock(DyeColor.BLACK, AbstractBlock.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block WHITE_WALL_BANNER = Blocks.register("white_wall_banner", new WallBannerBlock(DyeColor.WHITE, AbstractBlock.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(WHITE_BANNER)));
    public static final Block ORANGE_WALL_BANNER = Blocks.register("orange_wall_banner", new WallBannerBlock(DyeColor.ORANGE, AbstractBlock.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(ORANGE_BANNER)));
    public static final Block MAGENTA_WALL_BANNER = Blocks.register("magenta_wall_banner", new WallBannerBlock(DyeColor.MAGENTA, AbstractBlock.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(MAGENTA_BANNER)));
    public static final Block LIGHT_BLUE_WALL_BANNER = Blocks.register("light_blue_wall_banner", new WallBannerBlock(DyeColor.LIGHT_BLUE, AbstractBlock.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(LIGHT_BLUE_BANNER)));
    public static final Block YELLOW_WALL_BANNER = Blocks.register("yellow_wall_banner", new WallBannerBlock(DyeColor.YELLOW, AbstractBlock.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(YELLOW_BANNER)));
    public static final Block LIME_WALL_BANNER = Blocks.register("lime_wall_banner", new WallBannerBlock(DyeColor.LIME, AbstractBlock.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(LIME_BANNER)));
    public static final Block PINK_WALL_BANNER = Blocks.register("pink_wall_banner", new WallBannerBlock(DyeColor.PINK, AbstractBlock.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(PINK_BANNER)));
    public static final Block GRAY_WALL_BANNER = Blocks.register("gray_wall_banner", new WallBannerBlock(DyeColor.GRAY, AbstractBlock.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(GRAY_BANNER)));
    public static final Block LIGHT_GRAY_WALL_BANNER = Blocks.register("light_gray_wall_banner", new WallBannerBlock(DyeColor.LIGHT_GRAY, AbstractBlock.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(LIGHT_GRAY_BANNER)));
    public static final Block CYAN_WALL_BANNER = Blocks.register("cyan_wall_banner", new WallBannerBlock(DyeColor.CYAN, AbstractBlock.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(CYAN_BANNER)));
    public static final Block PURPLE_WALL_BANNER = Blocks.register("purple_wall_banner", new WallBannerBlock(DyeColor.PURPLE, AbstractBlock.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(PURPLE_BANNER)));
    public static final Block BLUE_WALL_BANNER = Blocks.register("blue_wall_banner", new WallBannerBlock(DyeColor.BLUE, AbstractBlock.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(BLUE_BANNER)));
    public static final Block BROWN_WALL_BANNER = Blocks.register("brown_wall_banner", new WallBannerBlock(DyeColor.BROWN, AbstractBlock.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(BROWN_BANNER)));
    public static final Block GREEN_WALL_BANNER = Blocks.register("green_wall_banner", new WallBannerBlock(DyeColor.GREEN, AbstractBlock.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(GREEN_BANNER)));
    public static final Block RED_WALL_BANNER = Blocks.register("red_wall_banner", new WallBannerBlock(DyeColor.RED, AbstractBlock.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(RED_BANNER)));
    public static final Block BLACK_WALL_BANNER = Blocks.register("black_wall_banner", new WallBannerBlock(DyeColor.BLACK, AbstractBlock.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(BLACK_BANNER)));
    public static final Block RED_SANDSTONE = Blocks.register("red_sandstone", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.ORANGE).strength(0.8f)));
    public static final Block CHISELED_RED_SANDSTONE = Blocks.register("chiseled_red_sandstone", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.ORANGE).strength(0.8f)));
    public static final Block CUT_RED_SANDSTONE = Blocks.register("cut_red_sandstone", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.ORANGE).strength(0.8f)));
    public static final Block RED_SANDSTONE_STAIRS = Blocks.register("red_sandstone_stairs", new StairsBlock(RED_SANDSTONE.getDefaultState(), AbstractBlock.Settings.copy(RED_SANDSTONE)));
    public static final Block OAK_SLAB = Blocks.register("oak_slab", new SlabBlock(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.WOOD).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block SPRUCE_SLAB = Blocks.register("spruce_slab", new SlabBlock(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.SPRUCE).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block BIRCH_SLAB = Blocks.register("birch_slab", new SlabBlock(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.SAND).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block JUNGLE_SLAB = Blocks.register("jungle_slab", new SlabBlock(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.DIRT).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block ACACIA_SLAB = Blocks.register("acacia_slab", new SlabBlock(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.ORANGE).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block DARK_OAK_SLAB = Blocks.register("dark_oak_slab", new SlabBlock(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.BROWN).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block STONE_SLAB = Blocks.register("stone_slab", new SlabBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.STONE).strength(2.0f, 6.0f)));
    public static final Block SMOOTH_STONE_SLAB = Blocks.register("smooth_stone_slab", new SlabBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.STONE).strength(2.0f, 6.0f)));
    public static final Block SANDSTONE_SLAB = Blocks.register("sandstone_slab", new SlabBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.SAND).strength(2.0f, 6.0f)));
    public static final Block CUT_SANDSTONE_SLAB = Blocks.register("cut_sandstone_slab", new SlabBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.SAND).strength(2.0f, 6.0f)));
    public static final Block PETRIFIED_OAK_SLAB = Blocks.register("petrified_oak_slab", new SlabBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.WOOD).strength(2.0f, 6.0f)));
    public static final Block COBBLESTONE_SLAB = Blocks.register("cobblestone_slab", new SlabBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.STONE).strength(2.0f, 6.0f)));
    public static final Block BRICK_SLAB = Blocks.register("brick_slab", new SlabBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.RED).strength(2.0f, 6.0f)));
    public static final Block STONE_BRICK_SLAB = Blocks.register("stone_brick_slab", new SlabBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.STONE).strength(2.0f, 6.0f)));
    public static final Block NETHER_BRICK_SLAB = Blocks.register("nether_brick_slab", new SlabBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.NETHER).strength(2.0f, 6.0f).sounds(BlockSoundGroup.NETHER_BRICK)));
    public static final Block QUARTZ_SLAB = Blocks.register("quartz_slab", new SlabBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.QUARTZ).strength(2.0f, 6.0f)));
    public static final Block RED_SANDSTONE_SLAB = Blocks.register("red_sandstone_slab", new SlabBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.ORANGE).strength(2.0f, 6.0f)));
    public static final Block CUT_RED_SANDSTONE_SLAB = Blocks.register("cut_red_sandstone_slab", new SlabBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.ORANGE).strength(2.0f, 6.0f)));
    public static final Block PURPUR_SLAB = Blocks.register("purpur_slab", new SlabBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.MAGENTA).strength(2.0f, 6.0f)));
    public static final Block SMOOTH_STONE = Blocks.register("smooth_stone", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.STONE).strength(2.0f, 6.0f)));
    public static final Block SMOOTH_SANDSTONE = Blocks.register("smooth_sandstone", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.SAND).strength(2.0f, 6.0f)));
    public static final Block SMOOTH_QUARTZ = Blocks.register("smooth_quartz", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.QUARTZ).strength(2.0f, 6.0f)));
    public static final Block SMOOTH_RED_SANDSTONE = Blocks.register("smooth_red_sandstone", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.ORANGE).strength(2.0f, 6.0f)));
    public static final Block SPRUCE_FENCE_GATE = Blocks.register("spruce_fence_gate", new FenceGateBlock(AbstractBlock.Settings.of(Material.WOOD, SPRUCE_PLANKS.getDefaultMaterialColor()).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block BIRCH_FENCE_GATE = Blocks.register("birch_fence_gate", new FenceGateBlock(AbstractBlock.Settings.of(Material.WOOD, BIRCH_PLANKS.getDefaultMaterialColor()).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block JUNGLE_FENCE_GATE = Blocks.register("jungle_fence_gate", new FenceGateBlock(AbstractBlock.Settings.of(Material.WOOD, JUNGLE_PLANKS.getDefaultMaterialColor()).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block ACACIA_FENCE_GATE = Blocks.register("acacia_fence_gate", new FenceGateBlock(AbstractBlock.Settings.of(Material.WOOD, ACACIA_PLANKS.getDefaultMaterialColor()).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block DARK_OAK_FENCE_GATE = Blocks.register("dark_oak_fence_gate", new FenceGateBlock(AbstractBlock.Settings.of(Material.WOOD, DARK_OAK_PLANKS.getDefaultMaterialColor()).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block SPRUCE_FENCE = Blocks.register("spruce_fence", new FenceBlock(AbstractBlock.Settings.of(Material.WOOD, SPRUCE_PLANKS.getDefaultMaterialColor()).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block BIRCH_FENCE = Blocks.register("birch_fence", new FenceBlock(AbstractBlock.Settings.of(Material.WOOD, BIRCH_PLANKS.getDefaultMaterialColor()).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block JUNGLE_FENCE = Blocks.register("jungle_fence", new FenceBlock(AbstractBlock.Settings.of(Material.WOOD, JUNGLE_PLANKS.getDefaultMaterialColor()).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block ACACIA_FENCE = Blocks.register("acacia_fence", new FenceBlock(AbstractBlock.Settings.of(Material.WOOD, ACACIA_PLANKS.getDefaultMaterialColor()).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block DARK_OAK_FENCE = Blocks.register("dark_oak_fence", new FenceBlock(AbstractBlock.Settings.of(Material.WOOD, DARK_OAK_PLANKS.getDefaultMaterialColor()).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block SPRUCE_DOOR = Blocks.register("spruce_door", new DoorBlock(AbstractBlock.Settings.of(Material.WOOD, SPRUCE_PLANKS.getDefaultMaterialColor()).strength(3.0f).sounds(BlockSoundGroup.WOOD).nonOpaque()));
    public static final Block BIRCH_DOOR = Blocks.register("birch_door", new DoorBlock(AbstractBlock.Settings.of(Material.WOOD, BIRCH_PLANKS.getDefaultMaterialColor()).strength(3.0f).sounds(BlockSoundGroup.WOOD).nonOpaque()));
    public static final Block JUNGLE_DOOR = Blocks.register("jungle_door", new DoorBlock(AbstractBlock.Settings.of(Material.WOOD, JUNGLE_PLANKS.getDefaultMaterialColor()).strength(3.0f).sounds(BlockSoundGroup.WOOD).nonOpaque()));
    public static final Block ACACIA_DOOR = Blocks.register("acacia_door", new DoorBlock(AbstractBlock.Settings.of(Material.WOOD, ACACIA_PLANKS.getDefaultMaterialColor()).strength(3.0f).sounds(BlockSoundGroup.WOOD).nonOpaque()));
    public static final Block DARK_OAK_DOOR = Blocks.register("dark_oak_door", new DoorBlock(AbstractBlock.Settings.of(Material.WOOD, DARK_OAK_PLANKS.getDefaultMaterialColor()).strength(3.0f).sounds(BlockSoundGroup.WOOD).nonOpaque()));
    public static final Block END_ROD = Blocks.register("end_rod", new EndRodBlock(AbstractBlock.Settings.of(Material.PART).breakInstantly().lightLevel(arg -> 14).sounds(BlockSoundGroup.WOOD).nonOpaque()));
    public static final Block CHORUS_PLANT = Blocks.register("chorus_plant", new ChorusPlantBlock(AbstractBlock.Settings.of(Material.PLANT, MaterialColor.PURPLE).strength(0.4f).sounds(BlockSoundGroup.WOOD).nonOpaque()));
    public static final Block CHORUS_FLOWER = Blocks.register("chorus_flower", new ChorusFlowerBlock((ChorusPlantBlock)CHORUS_PLANT, AbstractBlock.Settings.of(Material.PLANT, MaterialColor.PURPLE).ticksRandomly().strength(0.4f).sounds(BlockSoundGroup.WOOD).nonOpaque()));
    public static final Block PURPUR_BLOCK = Blocks.register("purpur_block", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.MAGENTA).strength(1.5f, 6.0f)));
    public static final Block PURPUR_PILLAR = Blocks.register("purpur_pillar", new PillarBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.MAGENTA).strength(1.5f, 6.0f)));
    public static final Block PURPUR_STAIRS = Blocks.register("purpur_stairs", new StairsBlock(PURPUR_BLOCK.getDefaultState(), AbstractBlock.Settings.copy(PURPUR_BLOCK)));
    public static final Block END_STONE_BRICKS = Blocks.register("end_stone_bricks", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.SAND).strength(3.0f, 9.0f)));
    public static final Block BEETROOTS = Blocks.register("beetroots", new BeetrootsBlock(AbstractBlock.Settings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly().sounds(BlockSoundGroup.CROP)));
    public static final Block GRASS_PATH = Blocks.register("grass_path", new GrassPathBlock(AbstractBlock.Settings.of(Material.EARTH).strength(0.65f).sounds(BlockSoundGroup.GRASS).blockVision(Blocks::always)));
    public static final Block END_GATEWAY = Blocks.register("end_gateway", new EndGatewayBlock(AbstractBlock.Settings.of(Material.PORTAL, MaterialColor.BLACK).noCollision().lightLevel(arg -> 15).strength(-1.0f, 3600000.0f).dropsNothing()));
    public static final Block REPEATING_COMMAND_BLOCK = Blocks.register("repeating_command_block", new CommandBlock(AbstractBlock.Settings.of(Material.METAL, MaterialColor.PURPLE).strength(-1.0f, 3600000.0f).dropsNothing()));
    public static final Block CHAIN_COMMAND_BLOCK = Blocks.register("chain_command_block", new CommandBlock(AbstractBlock.Settings.of(Material.METAL, MaterialColor.GREEN).strength(-1.0f, 3600000.0f).dropsNothing()));
    public static final Block FROSTED_ICE = Blocks.register("frosted_ice", new FrostedIceBlock(AbstractBlock.Settings.of(Material.ICE).slipperiness(0.98f).ticksRandomly().strength(0.5f).sounds(BlockSoundGroup.GLASS).nonOpaque().allowsSpawning((arg, arg2, arg3, arg4) -> arg4 == EntityType.POLAR_BEAR)));
    public static final Block MAGMA_BLOCK = Blocks.register("magma_block", new MagmaBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.NETHER).lightLevel(arg -> 3).ticksRandomly().strength(0.5f).allowsSpawning((arg, arg2, arg3, arg4) -> arg4.isFireImmune()).postProcess(Blocks::always).emissiveLighting(Blocks::always)));
    public static final Block NETHER_WART_BLOCK = Blocks.register("nether_wart_block", new Block(AbstractBlock.Settings.of(Material.ORGANIC, MaterialColor.RED).strength(1.0f).sounds(BlockSoundGroup.WART_BLOCK)));
    public static final Block RED_NETHER_BRICKS = Blocks.register("red_nether_bricks", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.NETHER).strength(2.0f, 6.0f).sounds(BlockSoundGroup.NETHER_BRICK)));
    public static final Block BONE_BLOCK = Blocks.register("bone_block", new PillarBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.SAND).strength(2.0f).sounds(BlockSoundGroup.BONE)));
    public static final Block STRUCTURE_VOID = Blocks.register("structure_void", new StructureVoidBlock(AbstractBlock.Settings.of(Material.STRUCTURE_VOID).noCollision().dropsNothing()));
    public static final Block OBSERVER = Blocks.register("observer", new ObserverBlock(AbstractBlock.Settings.of(Material.STONE).strength(3.0f).solidBlock(Blocks::never)));
    public static final Block SHULKER_BOX = Blocks.register("shulker_box", Blocks.createShulkerBoxBlock(null, AbstractBlock.Settings.of(Material.SHULKER_BOX)));
    public static final Block WHITE_SHULKER_BOX = Blocks.register("white_shulker_box", Blocks.createShulkerBoxBlock(DyeColor.WHITE, AbstractBlock.Settings.of(Material.SHULKER_BOX, MaterialColor.WHITE)));
    public static final Block ORANGE_SHULKER_BOX = Blocks.register("orange_shulker_box", Blocks.createShulkerBoxBlock(DyeColor.ORANGE, AbstractBlock.Settings.of(Material.SHULKER_BOX, MaterialColor.ORANGE)));
    public static final Block MAGENTA_SHULKER_BOX = Blocks.register("magenta_shulker_box", Blocks.createShulkerBoxBlock(DyeColor.MAGENTA, AbstractBlock.Settings.of(Material.SHULKER_BOX, MaterialColor.MAGENTA)));
    public static final Block LIGHT_BLUE_SHULKER_BOX = Blocks.register("light_blue_shulker_box", Blocks.createShulkerBoxBlock(DyeColor.LIGHT_BLUE, AbstractBlock.Settings.of(Material.SHULKER_BOX, MaterialColor.LIGHT_BLUE)));
    public static final Block YELLOW_SHULKER_BOX = Blocks.register("yellow_shulker_box", Blocks.createShulkerBoxBlock(DyeColor.YELLOW, AbstractBlock.Settings.of(Material.SHULKER_BOX, MaterialColor.YELLOW)));
    public static final Block LIME_SHULKER_BOX = Blocks.register("lime_shulker_box", Blocks.createShulkerBoxBlock(DyeColor.LIME, AbstractBlock.Settings.of(Material.SHULKER_BOX, MaterialColor.LIME)));
    public static final Block PINK_SHULKER_BOX = Blocks.register("pink_shulker_box", Blocks.createShulkerBoxBlock(DyeColor.PINK, AbstractBlock.Settings.of(Material.SHULKER_BOX, MaterialColor.PINK)));
    public static final Block GRAY_SHULKER_BOX = Blocks.register("gray_shulker_box", Blocks.createShulkerBoxBlock(DyeColor.GRAY, AbstractBlock.Settings.of(Material.SHULKER_BOX, MaterialColor.GRAY)));
    public static final Block LIGHT_GRAY_SHULKER_BOX = Blocks.register("light_gray_shulker_box", Blocks.createShulkerBoxBlock(DyeColor.LIGHT_GRAY, AbstractBlock.Settings.of(Material.SHULKER_BOX, MaterialColor.LIGHT_GRAY)));
    public static final Block CYAN_SHULKER_BOX = Blocks.register("cyan_shulker_box", Blocks.createShulkerBoxBlock(DyeColor.CYAN, AbstractBlock.Settings.of(Material.SHULKER_BOX, MaterialColor.CYAN)));
    public static final Block PURPLE_SHULKER_BOX = Blocks.register("purple_shulker_box", Blocks.createShulkerBoxBlock(DyeColor.PURPLE, AbstractBlock.Settings.of(Material.SHULKER_BOX, MaterialColor.PURPLE_TERRACOTTA)));
    public static final Block BLUE_SHULKER_BOX = Blocks.register("blue_shulker_box", Blocks.createShulkerBoxBlock(DyeColor.BLUE, AbstractBlock.Settings.of(Material.SHULKER_BOX, MaterialColor.BLUE)));
    public static final Block BROWN_SHULKER_BOX = Blocks.register("brown_shulker_box", Blocks.createShulkerBoxBlock(DyeColor.BROWN, AbstractBlock.Settings.of(Material.SHULKER_BOX, MaterialColor.BROWN)));
    public static final Block GREEN_SHULKER_BOX = Blocks.register("green_shulker_box", Blocks.createShulkerBoxBlock(DyeColor.GREEN, AbstractBlock.Settings.of(Material.SHULKER_BOX, MaterialColor.GREEN)));
    public static final Block RED_SHULKER_BOX = Blocks.register("red_shulker_box", Blocks.createShulkerBoxBlock(DyeColor.RED, AbstractBlock.Settings.of(Material.SHULKER_BOX, MaterialColor.RED)));
    public static final Block BLACK_SHULKER_BOX = Blocks.register("black_shulker_box", Blocks.createShulkerBoxBlock(DyeColor.BLACK, AbstractBlock.Settings.of(Material.SHULKER_BOX, MaterialColor.BLACK)));
    public static final Block WHITE_GLAZED_TERRACOTTA = Blocks.register("white_glazed_terracotta", new GlazedTerracottaBlock(AbstractBlock.Settings.of(Material.STONE, DyeColor.WHITE).strength(1.4f)));
    public static final Block ORANGE_GLAZED_TERRACOTTA = Blocks.register("orange_glazed_terracotta", new GlazedTerracottaBlock(AbstractBlock.Settings.of(Material.STONE, DyeColor.ORANGE).strength(1.4f)));
    public static final Block MAGENTA_GLAZED_TERRACOTTA = Blocks.register("magenta_glazed_terracotta", new GlazedTerracottaBlock(AbstractBlock.Settings.of(Material.STONE, DyeColor.MAGENTA).strength(1.4f)));
    public static final Block LIGHT_BLUE_GLAZED_TERRACOTTA = Blocks.register("light_blue_glazed_terracotta", new GlazedTerracottaBlock(AbstractBlock.Settings.of(Material.STONE, DyeColor.LIGHT_BLUE).strength(1.4f)));
    public static final Block YELLOW_GLAZED_TERRACOTTA = Blocks.register("yellow_glazed_terracotta", new GlazedTerracottaBlock(AbstractBlock.Settings.of(Material.STONE, DyeColor.YELLOW).strength(1.4f)));
    public static final Block LIME_GLAZED_TERRACOTTA = Blocks.register("lime_glazed_terracotta", new GlazedTerracottaBlock(AbstractBlock.Settings.of(Material.STONE, DyeColor.LIME).strength(1.4f)));
    public static final Block PINK_GLAZED_TERRACOTTA = Blocks.register("pink_glazed_terracotta", new GlazedTerracottaBlock(AbstractBlock.Settings.of(Material.STONE, DyeColor.PINK).strength(1.4f)));
    public static final Block GRAY_GLAZED_TERRACOTTA = Blocks.register("gray_glazed_terracotta", new GlazedTerracottaBlock(AbstractBlock.Settings.of(Material.STONE, DyeColor.GRAY).strength(1.4f)));
    public static final Block LIGHT_GRAY_GLAZED_TERRACOTTA = Blocks.register("light_gray_glazed_terracotta", new GlazedTerracottaBlock(AbstractBlock.Settings.of(Material.STONE, DyeColor.LIGHT_GRAY).strength(1.4f)));
    public static final Block CYAN_GLAZED_TERRACOTTA = Blocks.register("cyan_glazed_terracotta", new GlazedTerracottaBlock(AbstractBlock.Settings.of(Material.STONE, DyeColor.CYAN).strength(1.4f)));
    public static final Block PURPLE_GLAZED_TERRACOTTA = Blocks.register("purple_glazed_terracotta", new GlazedTerracottaBlock(AbstractBlock.Settings.of(Material.STONE, DyeColor.PURPLE).strength(1.4f)));
    public static final Block BLUE_GLAZED_TERRACOTTA = Blocks.register("blue_glazed_terracotta", new GlazedTerracottaBlock(AbstractBlock.Settings.of(Material.STONE, DyeColor.BLUE).strength(1.4f)));
    public static final Block BROWN_GLAZED_TERRACOTTA = Blocks.register("brown_glazed_terracotta", new GlazedTerracottaBlock(AbstractBlock.Settings.of(Material.STONE, DyeColor.BROWN).strength(1.4f)));
    public static final Block GREEN_GLAZED_TERRACOTTA = Blocks.register("green_glazed_terracotta", new GlazedTerracottaBlock(AbstractBlock.Settings.of(Material.STONE, DyeColor.GREEN).strength(1.4f)));
    public static final Block RED_GLAZED_TERRACOTTA = Blocks.register("red_glazed_terracotta", new GlazedTerracottaBlock(AbstractBlock.Settings.of(Material.STONE, DyeColor.RED).strength(1.4f)));
    public static final Block BLACK_GLAZED_TERRACOTTA = Blocks.register("black_glazed_terracotta", new GlazedTerracottaBlock(AbstractBlock.Settings.of(Material.STONE, DyeColor.BLACK).strength(1.4f)));
    public static final Block WHITE_CONCRETE = Blocks.register("white_concrete", new Block(AbstractBlock.Settings.of(Material.STONE, DyeColor.WHITE).strength(1.8f)));
    public static final Block ORANGE_CONCRETE = Blocks.register("orange_concrete", new Block(AbstractBlock.Settings.of(Material.STONE, DyeColor.ORANGE).strength(1.8f)));
    public static final Block MAGENTA_CONCRETE = Blocks.register("magenta_concrete", new Block(AbstractBlock.Settings.of(Material.STONE, DyeColor.MAGENTA).strength(1.8f)));
    public static final Block LIGHT_BLUE_CONCRETE = Blocks.register("light_blue_concrete", new Block(AbstractBlock.Settings.of(Material.STONE, DyeColor.LIGHT_BLUE).strength(1.8f)));
    public static final Block YELLOW_CONCRETE = Blocks.register("yellow_concrete", new Block(AbstractBlock.Settings.of(Material.STONE, DyeColor.YELLOW).strength(1.8f)));
    public static final Block LIME_CONCRETE = Blocks.register("lime_concrete", new Block(AbstractBlock.Settings.of(Material.STONE, DyeColor.LIME).strength(1.8f)));
    public static final Block PINK_CONCRETE = Blocks.register("pink_concrete", new Block(AbstractBlock.Settings.of(Material.STONE, DyeColor.PINK).strength(1.8f)));
    public static final Block GRAY_CONCRETE = Blocks.register("gray_concrete", new Block(AbstractBlock.Settings.of(Material.STONE, DyeColor.GRAY).strength(1.8f)));
    public static final Block LIGHT_GRAY_CONCRETE = Blocks.register("light_gray_concrete", new Block(AbstractBlock.Settings.of(Material.STONE, DyeColor.LIGHT_GRAY).strength(1.8f)));
    public static final Block CYAN_CONCRETE = Blocks.register("cyan_concrete", new Block(AbstractBlock.Settings.of(Material.STONE, DyeColor.CYAN).strength(1.8f)));
    public static final Block PURPLE_CONCRETE = Blocks.register("purple_concrete", new Block(AbstractBlock.Settings.of(Material.STONE, DyeColor.PURPLE).strength(1.8f)));
    public static final Block BLUE_CONCRETE = Blocks.register("blue_concrete", new Block(AbstractBlock.Settings.of(Material.STONE, DyeColor.BLUE).strength(1.8f)));
    public static final Block BROWN_CONCRETE = Blocks.register("brown_concrete", new Block(AbstractBlock.Settings.of(Material.STONE, DyeColor.BROWN).strength(1.8f)));
    public static final Block GREEN_CONCRETE = Blocks.register("green_concrete", new Block(AbstractBlock.Settings.of(Material.STONE, DyeColor.GREEN).strength(1.8f)));
    public static final Block RED_CONCRETE = Blocks.register("red_concrete", new Block(AbstractBlock.Settings.of(Material.STONE, DyeColor.RED).strength(1.8f)));
    public static final Block BLACK_CONCRETE = Blocks.register("black_concrete", new Block(AbstractBlock.Settings.of(Material.STONE, DyeColor.BLACK).strength(1.8f)));
    public static final Block WHITE_CONCRETE_POWDER = Blocks.register("white_concrete_powder", new ConcretePowderBlock(WHITE_CONCRETE, AbstractBlock.Settings.of(Material.SAND, DyeColor.WHITE).strength(0.5f).sounds(BlockSoundGroup.SAND)));
    public static final Block ORANGE_CONCRETE_POWDER = Blocks.register("orange_concrete_powder", new ConcretePowderBlock(ORANGE_CONCRETE, AbstractBlock.Settings.of(Material.SAND, DyeColor.ORANGE).strength(0.5f).sounds(BlockSoundGroup.SAND)));
    public static final Block MAGENTA_CONCRETE_POWDER = Blocks.register("magenta_concrete_powder", new ConcretePowderBlock(MAGENTA_CONCRETE, AbstractBlock.Settings.of(Material.SAND, DyeColor.MAGENTA).strength(0.5f).sounds(BlockSoundGroup.SAND)));
    public static final Block LIGHT_BLUE_CONCRETE_POWDER = Blocks.register("light_blue_concrete_powder", new ConcretePowderBlock(LIGHT_BLUE_CONCRETE, AbstractBlock.Settings.of(Material.SAND, DyeColor.LIGHT_BLUE).strength(0.5f).sounds(BlockSoundGroup.SAND)));
    public static final Block YELLOW_CONCRETE_POWDER = Blocks.register("yellow_concrete_powder", new ConcretePowderBlock(YELLOW_CONCRETE, AbstractBlock.Settings.of(Material.SAND, DyeColor.YELLOW).strength(0.5f).sounds(BlockSoundGroup.SAND)));
    public static final Block LIME_CONCRETE_POWDER = Blocks.register("lime_concrete_powder", new ConcretePowderBlock(LIME_CONCRETE, AbstractBlock.Settings.of(Material.SAND, DyeColor.LIME).strength(0.5f).sounds(BlockSoundGroup.SAND)));
    public static final Block PINK_CONCRETE_POWDER = Blocks.register("pink_concrete_powder", new ConcretePowderBlock(PINK_CONCRETE, AbstractBlock.Settings.of(Material.SAND, DyeColor.PINK).strength(0.5f).sounds(BlockSoundGroup.SAND)));
    public static final Block GRAY_CONCRETE_POWDER = Blocks.register("gray_concrete_powder", new ConcretePowderBlock(GRAY_CONCRETE, AbstractBlock.Settings.of(Material.SAND, DyeColor.GRAY).strength(0.5f).sounds(BlockSoundGroup.SAND)));
    public static final Block LIGHT_GRAY_CONCRETE_POWDER = Blocks.register("light_gray_concrete_powder", new ConcretePowderBlock(LIGHT_GRAY_CONCRETE, AbstractBlock.Settings.of(Material.SAND, DyeColor.LIGHT_GRAY).strength(0.5f).sounds(BlockSoundGroup.SAND)));
    public static final Block CYAN_CONCRETE_POWDER = Blocks.register("cyan_concrete_powder", new ConcretePowderBlock(CYAN_CONCRETE, AbstractBlock.Settings.of(Material.SAND, DyeColor.CYAN).strength(0.5f).sounds(BlockSoundGroup.SAND)));
    public static final Block PURPLE_CONCRETE_POWDER = Blocks.register("purple_concrete_powder", new ConcretePowderBlock(PURPLE_CONCRETE, AbstractBlock.Settings.of(Material.SAND, DyeColor.PURPLE).strength(0.5f).sounds(BlockSoundGroup.SAND)));
    public static final Block BLUE_CONCRETE_POWDER = Blocks.register("blue_concrete_powder", new ConcretePowderBlock(BLUE_CONCRETE, AbstractBlock.Settings.of(Material.SAND, DyeColor.BLUE).strength(0.5f).sounds(BlockSoundGroup.SAND)));
    public static final Block BROWN_CONCRETE_POWDER = Blocks.register("brown_concrete_powder", new ConcretePowderBlock(BROWN_CONCRETE, AbstractBlock.Settings.of(Material.SAND, DyeColor.BROWN).strength(0.5f).sounds(BlockSoundGroup.SAND)));
    public static final Block GREEN_CONCRETE_POWDER = Blocks.register("green_concrete_powder", new ConcretePowderBlock(GREEN_CONCRETE, AbstractBlock.Settings.of(Material.SAND, DyeColor.GREEN).strength(0.5f).sounds(BlockSoundGroup.SAND)));
    public static final Block RED_CONCRETE_POWDER = Blocks.register("red_concrete_powder", new ConcretePowderBlock(RED_CONCRETE, AbstractBlock.Settings.of(Material.SAND, DyeColor.RED).strength(0.5f).sounds(BlockSoundGroup.SAND)));
    public static final Block BLACK_CONCRETE_POWDER = Blocks.register("black_concrete_powder", new ConcretePowderBlock(BLACK_CONCRETE, AbstractBlock.Settings.of(Material.SAND, DyeColor.BLACK).strength(0.5f).sounds(BlockSoundGroup.SAND)));
    public static final Block KELP = Blocks.register("kelp", new KelpBlock(AbstractBlock.Settings.of(Material.UNDERWATER_PLANT).noCollision().ticksRandomly().breakInstantly().sounds(BlockSoundGroup.WET_GRASS)));
    public static final Block KELP_PLANT = Blocks.register("kelp_plant", new KelpPlantBlock(AbstractBlock.Settings.of(Material.UNDERWATER_PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.WET_GRASS)));
    public static final Block DRIED_KELP_BLOCK = Blocks.register("dried_kelp_block", new Block(AbstractBlock.Settings.of(Material.ORGANIC, MaterialColor.GREEN).strength(0.5f, 2.5f).sounds(BlockSoundGroup.GRASS)));
    public static final Block TURTLE_EGG = Blocks.register("turtle_egg", new TurtleEggBlock(AbstractBlock.Settings.of(Material.EGG, MaterialColor.SAND).strength(0.5f).sounds(BlockSoundGroup.METAL).ticksRandomly().nonOpaque()));
    public static final Block DEAD_TUBE_CORAL_BLOCK = Blocks.register("dead_tube_coral_block", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.GRAY).strength(1.5f, 6.0f)));
    public static final Block DEAD_BRAIN_CORAL_BLOCK = Blocks.register("dead_brain_coral_block", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.GRAY).strength(1.5f, 6.0f)));
    public static final Block DEAD_BUBBLE_CORAL_BLOCK = Blocks.register("dead_bubble_coral_block", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.GRAY).strength(1.5f, 6.0f)));
    public static final Block DEAD_FIRE_CORAL_BLOCK = Blocks.register("dead_fire_coral_block", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.GRAY).strength(1.5f, 6.0f)));
    public static final Block DEAD_HORN_CORAL_BLOCK = Blocks.register("dead_horn_coral_block", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.GRAY).strength(1.5f, 6.0f)));
    public static final Block TUBE_CORAL_BLOCK = Blocks.register("tube_coral_block", new CoralBlockBlock(DEAD_TUBE_CORAL_BLOCK, AbstractBlock.Settings.of(Material.STONE, MaterialColor.BLUE).strength(1.5f, 6.0f).sounds(BlockSoundGroup.CORAL)));
    public static final Block BRAIN_CORAL_BLOCK = Blocks.register("brain_coral_block", new CoralBlockBlock(DEAD_BRAIN_CORAL_BLOCK, AbstractBlock.Settings.of(Material.STONE, MaterialColor.PINK).strength(1.5f, 6.0f).sounds(BlockSoundGroup.CORAL)));
    public static final Block BUBBLE_CORAL_BLOCK = Blocks.register("bubble_coral_block", new CoralBlockBlock(DEAD_BUBBLE_CORAL_BLOCK, AbstractBlock.Settings.of(Material.STONE, MaterialColor.PURPLE).strength(1.5f, 6.0f).sounds(BlockSoundGroup.CORAL)));
    public static final Block FIRE_CORAL_BLOCK = Blocks.register("fire_coral_block", new CoralBlockBlock(DEAD_FIRE_CORAL_BLOCK, AbstractBlock.Settings.of(Material.STONE, MaterialColor.RED).strength(1.5f, 6.0f).sounds(BlockSoundGroup.CORAL)));
    public static final Block HORN_CORAL_BLOCK = Blocks.register("horn_coral_block", new CoralBlockBlock(DEAD_HORN_CORAL_BLOCK, AbstractBlock.Settings.of(Material.STONE, MaterialColor.YELLOW).strength(1.5f, 6.0f).sounds(BlockSoundGroup.CORAL)));
    public static final Block DEAD_TUBE_CORAL = Blocks.register("dead_tube_coral", new DeadCoralBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.GRAY).noCollision().breakInstantly()));
    public static final Block DEAD_BRAIN_CORAL = Blocks.register("dead_brain_coral", new DeadCoralBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.GRAY).noCollision().breakInstantly()));
    public static final Block DEAD_BUBBLE_CORAL = Blocks.register("dead_bubble_coral", new DeadCoralBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.GRAY).noCollision().breakInstantly()));
    public static final Block DEAD_FIRE_CORAL = Blocks.register("dead_fire_coral", new DeadCoralBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.GRAY).noCollision().breakInstantly()));
    public static final Block DEAD_HORN_CORAL = Blocks.register("dead_horn_coral", new DeadCoralBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.GRAY).noCollision().breakInstantly()));
    public static final Block TUBE_CORAL = Blocks.register("tube_coral", new CoralBlock(DEAD_TUBE_CORAL, AbstractBlock.Settings.of(Material.UNDERWATER_PLANT, MaterialColor.BLUE).noCollision().breakInstantly().sounds(BlockSoundGroup.WET_GRASS)));
    public static final Block BRAIN_CORAL = Blocks.register("brain_coral", new CoralBlock(DEAD_BRAIN_CORAL, AbstractBlock.Settings.of(Material.UNDERWATER_PLANT, MaterialColor.PINK).noCollision().breakInstantly().sounds(BlockSoundGroup.WET_GRASS)));
    public static final Block BUBBLE_CORAL = Blocks.register("bubble_coral", new CoralBlock(DEAD_BUBBLE_CORAL, AbstractBlock.Settings.of(Material.UNDERWATER_PLANT, MaterialColor.PURPLE).noCollision().breakInstantly().sounds(BlockSoundGroup.WET_GRASS)));
    public static final Block FIRE_CORAL = Blocks.register("fire_coral", new CoralBlock(DEAD_FIRE_CORAL, AbstractBlock.Settings.of(Material.UNDERWATER_PLANT, MaterialColor.RED).noCollision().breakInstantly().sounds(BlockSoundGroup.WET_GRASS)));
    public static final Block HORN_CORAL = Blocks.register("horn_coral", new CoralBlock(DEAD_HORN_CORAL, AbstractBlock.Settings.of(Material.UNDERWATER_PLANT, MaterialColor.YELLOW).noCollision().breakInstantly().sounds(BlockSoundGroup.WET_GRASS)));
    public static final Block DEAD_TUBE_CORAL_FAN = Blocks.register("dead_tube_coral_fan", new DeadCoralFanBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.GRAY).noCollision().breakInstantly()));
    public static final Block DEAD_BRAIN_CORAL_FAN = Blocks.register("dead_brain_coral_fan", new DeadCoralFanBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.GRAY).noCollision().breakInstantly()));
    public static final Block DEAD_BUBBLE_CORAL_FAN = Blocks.register("dead_bubble_coral_fan", new DeadCoralFanBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.GRAY).noCollision().breakInstantly()));
    public static final Block DEAD_FIRE_CORAL_FAN = Blocks.register("dead_fire_coral_fan", new DeadCoralFanBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.GRAY).noCollision().breakInstantly()));
    public static final Block DEAD_HORN_CORAL_FAN = Blocks.register("dead_horn_coral_fan", new DeadCoralFanBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.GRAY).noCollision().breakInstantly()));
    public static final Block TUBE_CORAL_FAN = Blocks.register("tube_coral_fan", new CoralFanBlock(DEAD_TUBE_CORAL_FAN, AbstractBlock.Settings.of(Material.UNDERWATER_PLANT, MaterialColor.BLUE).noCollision().breakInstantly().sounds(BlockSoundGroup.WET_GRASS)));
    public static final Block BRAIN_CORAL_FAN = Blocks.register("brain_coral_fan", new CoralFanBlock(DEAD_BRAIN_CORAL_FAN, AbstractBlock.Settings.of(Material.UNDERWATER_PLANT, MaterialColor.PINK).noCollision().breakInstantly().sounds(BlockSoundGroup.WET_GRASS)));
    public static final Block BUBBLE_CORAL_FAN = Blocks.register("bubble_coral_fan", new CoralFanBlock(DEAD_BUBBLE_CORAL_FAN, AbstractBlock.Settings.of(Material.UNDERWATER_PLANT, MaterialColor.PURPLE).noCollision().breakInstantly().sounds(BlockSoundGroup.WET_GRASS)));
    public static final Block FIRE_CORAL_FAN = Blocks.register("fire_coral_fan", new CoralFanBlock(DEAD_FIRE_CORAL_FAN, AbstractBlock.Settings.of(Material.UNDERWATER_PLANT, MaterialColor.RED).noCollision().breakInstantly().sounds(BlockSoundGroup.WET_GRASS)));
    public static final Block HORN_CORAL_FAN = Blocks.register("horn_coral_fan", new CoralFanBlock(DEAD_HORN_CORAL_FAN, AbstractBlock.Settings.of(Material.UNDERWATER_PLANT, MaterialColor.YELLOW).noCollision().breakInstantly().sounds(BlockSoundGroup.WET_GRASS)));
    public static final Block DEAD_TUBE_CORAL_WALL_FAN = Blocks.register("dead_tube_coral_wall_fan", new DeadCoralWallFanBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.GRAY).noCollision().breakInstantly().dropsLike(DEAD_TUBE_CORAL_FAN)));
    public static final Block DEAD_BRAIN_CORAL_WALL_FAN = Blocks.register("dead_brain_coral_wall_fan", new DeadCoralWallFanBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.GRAY).noCollision().breakInstantly().dropsLike(DEAD_BRAIN_CORAL_FAN)));
    public static final Block DEAD_BUBBLE_CORAL_WALL_FAN = Blocks.register("dead_bubble_coral_wall_fan", new DeadCoralWallFanBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.GRAY).noCollision().breakInstantly().dropsLike(DEAD_BUBBLE_CORAL_FAN)));
    public static final Block DEAD_FIRE_CORAL_WALL_FAN = Blocks.register("dead_fire_coral_wall_fan", new DeadCoralWallFanBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.GRAY).noCollision().breakInstantly().dropsLike(DEAD_FIRE_CORAL_FAN)));
    public static final Block DEAD_HORN_CORAL_WALL_FAN = Blocks.register("dead_horn_coral_wall_fan", new DeadCoralWallFanBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.GRAY).noCollision().breakInstantly().dropsLike(DEAD_HORN_CORAL_FAN)));
    public static final Block TUBE_CORAL_WALL_FAN = Blocks.register("tube_coral_wall_fan", new CoralWallFanBlock(DEAD_TUBE_CORAL_WALL_FAN, AbstractBlock.Settings.of(Material.UNDERWATER_PLANT, MaterialColor.BLUE).noCollision().breakInstantly().sounds(BlockSoundGroup.WET_GRASS).dropsLike(TUBE_CORAL_FAN)));
    public static final Block BRAIN_CORAL_WALL_FAN = Blocks.register("brain_coral_wall_fan", new CoralWallFanBlock(DEAD_BRAIN_CORAL_WALL_FAN, AbstractBlock.Settings.of(Material.UNDERWATER_PLANT, MaterialColor.PINK).noCollision().breakInstantly().sounds(BlockSoundGroup.WET_GRASS).dropsLike(BRAIN_CORAL_FAN)));
    public static final Block BUBBLE_CORAL_WALL_FAN = Blocks.register("bubble_coral_wall_fan", new CoralWallFanBlock(DEAD_BUBBLE_CORAL_WALL_FAN, AbstractBlock.Settings.of(Material.UNDERWATER_PLANT, MaterialColor.PURPLE).noCollision().breakInstantly().sounds(BlockSoundGroup.WET_GRASS).dropsLike(BUBBLE_CORAL_FAN)));
    public static final Block FIRE_CORAL_WALL_FAN = Blocks.register("fire_coral_wall_fan", new CoralWallFanBlock(DEAD_FIRE_CORAL_WALL_FAN, AbstractBlock.Settings.of(Material.UNDERWATER_PLANT, MaterialColor.RED).noCollision().breakInstantly().sounds(BlockSoundGroup.WET_GRASS).dropsLike(FIRE_CORAL_FAN)));
    public static final Block HORN_CORAL_WALL_FAN = Blocks.register("horn_coral_wall_fan", new CoralWallFanBlock(DEAD_HORN_CORAL_WALL_FAN, AbstractBlock.Settings.of(Material.UNDERWATER_PLANT, MaterialColor.YELLOW).noCollision().breakInstantly().sounds(BlockSoundGroup.WET_GRASS).dropsLike(HORN_CORAL_FAN)));
    public static final Block SEA_PICKLE = Blocks.register("sea_pickle", new SeaPickleBlock(AbstractBlock.Settings.of(Material.UNDERWATER_PLANT, MaterialColor.GREEN).lightLevel(arg -> SeaPickleBlock.isDry(arg) ? 0 : 3 + 3 * arg.get(SeaPickleBlock.PICKLES)).sounds(BlockSoundGroup.SLIME).nonOpaque()));
    public static final Block BLUE_ICE = Blocks.register("blue_ice", new TransparentBlock(AbstractBlock.Settings.of(Material.PACKED_ICE).strength(2.8f).slipperiness(0.989f).sounds(BlockSoundGroup.GLASS)));
    public static final Block CONDUIT = Blocks.register("conduit", new ConduitBlock(AbstractBlock.Settings.of(Material.GLASS, MaterialColor.DIAMOND).strength(3.0f).lightLevel(arg -> 15).nonOpaque()));
    public static final Block BAMBOO_SAPLING = Blocks.register("bamboo_sapling", new BambooSaplingBlock(AbstractBlock.Settings.of(Material.BAMBOO_SAPLING).ticksRandomly().breakInstantly().noCollision().strength(1.0f).sounds(BlockSoundGroup.BAMBOO_SAPLING)));
    public static final Block BAMBOO = Blocks.register("bamboo", new BambooBlock(AbstractBlock.Settings.of(Material.BAMBOO, MaterialColor.FOLIAGE).ticksRandomly().breakInstantly().strength(1.0f).sounds(BlockSoundGroup.BAMBOO).nonOpaque()));
    public static final Block POTTED_BAMBOO = Blocks.register("potted_bamboo", new FlowerPotBlock(BAMBOO, AbstractBlock.Settings.of(Material.PART).breakInstantly().nonOpaque()));
    public static final Block VOID_AIR = Blocks.register("void_air", new AirBlock(AbstractBlock.Settings.of(Material.AIR).noCollision().dropsNothing().air()));
    public static final Block CAVE_AIR = Blocks.register("cave_air", new AirBlock(AbstractBlock.Settings.of(Material.AIR).noCollision().dropsNothing().air()));
    public static final Block BUBBLE_COLUMN = Blocks.register("bubble_column", new BubbleColumnBlock(AbstractBlock.Settings.of(Material.BUBBLE_COLUMN).noCollision().dropsNothing()));
    public static final Block POLISHED_GRANITE_STAIRS = Blocks.register("polished_granite_stairs", new StairsBlock(POLISHED_GRANITE.getDefaultState(), AbstractBlock.Settings.copy(POLISHED_GRANITE)));
    public static final Block SMOOTH_RED_SANDSTONE_STAIRS = Blocks.register("smooth_red_sandstone_stairs", new StairsBlock(SMOOTH_RED_SANDSTONE.getDefaultState(), AbstractBlock.Settings.copy(SMOOTH_RED_SANDSTONE)));
    public static final Block MOSSY_STONE_BRICK_STAIRS = Blocks.register("mossy_stone_brick_stairs", new StairsBlock(MOSSY_STONE_BRICKS.getDefaultState(), AbstractBlock.Settings.copy(MOSSY_STONE_BRICKS)));
    public static final Block POLISHED_DIORITE_STAIRS = Blocks.register("polished_diorite_stairs", new StairsBlock(POLISHED_DIORITE.getDefaultState(), AbstractBlock.Settings.copy(POLISHED_DIORITE)));
    public static final Block MOSSY_COBBLESTONE_STAIRS = Blocks.register("mossy_cobblestone_stairs", new StairsBlock(MOSSY_COBBLESTONE.getDefaultState(), AbstractBlock.Settings.copy(MOSSY_COBBLESTONE)));
    public static final Block END_STONE_BRICK_STAIRS = Blocks.register("end_stone_brick_stairs", new StairsBlock(END_STONE_BRICKS.getDefaultState(), AbstractBlock.Settings.copy(END_STONE_BRICKS)));
    public static final Block STONE_STAIRS = Blocks.register("stone_stairs", new StairsBlock(STONE.getDefaultState(), AbstractBlock.Settings.copy(STONE)));
    public static final Block SMOOTH_SANDSTONE_STAIRS = Blocks.register("smooth_sandstone_stairs", new StairsBlock(SMOOTH_SANDSTONE.getDefaultState(), AbstractBlock.Settings.copy(SMOOTH_SANDSTONE)));
    public static final Block SMOOTH_QUARTZ_STAIRS = Blocks.register("smooth_quartz_stairs", new StairsBlock(SMOOTH_QUARTZ.getDefaultState(), AbstractBlock.Settings.copy(SMOOTH_QUARTZ)));
    public static final Block GRANITE_STAIRS = Blocks.register("granite_stairs", new StairsBlock(GRANITE.getDefaultState(), AbstractBlock.Settings.copy(GRANITE)));
    public static final Block ANDESITE_STAIRS = Blocks.register("andesite_stairs", new StairsBlock(ANDESITE.getDefaultState(), AbstractBlock.Settings.copy(ANDESITE)));
    public static final Block RED_NETHER_BRICK_STAIRS = Blocks.register("red_nether_brick_stairs", new StairsBlock(RED_NETHER_BRICKS.getDefaultState(), AbstractBlock.Settings.copy(RED_NETHER_BRICKS)));
    public static final Block POLISHED_ANDESITE_STAIRS = Blocks.register("polished_andesite_stairs", new StairsBlock(POLISHED_ANDESITE.getDefaultState(), AbstractBlock.Settings.copy(POLISHED_ANDESITE)));
    public static final Block DIORITE_STAIRS = Blocks.register("diorite_stairs", new StairsBlock(DIORITE.getDefaultState(), AbstractBlock.Settings.copy(DIORITE)));
    public static final Block POLISHED_GRANITE_SLAB = Blocks.register("polished_granite_slab", new SlabBlock(AbstractBlock.Settings.copy(POLISHED_GRANITE)));
    public static final Block SMOOTH_RED_SANDSTONE_SLAB = Blocks.register("smooth_red_sandstone_slab", new SlabBlock(AbstractBlock.Settings.copy(SMOOTH_RED_SANDSTONE)));
    public static final Block MOSSY_STONE_BRICK_SLAB = Blocks.register("mossy_stone_brick_slab", new SlabBlock(AbstractBlock.Settings.copy(MOSSY_STONE_BRICKS)));
    public static final Block POLISHED_DIORITE_SLAB = Blocks.register("polished_diorite_slab", new SlabBlock(AbstractBlock.Settings.copy(POLISHED_DIORITE)));
    public static final Block MOSSY_COBBLESTONE_SLAB = Blocks.register("mossy_cobblestone_slab", new SlabBlock(AbstractBlock.Settings.copy(MOSSY_COBBLESTONE)));
    public static final Block END_STONE_BRICK_SLAB = Blocks.register("end_stone_brick_slab", new SlabBlock(AbstractBlock.Settings.copy(END_STONE_BRICKS)));
    public static final Block SMOOTH_SANDSTONE_SLAB = Blocks.register("smooth_sandstone_slab", new SlabBlock(AbstractBlock.Settings.copy(SMOOTH_SANDSTONE)));
    public static final Block SMOOTH_QUARTZ_SLAB = Blocks.register("smooth_quartz_slab", new SlabBlock(AbstractBlock.Settings.copy(SMOOTH_QUARTZ)));
    public static final Block GRANITE_SLAB = Blocks.register("granite_slab", new SlabBlock(AbstractBlock.Settings.copy(GRANITE)));
    public static final Block ANDESITE_SLAB = Blocks.register("andesite_slab", new SlabBlock(AbstractBlock.Settings.copy(ANDESITE)));
    public static final Block RED_NETHER_BRICK_SLAB = Blocks.register("red_nether_brick_slab", new SlabBlock(AbstractBlock.Settings.copy(RED_NETHER_BRICKS)));
    public static final Block POLISHED_ANDESITE_SLAB = Blocks.register("polished_andesite_slab", new SlabBlock(AbstractBlock.Settings.copy(POLISHED_ANDESITE)));
    public static final Block DIORITE_SLAB = Blocks.register("diorite_slab", new SlabBlock(AbstractBlock.Settings.copy(DIORITE)));
    public static final Block BRICK_WALL = Blocks.register("brick_wall", new WallBlock(AbstractBlock.Settings.copy(BRICKS)));
    public static final Block PRISMARINE_WALL = Blocks.register("prismarine_wall", new WallBlock(AbstractBlock.Settings.copy(PRISMARINE)));
    public static final Block RED_SANDSTONE_WALL = Blocks.register("red_sandstone_wall", new WallBlock(AbstractBlock.Settings.copy(RED_SANDSTONE)));
    public static final Block MOSSY_STONE_BRICK_WALL = Blocks.register("mossy_stone_brick_wall", new WallBlock(AbstractBlock.Settings.copy(MOSSY_STONE_BRICKS)));
    public static final Block GRANITE_WALL = Blocks.register("granite_wall", new WallBlock(AbstractBlock.Settings.copy(GRANITE)));
    public static final Block STONE_BRICK_WALL = Blocks.register("stone_brick_wall", new WallBlock(AbstractBlock.Settings.copy(STONE_BRICKS)));
    public static final Block NETHER_BRICK_WALL = Blocks.register("nether_brick_wall", new WallBlock(AbstractBlock.Settings.copy(NETHER_BRICKS)));
    public static final Block ANDESITE_WALL = Blocks.register("andesite_wall", new WallBlock(AbstractBlock.Settings.copy(ANDESITE)));
    public static final Block RED_NETHER_BRICK_WALL = Blocks.register("red_nether_brick_wall", new WallBlock(AbstractBlock.Settings.copy(RED_NETHER_BRICKS)));
    public static final Block SANDSTONE_WALL = Blocks.register("sandstone_wall", new WallBlock(AbstractBlock.Settings.copy(SANDSTONE)));
    public static final Block END_STONE_BRICK_WALL = Blocks.register("end_stone_brick_wall", new WallBlock(AbstractBlock.Settings.copy(END_STONE_BRICKS)));
    public static final Block DIORITE_WALL = Blocks.register("diorite_wall", new WallBlock(AbstractBlock.Settings.copy(DIORITE)));
    public static final Block SCAFFOLDING = Blocks.register("scaffolding", new ScaffoldingBlock(AbstractBlock.Settings.of(Material.PART, MaterialColor.SAND).noCollision().sounds(BlockSoundGroup.SCAFFOLDING).dynamicBounds()));
    public static final Block LOOM = Blocks.register("loom", new LoomBlock(AbstractBlock.Settings.of(Material.WOOD).strength(2.5f).sounds(BlockSoundGroup.WOOD)));
    public static final Block BARREL = Blocks.register("barrel", new BarrelBlock(AbstractBlock.Settings.of(Material.WOOD).strength(2.5f).sounds(BlockSoundGroup.WOOD)));
    public static final Block SMOKER = Blocks.register("smoker", new SmokerBlock(AbstractBlock.Settings.of(Material.STONE).strength(3.5f).lightLevel(Blocks.createLightLevelFromBlockState(13))));
    public static final Block BLAST_FURNACE = Blocks.register("blast_furnace", new BlastFurnaceBlock(AbstractBlock.Settings.of(Material.STONE).strength(3.5f).lightLevel(Blocks.createLightLevelFromBlockState(13))));
    public static final Block CARTOGRAPHY_TABLE = Blocks.register("cartography_table", new CartographyTableBlock(AbstractBlock.Settings.of(Material.WOOD).strength(2.5f).sounds(BlockSoundGroup.WOOD)));
    public static final Block FLETCHING_TABLE = Blocks.register("fletching_table", new FletchingTableBlock(AbstractBlock.Settings.of(Material.WOOD).strength(2.5f).sounds(BlockSoundGroup.WOOD)));
    public static final Block GRINDSTONE = Blocks.register("grindstone", new GrindstoneBlock(AbstractBlock.Settings.of(Material.ANVIL, MaterialColor.IRON).strength(2.0f, 6.0f).sounds(BlockSoundGroup.STONE)));
    public static final Block LECTERN = Blocks.register("lectern", new LecternBlock(AbstractBlock.Settings.of(Material.WOOD).strength(2.5f).sounds(BlockSoundGroup.WOOD)));
    public static final Block SMITHING_TABLE = Blocks.register("smithing_table", new SmithingTableBlock(AbstractBlock.Settings.of(Material.WOOD).strength(2.5f).sounds(BlockSoundGroup.WOOD)));
    public static final Block STONECUTTER = Blocks.register("stonecutter", new StonecutterBlock(AbstractBlock.Settings.of(Material.STONE).strength(3.5f)));
    public static final Block BELL = Blocks.register("bell", new BellBlock(AbstractBlock.Settings.of(Material.METAL, MaterialColor.GOLD).strength(5.0f).sounds(BlockSoundGroup.ANVIL)));
    public static final Block LANTERN = Blocks.register("lantern", new LanternBlock(AbstractBlock.Settings.of(Material.METAL).strength(3.5f).sounds(BlockSoundGroup.LANTERN).lightLevel(arg -> 15).nonOpaque()));
    public static final Block SOUL_LANTERN = Blocks.register("soul_lantern", new LanternBlock(AbstractBlock.Settings.of(Material.METAL).strength(3.5f).sounds(BlockSoundGroup.LANTERN).lightLevel(arg -> 10).nonOpaque()));
    public static final Block CAMPFIRE = Blocks.register("campfire", new CampfireBlock(true, AbstractBlock.Settings.of(Material.WOOD, MaterialColor.SPRUCE).strength(2.0f).sounds(BlockSoundGroup.WOOD).lightLevel(Blocks.createLightLevelFromBlockState(15)).nonOpaque()));
    public static final Block SOUL_CAMPFIRE = Blocks.register("soul_campfire", new CampfireBlock(false, AbstractBlock.Settings.of(Material.WOOD, MaterialColor.SPRUCE).strength(2.0f).sounds(BlockSoundGroup.WOOD).lightLevel(Blocks.createLightLevelFromBlockState(10)).nonOpaque()));
    public static final Block SWEET_BERRY_BUSH = Blocks.register("sweet_berry_bush", new SweetBerryBushBlock(AbstractBlock.Settings.of(Material.PLANT).ticksRandomly().noCollision().sounds(BlockSoundGroup.SWEET_BERRY_BUSH)));
    public static final Block WARPED_STEM = Blocks.register("warped_stem", Blocks.createNetherStemBlock(MaterialColor.CYAN));
    public static final Block STRIPPED_WARPED_STEM = Blocks.register("stripped_warped_stem", Blocks.createNetherStemBlock(MaterialColor.CYAN));
    public static final Block WARPED_HYPHAE = Blocks.register("warped_hyphae", new PillarBlock(AbstractBlock.Settings.of(Material.NETHER_WOOD, MaterialColor.CYAN).strength(2.0f).sounds(BlockSoundGroup.NETHER_STEM)));
    public static final Block STRIPPED_WARPED_HYPHAE = Blocks.register("stripped_warped_hyphae", new PillarBlock(AbstractBlock.Settings.of(Material.NETHER_WOOD, MaterialColor.CYAN).strength(2.0f).sounds(BlockSoundGroup.NETHER_STEM)));
    public static final Block WARPED_NYLIUM = Blocks.register("warped_nylium", new NyliumBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.CYAN).strength(1.0f).sounds(BlockSoundGroup.NYLIUM).ticksRandomly()));
    public static final Block WARPED_FUNGUS = Blocks.register("warped_fungus", new FungusBlock(AbstractBlock.Settings.of(Material.PLANT).breakInstantly().noCollision().sounds(BlockSoundGroup.FUNGUS), () -> Feature.HUGE_FUNGUS.configure(HugeFungusFeatureConfig.WARPED_FUNGUS_CONFIG)));
    public static final Block WARPED_WART_BLOCK = Blocks.register("warped_wart_block", new Block(AbstractBlock.Settings.of(Material.ORGANIC, MaterialColor.CYAN).strength(1.0f).sounds(BlockSoundGroup.WART_BLOCK)));
    public static final Block WARPED_ROOTS = Blocks.register("warped_roots", new RootsBlock(AbstractBlock.Settings.of(Material.REPLACEABLE_PLANT, MaterialColor.CYAN).noCollision().breakInstantly().sounds(BlockSoundGroup.ROOTS)));
    public static final Block NETHER_SPROUTS = Blocks.register("nether_sprouts", new SproutsBlock(AbstractBlock.Settings.of(Material.REPLACEABLE_PLANT, MaterialColor.CYAN).noCollision().breakInstantly().sounds(BlockSoundGroup.NETHER_SPROUTS)));
    public static final Block CRIMSON_STEM = Blocks.register("crimson_stem", Blocks.createNetherStemBlock(MaterialColor.RED));
    public static final Block STRIPPED_CRIMSON_STEM = Blocks.register("stripped_crimson_stem", Blocks.createNetherStemBlock(MaterialColor.RED));
    public static final Block CRIMSON_HYPHAE = Blocks.register("crimson_hyphae", new PillarBlock(AbstractBlock.Settings.of(Material.NETHER_WOOD, MaterialColor.RED).strength(2.0f).sounds(BlockSoundGroup.NETHER_STEM)));
    public static final Block STRIPPED_CRIMSON_HYPHAE = Blocks.register("stripped_crimson_hyphae", new PillarBlock(AbstractBlock.Settings.of(Material.NETHER_WOOD, MaterialColor.RED).strength(2.0f).sounds(BlockSoundGroup.NETHER_STEM)));
    public static final Block CRIMSON_NYLIUM = Blocks.register("crimson_nylium", new NyliumBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.RED).strength(1.0f).sounds(BlockSoundGroup.NYLIUM).ticksRandomly()));
    public static final Block CRIMSON_FUNGUS = Blocks.register("crimson_fungus", new FungusBlock(AbstractBlock.Settings.of(Material.PLANT).breakInstantly().noCollision().sounds(BlockSoundGroup.FUNGUS), () -> Feature.HUGE_FUNGUS.configure(HugeFungusFeatureConfig.CRIMSON_FUNGUS_CONFIG)));
    public static final Block SHROOMLIGHT = Blocks.register("shroomlight", new Block(AbstractBlock.Settings.of(Material.ORGANIC, MaterialColor.RED).strength(1.0f).sounds(BlockSoundGroup.SHROOMLIGHT).lightLevel(arg -> 15)));
    public static final Block WEEPING_VINES = Blocks.register("weeping_vines", new WeepingVinesBlock(AbstractBlock.Settings.of(Material.PLANT).ticksRandomly().noCollision().breakInstantly().sounds(BlockSoundGroup.WEEPING_VINES)));
    public static final Block WEEPING_VINES_PLANT = Blocks.register("weeping_vines_plant", new WeepingVinesPlantBlock(AbstractBlock.Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.WEEPING_VINES)));
    public static final Block TWISTING_VINES = Blocks.register("twisting_vines", new TwistingVinesBlock(AbstractBlock.Settings.of(Material.PLANT).ticksRandomly().noCollision().breakInstantly().sounds(BlockSoundGroup.WEEPING_VINES)));
    public static final Block TWISTING_VINES_PLANT = Blocks.register("twisting_vines_plant", new TwistingVinesPlantBlock(AbstractBlock.Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.WEEPING_VINES)));
    public static final Block CRIMSON_ROOTS = Blocks.register("crimson_roots", new RootsBlock(AbstractBlock.Settings.of(Material.REPLACEABLE_PLANT, MaterialColor.NETHER).noCollision().breakInstantly().sounds(BlockSoundGroup.ROOTS)));
    public static final Block CRIMSON_PLANKS = Blocks.register("crimson_planks", new Block(AbstractBlock.Settings.of(Material.NETHER_WOOD, MaterialColor.NETHER).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block WARPED_PLANKS = Blocks.register("warped_planks", new Block(AbstractBlock.Settings.of(Material.NETHER_WOOD, MaterialColor.CYAN).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block CRIMSON_SLAB = Blocks.register("crimson_slab", new SlabBlock(AbstractBlock.Settings.of(Material.NETHER_WOOD, MaterialColor.NETHER).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block WARPED_SLAB = Blocks.register("warped_slab", new SlabBlock(AbstractBlock.Settings.of(Material.NETHER_WOOD, MaterialColor.CYAN).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block CRIMSON_PRESSURE_PLATE = Blocks.register("crimson_pressure_plate", new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, AbstractBlock.Settings.of(Material.NETHER_WOOD, MaterialColor.NETHER).noCollision().strength(0.5f).sounds(BlockSoundGroup.WOOD)));
    public static final Block WARPED_PRESSURE_PLATE = Blocks.register("warped_pressure_plate", new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, AbstractBlock.Settings.of(Material.NETHER_WOOD, MaterialColor.CYAN).noCollision().strength(0.5f).sounds(BlockSoundGroup.WOOD)));
    public static final Block CRIMSON_FENCE = Blocks.register("crimson_fence", new FenceBlock(AbstractBlock.Settings.of(Material.NETHER_WOOD, MaterialColor.NETHER).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block WARPED_FENCE = Blocks.register("warped_fence", new FenceBlock(AbstractBlock.Settings.of(Material.NETHER_WOOD, MaterialColor.CYAN).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block CRIMSON_TRAPDOOR = Blocks.register("crimson_trapdoor", new TrapdoorBlock(AbstractBlock.Settings.of(Material.NETHER_WOOD, MaterialColor.NETHER).strength(3.0f).sounds(BlockSoundGroup.WOOD).nonOpaque()));
    public static final Block WARPED_TRAPDOOR = Blocks.register("warped_trapdoor", new TrapdoorBlock(AbstractBlock.Settings.of(Material.NETHER_WOOD, MaterialColor.CYAN).strength(3.0f).sounds(BlockSoundGroup.WOOD).nonOpaque()));
    public static final Block CRIMSON_FENCE_GATE = Blocks.register("crimson_fence_gate", new FenceGateBlock(AbstractBlock.Settings.of(Material.NETHER_WOOD, MaterialColor.NETHER).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block WARPED_FENCE_GATE = Blocks.register("warped_fence_gate", new FenceGateBlock(AbstractBlock.Settings.of(Material.NETHER_WOOD, MaterialColor.CYAN).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
    public static final Block CRIMSON_STAIRS = Blocks.register("crimson_stairs", new StairsBlock(CRIMSON_PLANKS.getDefaultState(), AbstractBlock.Settings.copy(CRIMSON_PLANKS)));
    public static final Block WARPED_STAIRS = Blocks.register("warped_stairs", new StairsBlock(WARPED_PLANKS.getDefaultState(), AbstractBlock.Settings.copy(WARPED_PLANKS)));
    public static final Block CRIMSON_BUTTON = Blocks.register("crimson_button", new WoodButtonBlock(AbstractBlock.Settings.of(Material.PART).noCollision().strength(0.5f).sounds(BlockSoundGroup.WOOD)));
    public static final Block WARPED_BUTTON = Blocks.register("warped_button", new WoodButtonBlock(AbstractBlock.Settings.of(Material.PART).noCollision().strength(0.5f).sounds(BlockSoundGroup.WOOD)));
    public static final Block CRIMSON_DOOR = Blocks.register("crimson_door", new DoorBlock(AbstractBlock.Settings.of(Material.NETHER_WOOD, CRIMSON_PLANKS.getDefaultMaterialColor()).strength(3.0f).sounds(BlockSoundGroup.WOOD).nonOpaque()));
    public static final Block WARPED_DOOR = Blocks.register("warped_door", new DoorBlock(AbstractBlock.Settings.of(Material.NETHER_WOOD, WARPED_PLANKS.getDefaultMaterialColor()).strength(3.0f).sounds(BlockSoundGroup.WOOD).nonOpaque()));
    public static final Block CRIMSON_SIGN = Blocks.register("crimson_sign", new SignBlock(AbstractBlock.Settings.of(Material.NETHER_WOOD, MaterialColor.NETHER).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD), SignType.CRIMSON));
    public static final Block WARPED_SIGN = Blocks.register("warped_sign", new SignBlock(AbstractBlock.Settings.of(Material.NETHER_WOOD, MaterialColor.CYAN).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD), SignType.WARPED));
    public static final Block CRIMSON_WALL_SIGN = Blocks.register("crimson_wall_sign", new WallSignBlock(AbstractBlock.Settings.of(Material.NETHER_WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(CRIMSON_SIGN), SignType.CRIMSON));
    public static final Block WARPED_WALL_SIGN = Blocks.register("warped_wall_sign", new WallSignBlock(AbstractBlock.Settings.of(Material.NETHER_WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(WARPED_SIGN), SignType.WARPED));
    public static final Block STRUCTURE_BLOCK = Blocks.register("structure_block", new StructureBlock(AbstractBlock.Settings.of(Material.METAL, MaterialColor.LIGHT_GRAY).strength(-1.0f, 3600000.0f).dropsNothing()));
    public static final Block JIGSAW = Blocks.register("jigsaw", new JigsawBlock(AbstractBlock.Settings.of(Material.METAL, MaterialColor.LIGHT_GRAY).strength(-1.0f, 3600000.0f).dropsNothing()));
    public static final Block COMPOSTER = Blocks.register("composter", new ComposterBlock(AbstractBlock.Settings.of(Material.WOOD).strength(0.6f).sounds(BlockSoundGroup.WOOD)));
    public static final Block TARGET = Blocks.register("target", new TargetBlock(AbstractBlock.Settings.of(Material.ORGANIC, MaterialColor.QUARTZ).strength(0.5f).sounds(BlockSoundGroup.GRASS)));
    public static final Block BEE_NEST = Blocks.register("bee_nest", new BeehiveBlock(AbstractBlock.Settings.of(Material.WOOD, MaterialColor.YELLOW).strength(0.3f).sounds(BlockSoundGroup.WOOD)));
    public static final Block BEEHIVE = Blocks.register("beehive", new BeehiveBlock(AbstractBlock.Settings.of(Material.WOOD).strength(0.6f).sounds(BlockSoundGroup.WOOD)));
    public static final Block HONEY_BLOCK = Blocks.register("honey_block", new HoneyBlock(AbstractBlock.Settings.of(Material.CLAY, MaterialColor.ORANGE).velocityMultiplier(0.4f).jumpVelocityMultiplier(0.5f).nonOpaque().sounds(BlockSoundGroup.HONEY)));
    public static final Block HONEYCOMB_BLOCK = Blocks.register("honeycomb_block", new Block(AbstractBlock.Settings.of(Material.CLAY, MaterialColor.ORANGE).strength(0.6f).sounds(BlockSoundGroup.CORAL)));
    public static final Block NETHERITE_BLOCK = Blocks.register("netherite_block", new Block(AbstractBlock.Settings.of(Material.METAL, MaterialColor.BLACK).strength(50.0f, 1200.0f).sounds(BlockSoundGroup.NETHERITE)));
    public static final Block ANCIENT_DEBRIS = Blocks.register("ancient_debris", new Block(AbstractBlock.Settings.of(Material.METAL, MaterialColor.BLACK).strength(30.0f, 1200.0f).sounds(BlockSoundGroup.ANCIENT_DEBRIS)));
    public static final Block CRYING_OBSIDIAN = Blocks.register("crying_obsidian", new CryingObsidianBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.BLACK).strength(50.0f, 1200.0f).lightLevel(arg -> 10)));
    public static final Block RESPAWN_ANCHOR = Blocks.register("respawn_anchor", new RespawnAnchorBlock(AbstractBlock.Settings.of(Material.STONE, MaterialColor.BLACK).strength(50.0f, 1200.0f).lightLevel(arg -> RespawnAnchorBlock.getLightLevel(arg, 15)).nonOpaque()));
    public static final Block POTTED_CRIMSON_FUNGUS = Blocks.register("potted_crimson_fungus", new FlowerPotBlock(CRIMSON_FUNGUS, AbstractBlock.Settings.of(Material.PART).breakInstantly().nonOpaque()));
    public static final Block POTTED_WARPED_FUNGUS = Blocks.register("potted_warped_fungus", new FlowerPotBlock(WARPED_FUNGUS, AbstractBlock.Settings.of(Material.PART).breakInstantly().nonOpaque()));
    public static final Block POTTED_CRIMSON_ROOTS = Blocks.register("potted_crimson_roots", new FlowerPotBlock(CRIMSON_ROOTS, AbstractBlock.Settings.of(Material.PART).breakInstantly().nonOpaque()));
    public static final Block POTTED_WARPED_ROOTS = Blocks.register("potted_warped_roots", new FlowerPotBlock(WARPED_ROOTS, AbstractBlock.Settings.of(Material.PART).breakInstantly().nonOpaque()));
    public static final Block LODESTONE = Blocks.register("lodestone", new Block(AbstractBlock.Settings.of(Material.ANVIL).strength(3.5f).sounds(BlockSoundGroup.LODESTONE)));
    public static final Block BLACKSTONE = Blocks.register("blackstone", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.BLACK).strength(1.5f, 6.0f)));
    public static final Block BLACKSTONE_STAIRS = Blocks.register("blackstone_stairs", new StairsBlock(BLACKSTONE.getDefaultState(), AbstractBlock.Settings.copy(BLACKSTONE)));
    public static final Block BLACKSTONE_WALL = Blocks.register("blackstone_wall", new WallBlock(AbstractBlock.Settings.copy(BLACKSTONE)));
    public static final Block BLACKSTONE_SLAB = Blocks.register("blackstone_slab", new SlabBlock(AbstractBlock.Settings.copy(BLACKSTONE).strength(2.0f, 6.0f)));
    public static final Block POLISHED_BLACKSTONE = Blocks.register("polished_blackstone", new Block(AbstractBlock.Settings.copy(BLACKSTONE).strength(2.0f, 6.0f)));
    public static final Block POLISHED_BLACKSTONE_BRICKS = Blocks.register("polished_blackstone_bricks", new Block(AbstractBlock.Settings.copy(POLISHED_BLACKSTONE).strength(1.5f, 6.0f)));
    public static final Block CRACKED_POLISHED_BLACKSTONE_BRICKS = Blocks.register("cracked_polished_blackstone_bricks", new Block(AbstractBlock.Settings.copy(POLISHED_BLACKSTONE_BRICKS)));
    public static final Block CHISELED_POLISHED_BLACKSTONE = Blocks.register("chiseled_polished_blackstone", new Block(AbstractBlock.Settings.copy(POLISHED_BLACKSTONE).strength(1.5f, 6.0f)));
    public static final Block POLISHED_BLACKSTONE_BRICK_SLAB = Blocks.register("polished_blackstone_brick_slab", new SlabBlock(AbstractBlock.Settings.copy(POLISHED_BLACKSTONE_BRICKS).strength(2.0f, 6.0f)));
    public static final Block POLISHED_BLACKSTONE_BRICK_STAIRS = Blocks.register("polished_blackstone_brick_stairs", new StairsBlock(POLISHED_BLACKSTONE_BRICKS.getDefaultState(), AbstractBlock.Settings.copy(POLISHED_BLACKSTONE_BRICKS)));
    public static final Block POLISHED_BLACKSTONE_BRICK_WALL = Blocks.register("polished_blackstone_brick_wall", new WallBlock(AbstractBlock.Settings.copy(POLISHED_BLACKSTONE_BRICKS)));
    public static final Block GILDED_BLACKSTONE = Blocks.register("gilded_blackstone", new Block(AbstractBlock.Settings.copy(BLACKSTONE).sounds(BlockSoundGroup.field_24121)));
    public static final Block POLISHED_BLACKSTONE_STAIRS = Blocks.register("polished_blackstone_stairs", new StairsBlock(POLISHED_BLACKSTONE.getDefaultState(), AbstractBlock.Settings.copy(POLISHED_BLACKSTONE)));
    public static final Block POLISHED_BLACKSTONE_SLAB = Blocks.register("polished_blackstone_slab", new SlabBlock(AbstractBlock.Settings.copy(POLISHED_BLACKSTONE)));
    public static final Block POLISHED_BLACKSTONE_PRESSURE_PLATE = Blocks.register("polished_blackstone_pressure_plate", new PressurePlateBlock(PressurePlateBlock.ActivationRule.MOBS, AbstractBlock.Settings.of(Material.STONE, MaterialColor.BLACK).noCollision().strength(0.5f)));
    public static final Block POLISHED_BLACKSTONE_BUTTON = Blocks.register("polished_blackstone_button", new StoneButtonBlock(AbstractBlock.Settings.of(Material.PART).noCollision().strength(0.5f)));
    public static final Block POLISHED_BLACKSTONE_WALL = Blocks.register("polished_blackstone_wall", new WallBlock(AbstractBlock.Settings.copy(POLISHED_BLACKSTONE)));
    public static final Block CHISELED_NETHER_BRICKS = Blocks.register("chiseled_nether_bricks", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.NETHER).strength(2.0f, 6.0f).sounds(BlockSoundGroup.NETHER_BRICK)));
    public static final Block CRACKED_NETHER_BRICKS = Blocks.register("cracked_nether_bricks", new Block(AbstractBlock.Settings.of(Material.STONE, MaterialColor.NETHER).strength(2.0f, 6.0f).sounds(BlockSoundGroup.NETHER_BRICK)));
    public static final Block QUARTZ_BRICKS = Blocks.register("quartz_bricks", new Block(AbstractBlock.Settings.copy(QUARTZ_BLOCK)));

    private static ToIntFunction<BlockState> createLightLevelFromBlockState(int i) {
        return arg -> arg.get(Properties.LIT) != false ? i : 0;
    }

    private static Boolean never(BlockState arg, BlockView arg2, BlockPos arg3, EntityType<?> arg4) {
        return false;
    }

    private static Boolean always(BlockState arg, BlockView arg2, BlockPos arg3, EntityType<?> arg4) {
        return true;
    }

    private static Boolean canSpawnOnLeaves(BlockState arg, BlockView arg2, BlockPos arg3, EntityType<?> arg4) {
        return arg4 == EntityType.OCELOT || arg4 == EntityType.PARROT;
    }

    private static BedBlock createBedBlock(DyeColor arg) {
        return new BedBlock(arg, AbstractBlock.Settings.of(Material.WOOL, arg2 -> arg2.get(BedBlock.PART) == BedPart.FOOT ? arg.getMaterialColor() : MaterialColor.WEB).sounds(BlockSoundGroup.WOOD).strength(0.2f).nonOpaque());
    }

    private static PillarBlock createLogBlock(MaterialColor arg, MaterialColor arg2) {
        return new PillarBlock(AbstractBlock.Settings.of(Material.WOOD, arg3 -> arg3.get(PillarBlock.AXIS) == Direction.Axis.Y ? arg : arg2).strength(2.0f).sounds(BlockSoundGroup.WOOD));
    }

    private static Block createNetherStemBlock(MaterialColor arg) {
        return new PillarBlock(AbstractBlock.Settings.of(Material.NETHER_WOOD, arg2 -> arg).strength(1.0f).sounds(BlockSoundGroup.NETHER_STEM));
    }

    private static boolean always(BlockState arg, BlockView arg2, BlockPos arg3) {
        return true;
    }

    private static boolean never(BlockState arg, BlockView arg2, BlockPos arg3) {
        return false;
    }

    private static StainedGlassBlock createStainedGlassBlock(DyeColor arg) {
        return new StainedGlassBlock(arg, AbstractBlock.Settings.of(Material.GLASS, arg).strength(0.3f).sounds(BlockSoundGroup.GLASS).nonOpaque().allowsSpawning(Blocks::never).solidBlock(Blocks::never).suffocates(Blocks::never).blockVision(Blocks::never));
    }

    private static LeavesBlock createLeavesBlock() {
        return new LeavesBlock(AbstractBlock.Settings.of(Material.LEAVES).strength(0.2f).ticksRandomly().sounds(BlockSoundGroup.GRASS).nonOpaque().allowsSpawning(Blocks::canSpawnOnLeaves).suffocates(Blocks::never).blockVision(Blocks::never));
    }

    private static ShulkerBoxBlock createShulkerBoxBlock(DyeColor arg4, AbstractBlock.Settings arg22) {
        AbstractBlock.ContextPredicate lv = (arg, arg2, arg3) -> {
            BlockEntity lv = arg2.getBlockEntity(arg3);
            if (!(lv instanceof ShulkerBoxBlockEntity)) {
                return true;
            }
            ShulkerBoxBlockEntity lv2 = (ShulkerBoxBlockEntity)lv;
            return lv2.suffocates();
        };
        return new ShulkerBoxBlock(arg4, arg22.strength(2.0f).dynamicBounds().nonOpaque().suffocates(lv).blockVision(lv));
    }

    private static PistonBlock createPistonBlock(boolean bl) {
        AbstractBlock.ContextPredicate lv = (arg, arg2, arg3) -> arg.get(PistonBlock.EXTENDED) == false;
        return new PistonBlock(bl, AbstractBlock.Settings.of(Material.PISTON).strength(1.5f).solidBlock(Blocks::never).suffocates(lv).blockVision(lv));
    }

    private static Block register(String string, Block arg) {
        return Registry.register(Registry.BLOCK, string, arg);
    }

    public static void refreshShapeCache() {
        Block.STATE_IDS.forEach(AbstractBlock.AbstractBlockState::initShapeCache);
    }

    static {
        for (Block lv : Registry.BLOCK) {
            for (BlockState lv2 : lv.getStateManager().getStates()) {
                Block.STATE_IDS.add(lv2);
            }
            lv.getLootTableId();
        }
    }
}

